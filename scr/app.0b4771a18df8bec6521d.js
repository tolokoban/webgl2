"use strict";(self.webpackChunkWebGL_2=self.webpackChunkWebGL_2||[]).push([[143],{6164:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".App {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n.App > div.body {\n    position: absolute;\n    left: 0;\n    top: 2rem;\n    width: 100%;\n    bottom: 0;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n\n.App > div.body > * {\n    position: absolute;\n    left: .5rem;\n    top: .5rem;\n    right: .5rem;\n    bottom: .5rem;\n    margin: 0;\n    padding: 0;\n}\n\n\n.App > nav {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 2rem;\n    margin: 0;\n    padding: 1rem;\n    overflow: auto;\n    transition: transform .2s;\n    transform: translateX(calc(1rem - 100%));\n}\n\n.App > nav.show {\n    transform: translateX(0);\n}","",{version:3,sources:["webpack://./src/app/app.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,SAAS;IACT,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,SAAS;IACT,WAAW;IACX,SAAS;IACT,SAAS;IACT,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,UAAU;IACV,YAAY;IACZ,aAAa;IACb,SAAS;IACT,UAAU;AACd;;;AAGA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,SAAS;IACT,aAAa;IACb,cAAc;IACd,yBAAyB;IACzB,wCAAwC;AAC5C;;AAEA;IACI,wBAAwB;AAC5B",sourcesContent:[".App {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n.App > div.body {\n    position: absolute;\n    left: 0;\n    top: 2rem;\n    width: 100%;\n    bottom: 0;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n\n.App > div.body > * {\n    position: absolute;\n    left: .5rem;\n    top: .5rem;\n    right: .5rem;\n    bottom: .5rem;\n    margin: 0;\n    padding: 0;\n}\n\n\n.App > nav {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 2rem;\n    margin: 0;\n    padding: 1rem;\n    overflow: auto;\n    transition: transform .2s;\n    transform: translateX(calc(1rem - 100%));\n}\n\n.App > nav.show {\n    transform: translateX(0);\n}"],sourceRoot:""}]);const l=i},3788:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,"html,\nbody,\n#root {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;IAGI,SAAS;IACT,mCAAmC;IACnC,kCAAkC;IAClC,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,UAAU;IACV,wBAAwB;AAC5B",sourcesContent:["html,\nbody,\n#root {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n\n"],sourceRoot:""}]);const l=i},100:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".pages-tools-Welcome {}\n","",{version:3,sources:["webpack://./src/pages/articles/welcome/welcome.css"],names:[],mappings:"AAAA,sBAAsB",sourcesContent:[".pages-tools-Welcome {}\n"],sourceRoot:""}]);const l=i},5921:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".pages-tools-painter-CodeGeneratorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    margin: 0.5em 0;\n}\n\n.pages-tools-painter-CodeGeneratorView > header {\n    padding: 0.25em 1em;\n    border-radius: 0.5em 0.5em 0 0;\n    flex: 0 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 1em;\n}\n\n.pages-tools-painter-CodeGeneratorView > pre {\n    font-size: 80%;\n    overflow: auto;\n    white-space: pre-wrap;\n    flex: 1 1 auto;\n    padding: 1em;\n}\n","",{version:3,sources:["webpack://./src/pages/tools/painter/code-generator/code-generator-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,8BAA8B;IAC9B,SAAS;IACT,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,eAAe;IACf,QAAQ;AACZ;;AAEA;IACI,cAAc;IACd,cAAc;IACd,qBAAqB;IACrB,cAAc;IACd,YAAY;AAChB",sourcesContent:[".pages-tools-painter-CodeGeneratorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    margin: 0.5em 0;\n}\n\n.pages-tools-painter-CodeGeneratorView > header {\n    padding: 0.25em 1em;\n    border-radius: 0.5em 0.5em 0 0;\n    flex: 0 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 1em;\n}\n\n.pages-tools-painter-CodeGeneratorView > pre {\n    font-size: 80%;\n    overflow: auto;\n    white-space: pre-wrap;\n    flex: 1 1 auto;\n    padding: 1em;\n}\n"],sourceRoot:""}]);const l=i},3697:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,"div.pages-tools-painter-PainterTools {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\ndiv.pages-tools-painter-PainterTools > *:first-child {\n    flex: 1 1 auto;\n    min-width: 60%;\n}\n\ndiv.pages-tools-painter-PainterTools > *:last-child {\n    flex: 1 1 auto;\n    max-width: 30%;\n}","",{version:3,sources:["webpack://./src/pages/tools/painter/painter-tools.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,oBAAoB;AACxB;;AAEA;IACI,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,cAAc;AAClB",sourcesContent:["div.pages-tools-painter-PainterTools {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\ndiv.pages-tools-painter-PainterTools > *:first-child {\n    flex: 1 1 auto;\n    min-width: 60%;\n}\n\ndiv.pages-tools-painter-PainterTools > *:last-child {\n    flex: 1 1 auto;\n    max-width: 30%;\n}"],sourceRoot:""}]);const l=i},6750:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".pages-tools-painter-ProgramCodeEditorView {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n    flex-wrap: wrap;\n    gap: 0.5em;\n    padding: .5em;\n}\n\n.pages-tools-painter-ProgramCodeEditorView > * {\n    flex: 1 1 auto;\n}","",{version:3,sources:["webpack://./src/pages/tools/painter/program-code-editor/program-code-editor-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,oBAAoB;IACpB,eAAe;IACf,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB",sourcesContent:[".pages-tools-painter-ProgramCodeEditorView {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n    flex-wrap: wrap;\n    gap: 0.5em;\n    padding: .5em;\n}\n\n.pages-tools-painter-ProgramCodeEditorView > * {\n    flex: 1 1 auto;\n}"],sourceRoot:""}]);const l=i},9163:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".Test {\n}\n","",{version:3,sources:["webpack://./src/test/test.css"],names:[],mappings:"AAAA;AACA",sourcesContent:[".Test {\n}\n"],sourceRoot:""}]);const l=i},9722:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,"/***************/\n/** RESET CSS **/\n/***************/\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for\n   people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n   scroll-behavior: auto;\n  }\n  \n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/*********/\n/* Theme */\n/*********/\n\nhtml {\n    font-family: sans-serif;\n    font-size: 16px;\n}\n\n/* Focus */\n* {\n    -webkit-tap-highlight-color: transparent;\n    accent-color: var(--theme-color-accent);\n}\n*::-moz-focus-inner {\n  border: 0;\n}\n*:focus {\n    outline: 2px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n    z-index: 999999;\n}\n\nh1,\nh2 {\n    border: 0.0625em solid currentColor;\n    border-image: linear-gradient(to right, currentColor, transparent) 0 0 1 0;\n    margin: 0.5rem 0 1rem 0;\n}\n\nh1 {\n    font-size: 1.2rem;\n}\n\nh2 {\n    font-size: 1.1rem;\n}\n\nhr {\n    border: none;\n    height: 1px;\n    width: 100%;\n    margin: 1rem 0;\n    background-image: linear-gradient(\n        to left,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.theme-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 2rem;\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0;\n    z-index: 1;\n}\n\n.theme-header > * {\n    flex: 1 1 auto;\n    margin: 0 0.5rem;\n}\n\n.theme-header > div {\n    text-align: center;\n}\n\n.theme-header > div:first-child {\n    text-align: left;\n}\n\n.theme-header > svg,\n.theme-header > img {\n    height: 1.5rem;\n    flex: 0 0 auto;\n}\n\nprogress[value] {\n    box-sizing: border-box;\n    margin: 1rem 0;\n    appearance: none;\n    border: none;\n    height: 0.5rem;\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n    position: relative;\n    overflow: hidden;\n}\n\nprogress[value]::-webkit-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n}\n\nprogress[value]::-webkit-progress-value {\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n}\n\nprogress[value]::-moz-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n}\n\nfieldset {\n    margin: 1rem 0;\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n}\n\nfieldset > legend {\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section-opacity-50);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n    font-size: 80%;\n    padding: 0.25em 1em;\n    border-radius: 100vw;\n}\n\n.theme-flashing-text {\n    animation: theme-flashing-text-anim 1s infinite;\n}\n\n@keyframes theme-flashing-text-anim {\n    0% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n    50% {\n        text-shadow: 0 0 0.2em var(--theme-color-accent);\n    }\n    100% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n}\n\n*:focus {\n    outline: 3px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n}\n*:focus:not(:focus-visible) {\n    outline: none;\n}\n\n.theme-color-primary {\n    background-color: var(--theme-color-primary);\n    color: var(--theme-color-on-primary);\n}\n.theme-color-primary-dark {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n}\n.theme-color-primary-light {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n.theme-color-accent {\n    background-color: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n.theme-color-accent-dark {\n    background-color: var(--theme-color-accent-dark);\n    color: var(--theme-color-on-accent-dark);\n}\n.theme-color-accent-light {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n.theme-color-screen {\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen);\n}\n.theme-color-frame {\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n.theme-color-section {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n}\n.theme-color-input {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n}\n.theme-color-error {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.theme-shadow-card {\n    box-shadow: var(--theme-shadow-card);\n}\n.theme-shadow-button {\n    box-shadow: var(--theme-shadow-button);\n}\n.theme-shadow-header {\n    box-shadow: var(--theme-shadow-header);\n}\n.theme-shadow-button-pressed {\n    box-shadow: var(--theme-shadow-button-pressed);\n}\n.theme-shadow-dialog {\n    box-shadow: var(--theme-shadow-dialog);\n}\n\na, a:visited { color: var(--theme-color-link) }","",{version:3,sources:["webpack://./src/ui/theme/theme.css"],names:[],mappings:"AAAA,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;;AAEhB,qBAAqB;AACrB;;;EAGE,sBAAsB;AACxB;;AAEA,0BAA0B;AAC1B;;;;;;;;;;EAUE,SAAS;AACX;;AAEA,2GAA2G;AAC3G;;EAEE,gBAAgB;AAClB;;AAEA,2BAA2B;AAC3B;EACE,uBAAuB;AACzB;;AAEA,2BAA2B;AAC3B;EACE,iBAAiB;EACjB,6BAA6B;EAC7B,gBAAgB;AAClB;;AAEA,0DAA0D;AAC1D;EACE,8BAA8B;AAChC;;AAEA,oCAAoC;AACpC;;EAEE,eAAe;EACf,cAAc;AAChB;;AAEA,yCAAyC;AACzC;;;;EAIE,aAAa;AACf;;AAEA;uCACuC;AACvC;EACE;GACC,qBAAqB;EACtB;;EAEA;;;IAGE,qCAAqC;IACrC,uCAAuC;IACvC,sCAAsC;IACtC,gCAAgC;EAClC;AACF;;AAEA,UAAU;AACV,UAAU;AACV,UAAU;;AAEV;IACI,uBAAuB;IACvB,eAAe;AACnB;;AAEA,UAAU;AACV;IACI,wCAAwC;IACxC,uCAAuC;AAC3C;AACA;EACE,SAAS;AACX;AACA;IACI,6CAA6C;IAC7C,mBAAmB;IACnB,eAAe;AACnB;;AAEA;;IAEI,mCAAmC;IACnC,0EAA0E;IAC1E,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,WAAW;IACX,cAAc;IACd;;;;;;KAMC;AACL;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,iDAAiD;IACjD,yCAAyC;IACzC,UAAU;IACV,UAAU;AACd;;AAEA;IACI,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,sBAAsB;IACtB,cAAc;IACd,gBAAgB;IAChB,YAAY;IACZ,cAAc;IACd;;;;;;;6EAOyE;IACzE,qBAAqB;IACrB,2EAA2E;IAC3E,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI;;;;;;;6EAOyE;IACzE,qBAAqB;IACrB,2EAA2E;AAC/E;;AAEA;IACI,kDAAkD;IAClD,qBAAqB;IACrB,iDAAiD;IACjD;;;;;;;;;;;;;;;;;;;SAmBK;AACT;;AAEA;IACI;;;;;;;;;;;;;;;;;;;SAmBK;IACL,kDAAkD;IAClD,qBAAqB;IACrB,iDAAiD;AACrD;;AAEA;IACI,cAAc;IACd,sCAAsC;IACtC,oCAAoC;IACpC,0DAA0D;AAC9D;;AAEA;IACI,sCAAsC;IACtC,+CAA+C;IAC/C,0DAA0D;IAC1D,cAAc;IACd,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,+CAA+C;AACnD;;AAEA;IACI;QACI,kCAAkC;IACtC;IACA;QACI,gDAAgD;IACpD;IACA;QACI,kCAAkC;IACtC;AACJ;;AAEA;IACI,6CAA6C;IAC7C,mBAAmB;AACvB;AACA;IACI,aAAa;AACjB;;AAEA;IACI,4CAA4C;IAC5C,oCAAoC;AACxC;AACA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C;AACA;IACI,kDAAkD;IAClD,0CAA0C;AAC9C;AACA;IACI,2CAA2C;IAC3C,mCAAmC;AACvC;AACA;IACI,gDAAgD;IAChD,wCAAwC;AAC5C;AACA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C;AACA;IACI,2CAA2C;IAC3C,mCAAmC;AACvC;AACA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;AACA;IACI,4CAA4C;IAC5C,oCAAoC;AACxC;AACA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;AACA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA;IACI,oCAAoC;AACxC;AACA;IACI,sCAAsC;AAC1C;AACA;IACI,sCAAsC;AAC1C;AACA;IACI,8CAA8C;AAClD;AACA;IACI,sCAAsC;AAC1C;;AAEA,eAAe,+BAA+B",sourcesContent:["/***************/\n/** RESET CSS **/\n/***************/\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for\n   people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n   scroll-behavior: auto;\n  }\n  \n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/*********/\n/* Theme */\n/*********/\n\nhtml {\n    font-family: sans-serif;\n    font-size: 16px;\n}\n\n/* Focus */\n* {\n    -webkit-tap-highlight-color: transparent;\n    accent-color: var(--theme-color-accent);\n}\n*::-moz-focus-inner {\n  border: 0;\n}\n*:focus {\n    outline: 2px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n    z-index: 999999;\n}\n\nh1,\nh2 {\n    border: 0.0625em solid currentColor;\n    border-image: linear-gradient(to right, currentColor, transparent) 0 0 1 0;\n    margin: 0.5rem 0 1rem 0;\n}\n\nh1 {\n    font-size: 1.2rem;\n}\n\nh2 {\n    font-size: 1.1rem;\n}\n\nhr {\n    border: none;\n    height: 1px;\n    width: 100%;\n    margin: 1rem 0;\n    background-image: linear-gradient(\n        to left,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.theme-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 2rem;\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0;\n    z-index: 1;\n}\n\n.theme-header > * {\n    flex: 1 1 auto;\n    margin: 0 0.5rem;\n}\n\n.theme-header > div {\n    text-align: center;\n}\n\n.theme-header > div:first-child {\n    text-align: left;\n}\n\n.theme-header > svg,\n.theme-header > img {\n    height: 1.5rem;\n    flex: 0 0 auto;\n}\n\nprogress[value] {\n    box-sizing: border-box;\n    margin: 1rem 0;\n    appearance: none;\n    border: none;\n    height: 0.5rem;\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n    position: relative;\n    overflow: hidden;\n}\n\nprogress[value]::-webkit-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n}\n\nprogress[value]::-webkit-progress-value {\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n}\n\nprogress[value]::-moz-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n}\n\nfieldset {\n    margin: 1rem 0;\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n}\n\nfieldset > legend {\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section-opacity-50);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n    font-size: 80%;\n    padding: 0.25em 1em;\n    border-radius: 100vw;\n}\n\n.theme-flashing-text {\n    animation: theme-flashing-text-anim 1s infinite;\n}\n\n@keyframes theme-flashing-text-anim {\n    0% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n    50% {\n        text-shadow: 0 0 0.2em var(--theme-color-accent);\n    }\n    100% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n}\n\n*:focus {\n    outline: 3px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n}\n*:focus:not(:focus-visible) {\n    outline: none;\n}\n\n.theme-color-primary {\n    background-color: var(--theme-color-primary);\n    color: var(--theme-color-on-primary);\n}\n.theme-color-primary-dark {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n}\n.theme-color-primary-light {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n.theme-color-accent {\n    background-color: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n.theme-color-accent-dark {\n    background-color: var(--theme-color-accent-dark);\n    color: var(--theme-color-on-accent-dark);\n}\n.theme-color-accent-light {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n.theme-color-screen {\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen);\n}\n.theme-color-frame {\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n.theme-color-section {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n}\n.theme-color-input {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n}\n.theme-color-error {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.theme-shadow-card {\n    box-shadow: var(--theme-shadow-card);\n}\n.theme-shadow-button {\n    box-shadow: var(--theme-shadow-button);\n}\n.theme-shadow-header {\n    box-shadow: var(--theme-shadow-header);\n}\n.theme-shadow-button-pressed {\n    box-shadow: var(--theme-shadow-button-pressed);\n}\n.theme-shadow-dialog {\n    box-shadow: var(--theme-shadow-dialog);\n}\n\na, a:visited { color: var(--theme-color-link) }"],sourceRoot:""}]);const l=i},1963:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,"div.ui-view-ButtonView {\n    position: relative;\n    margin: 0.5rem;\n}\n\ndiv.ui-view-ButtonView > button {\n    position: relative;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.25rem;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n    line-height: 1;\n}\n\ndiv.ui-view-ButtonView.flat > button,\ndiv.ui-view-ButtonView.flat > button:hover {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: none;\n}\n\ndiv.ui-view-ButtonView.outline > button {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: 0 0 0 0.25rem currentcolor inset, var(--theme-shadow-button);\n}\n\ndiv.ui-view-ButtonView > button > svg {\n    height: 1.5rem;\n    margin: 0 1rem 0 0;\n}\ndiv.ui-view-ButtonView > button > div {\n    order: 1;\n}\ndiv.ui-view-ButtonView.flip > button > svg {\n    order: 2;\n    margin: 0 0 0 1rem;\n}\n\ndiv.ui-view-ButtonView.wide > button {\n    display: flex;\n    width: 100%;\n    margin: 0.5rem 0;\n}\n\ndiv.ui-view-ButtonView > button > * {\n    flex: 0 0 auto;\n}\n\ndiv.ui-view-ButtonView.disabled > button {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\ndiv.ui-view-ButtonView > button:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView.flat > button:active {\n    box-shadow: none;\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView > button > div.label {\n    flex: 1 1 auto;\n    text-align: center;\n}\n\ndiv.ui-view-ButtonView > label.error {\n    position: absolute;\n    left: 0;\n    right: 0;\n    width: 100%;\n    opacity: 1;\n    transform: translateY(-100%);\n}\n","",{version:3,sources:["webpack://./src/ui/view/button/button-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,sBAAsB;IACtB,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,sBAAsB;IACtB,wBAAwB;IACxB,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,eAAe;IACf,sCAAsC;IACtC,oBAAoB;IACpB,wBAAwB;IACxB,cAAc;AAClB;;AAEA;;IAEI,6BAA6B;IAC7B,iCAAiC;IACjC,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;IAC7B,iCAAiC;IACjC,wEAAwE;AAC5E;;AAEA;IACI,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,QAAQ;AACZ;AACA;IACI,QAAQ;IACR,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,8CAA8C;IAC9C,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;IAChB,wBAAwB;AAC5B;;AAEA;IACI,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,WAAW;IACX,UAAU;IACV,4BAA4B;AAChC",sourcesContent:["div.ui-view-ButtonView {\n    position: relative;\n    margin: 0.5rem;\n}\n\ndiv.ui-view-ButtonView > button {\n    position: relative;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.25rem;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n    line-height: 1;\n}\n\ndiv.ui-view-ButtonView.flat > button,\ndiv.ui-view-ButtonView.flat > button:hover {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: none;\n}\n\ndiv.ui-view-ButtonView.outline > button {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: 0 0 0 0.25rem currentcolor inset, var(--theme-shadow-button);\n}\n\ndiv.ui-view-ButtonView > button > svg {\n    height: 1.5rem;\n    margin: 0 1rem 0 0;\n}\ndiv.ui-view-ButtonView > button > div {\n    order: 1;\n}\ndiv.ui-view-ButtonView.flip > button > svg {\n    order: 2;\n    margin: 0 0 0 1rem;\n}\n\ndiv.ui-view-ButtonView.wide > button {\n    display: flex;\n    width: 100%;\n    margin: 0.5rem 0;\n}\n\ndiv.ui-view-ButtonView > button > * {\n    flex: 0 0 auto;\n}\n\ndiv.ui-view-ButtonView.disabled > button {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\ndiv.ui-view-ButtonView > button:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView.flat > button:active {\n    box-shadow: none;\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView > button > div.label {\n    flex: 1 1 auto;\n    text-align: center;\n}\n\ndiv.ui-view-ButtonView > label.error {\n    position: absolute;\n    left: 0;\n    right: 0;\n    width: 100%;\n    opacity: 1;\n    transform: translateY(-100%);\n}\n"],sourceRoot:""}]);const l=i},2865:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,'.ui-view-CheckboxView {\n    padding: 0;\n    border: none;\n    background: transparent;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    cursor: pointer;\n    color: inherit;\n    margin: 0.25rem;\n}\n\n.ui-view-CheckboxView[disabled] {\n    opacity: 0.5;\n    font-style: italic;\n    cursor: default;\n    pointer-events: none;\n    font-style: italic;\n}\n\n.ui-view-CheckboxView.wide {\n    display: flex;\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-CheckboxView > div.label {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-grow: 1;\n    text-align: left;\n    transition: opacity 0.2s;\n    cursor: pointer;\n    padding: 0 0.75em;\n    order: 1;\n}\n\n.ui-view-CheckboxView.reverse > div.label {\n    order: -1;\n}\n\n.ui-view-CheckboxView > div.pin {\n    position: relative;\n    width: 34px;\n    height: 20px;\n    overflow: visible;\n    flex-grow: 0;\n    margin: 0.125rem;\n    order: 0;\n}\n\n.ui-view-CheckboxView > div.pin > div.bar {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-primary-light);\n    filter: grayscale(100%);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.bar {\n    filter: none;\n}\n\n.ui-view-CheckboxView > div.pin > div.btn {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin: 0;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    transform: translateX(0);\n    transition: transform 0.2s, opacity 0.2s;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-section);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.btn {\n    background-color: var(--theme-color-primary-dark);\n    transform: translateX(14px);\n}\n\n.ui-view-CheckboxView > header.hide {\n    display: none;\n}\n',"",{version:3,sources:["webpack://./src/ui/view/checkbox/checkbox-view.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,2BAA2B;IAC3B,uBAAuB;IACvB,eAAe;IACf,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,oBAAoB;IACpB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;IACvB,YAAY;IACZ,gBAAgB;IAChB,wBAAwB;IACxB,eAAe;IACf,iBAAiB;IACjB,QAAQ;AACZ;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,gBAAgB;IAChB,QAAQ;AACZ;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,sCAAsC;IACtC,kDAAkD;IAClD,uBAAuB;AAC3B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,SAAS;IACT,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,wBAAwB;IACxB,wCAAwC;IACxC,sCAAsC;IACtC,4CAA4C;AAChD;;AAEA;IACI,iDAAiD;IACjD,2BAA2B;AAC/B;;AAEA;IACI,aAAa;AACjB",sourcesContent:['.ui-view-CheckboxView {\n    padding: 0;\n    border: none;\n    background: transparent;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    cursor: pointer;\n    color: inherit;\n    margin: 0.25rem;\n}\n\n.ui-view-CheckboxView[disabled] {\n    opacity: 0.5;\n    font-style: italic;\n    cursor: default;\n    pointer-events: none;\n    font-style: italic;\n}\n\n.ui-view-CheckboxView.wide {\n    display: flex;\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-CheckboxView > div.label {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-grow: 1;\n    text-align: left;\n    transition: opacity 0.2s;\n    cursor: pointer;\n    padding: 0 0.75em;\n    order: 1;\n}\n\n.ui-view-CheckboxView.reverse > div.label {\n    order: -1;\n}\n\n.ui-view-CheckboxView > div.pin {\n    position: relative;\n    width: 34px;\n    height: 20px;\n    overflow: visible;\n    flex-grow: 0;\n    margin: 0.125rem;\n    order: 0;\n}\n\n.ui-view-CheckboxView > div.pin > div.bar {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-primary-light);\n    filter: grayscale(100%);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.bar {\n    filter: none;\n}\n\n.ui-view-CheckboxView > div.pin > div.btn {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin: 0;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    transform: translateX(0);\n    transition: transform 0.2s, opacity 0.2s;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-section);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.btn {\n    background-color: var(--theme-color-primary-dark);\n    transform: translateX(14px);\n}\n\n.ui-view-CheckboxView > header.hide {\n    display: none;\n}\n'],sourceRoot:""}]);const l=i},7471:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,"button.ui-view-FloatingButtonView {\n    font: inherit;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    border-radius: 50%;\n    width: 3.5rem;\n    height: 3.5rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n}\n\nbutton.ui-view-FloatingButtonView.small {\n    width: 2.5rem;\n    height: 2.5rem;\n}\n\nbutton.ui-view-FloatingButtonView.disabled {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\nbutton.ui-view-FloatingButtonView:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\nbutton.ui-view-FloatingButtonView > svg {\n    width: 80%;\n    height: 80%;\n}","",{version:3,sources:["webpack://./src/ui/view/floating-button/floating-button-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;IAClB,aAAa;IACb,cAAc;IACd,eAAe;IACf,sCAAsC;IACtC,oBAAoB;IACpB,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,8CAA8C;IAC9C,wBAAwB;AAC5B;;AAEA;IACI,UAAU;IACV,WAAW;AACf",sourcesContent:["button.ui-view-FloatingButtonView {\n    font: inherit;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    border-radius: 50%;\n    width: 3.5rem;\n    height: 3.5rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n}\n\nbutton.ui-view-FloatingButtonView.small {\n    width: 2.5rem;\n    height: 2.5rem;\n}\n\nbutton.ui-view-FloatingButtonView.disabled {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\nbutton.ui-view-FloatingButtonView:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\nbutton.ui-view-FloatingButtonView > svg {\n    width: 80%;\n    height: 80%;\n}"],sourceRoot:""}]);const l=i},7071:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".ui-view-IconView {\n    display: inline-block;\n    padding: 0;\n    transition: all 0.3s;\n    flex: 0 0 auto;\n}\n\n.ui-view-IconView.clickable {\n    cursor: pointer;\n}\n\n.ui-view-IconView.clickable:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.ui-view-IconView > svg {\n    height: 100%;\n}\n\n.ui-view-IconView.animate {\n    animation: ui-view-IconView-anim 1s linear infinite;\n}\n\n@keyframes ui-view-IconView-anim {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(-360deg); } \n}\n","",{version:3,sources:["webpack://./src/ui/view/icon/icon-view.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,UAAU;IACV,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,qBAAqB;AACzB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,mDAAmD;AACvD;;AAEA;EACE;IACE,uBAAuB,EAAE;EAC3B;IACE,0BAA0B,EAAE;AAChC",sourcesContent:[".ui-view-IconView {\n    display: inline-block;\n    padding: 0;\n    transition: all 0.3s;\n    flex: 0 0 auto;\n}\n\n.ui-view-IconView.clickable {\n    cursor: pointer;\n}\n\n.ui-view-IconView.clickable:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.ui-view-IconView > svg {\n    height: 100%;\n}\n\n.ui-view-IconView.animate {\n    animation: ui-view-IconView-anim 1s linear infinite;\n}\n\n@keyframes ui-view-IconView-anim {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(-360deg); } \n}\n"],sourceRoot:""}]);const l=i},1009:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".ui-view-LabelView {\n    opacity: .5;\n    font-size: .8rem;\n    line-height: 1.5rem;\n    margin: 0;\n    padding: 0 .5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.ui-view-LabelView.error {\n    color: var(--theme-color-error);\n}\n\n.ui-view-LabelView.hide {\n    visibility: hidden;\n}","",{version:3,sources:["webpack://./src/ui/view/label/label-view.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gBAAgB;IAChB,mBAAmB;IACnB,SAAS;IACT,gBAAgB;IAChB,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[".ui-view-LabelView {\n    opacity: .5;\n    font-size: .8rem;\n    line-height: 1.5rem;\n    margin: 0;\n    padding: 0 .5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.ui-view-LabelView.error {\n    color: var(--theme-color-error);\n}\n\n.ui-view-LabelView.hide {\n    visibility: hidden;\n}"],sourceRoot:""}]);const l=i},657:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".ui-view-SimpleComboView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-SimpleComboView.wide {\n    display: flex;\n    width: 100%;\n}\n\n.ui-view-SimpleComboView select {\n    width: 100%;\n    line-height: 2rem;\n    height: 2rem;\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n    appearance: none;\n    position: relative;\n    z-index: 0;\n}\n\n.ui-view-SimpleComboView div.container {\n    position: relative;\n    padding: 0;\n    margin: 0;\n}\n\n.ui-view-SimpleComboView div.container > div.dropdown-button {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 1.5rem;\n    display: grid;\n    place-items: center;\n    pointer-events: none;\n    border-left: 1px solid var(--theme-color-on-primary-opacity-25);\n    z-index: 1;\n}\n\n.ui-view-SimpleComboView select:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n","",{version:3,sources:["webpack://./src/ui/view/simple-combo/simple-combo-view.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,WAAW;AACf;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,sCAAsC;IACtC,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,QAAQ;IACR,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,oBAAoB;IACpB,+DAA+D;IAC/D,UAAU;AACd;;AAEA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C",sourcesContent:[".ui-view-SimpleComboView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-SimpleComboView.wide {\n    display: flex;\n    width: 100%;\n}\n\n.ui-view-SimpleComboView select {\n    width: 100%;\n    line-height: 2rem;\n    height: 2rem;\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n    appearance: none;\n    position: relative;\n    z-index: 0;\n}\n\n.ui-view-SimpleComboView div.container {\n    position: relative;\n    padding: 0;\n    margin: 0;\n}\n\n.ui-view-SimpleComboView div.container > div.dropdown-button {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 1.5rem;\n    display: grid;\n    place-items: center;\n    pointer-events: none;\n    border-left: 1px solid var(--theme-color-on-primary-opacity-25);\n    z-index: 1;\n}\n\n.ui-view-SimpleComboView select:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n"],sourceRoot:""}]);const l=i},4854:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,'div.view-CodeEditorView {\n    position: relative;\n    margin: 0;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 1rem;\n    color: #fffb;\n    background-color: #333;\n    padding: 1em;\n    line-height: 1.2;\n}\n\ndiv.view-CodeEditorView pre .comment {\n    color: #fff7;\n}\n\ndiv.view-CodeEditorView pre .number {\n    color: #fff;\n    font-weight: bolder;\n}\n\ndiv.view-CodeEditorView pre .type {\n    color: #cf9;\n}\n\ndiv.view-CodeEditorView pre .keyword {\n    color: #07f;\n}\n\ndiv.view-CodeEditorView pre .global {\n    color: #f70;\n}\n\ndiv.view-CodeEditorView pre .function {\n    color: #ed0;\n    font-weight: bold;\n}',"",{version:3,sources:["webpack://./src/view/code-editor/code-editor-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,SAAS;IACT,sEAAsE;IACtE,eAAe;IACf,YAAY;IACZ,sBAAsB;IACtB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;IACX,iBAAiB;AACrB",sourcesContent:['div.view-CodeEditorView {\n    position: relative;\n    margin: 0;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 1rem;\n    color: #fffb;\n    background-color: #333;\n    padding: 1em;\n    line-height: 1.2;\n}\n\ndiv.view-CodeEditorView pre .comment {\n    color: #fff7;\n}\n\ndiv.view-CodeEditorView pre .number {\n    color: #fff;\n    font-weight: bolder;\n}\n\ndiv.view-CodeEditorView pre .type {\n    color: #cf9;\n}\n\ndiv.view-CodeEditorView pre .keyword {\n    color: #07f;\n}\n\ndiv.view-CodeEditorView pre .global {\n    color: #f70;\n}\n\ndiv.view-CodeEditorView pre .function {\n    color: #ed0;\n    font-weight: bold;\n}'],sourceRoot:""}]);const l=i},4868:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".view-CodeView {\n    overflow: auto;\n}\n\n.view-CodeView pre {\n    margin: 0;\n    font-size: 80%;\n}\n","",{version:3,sources:["webpack://./src/view/code/code-view.css"],names:[],mappings:"AAAA;IACI,cAAc;AAClB;;AAEA;IACI,SAAS;IACT,cAAc;AAClB",sourcesContent:[".view-CodeView {\n    overflow: auto;\n}\n\n.view-CodeView pre {\n    margin: 0;\n    font-size: 80%;\n}\n"],sourceRoot:""}]);const l=i},2800:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".view-FallbackView {}\n","",{version:3,sources:["webpack://./src/view/fallback/fallback-view.css"],names:[],mappings:"AAAA,oBAAoB",sourcesContent:[".view-FallbackView {}\n"],sourceRoot:""}]);const l=i},2779:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".view-SceneView {\n    width: 640px;\n    height: 480px;\n    max-width: calc(100vw - 1rem);\n    max-height: 90vmin;\n}\n","",{version:3,sources:["webpack://./src/view/scene/scene-view.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,6BAA6B;IAC7B,kBAAkB;AACtB",sourcesContent:[".view-SceneView {\n    width: 640px;\n    height: 480px;\n    max-width: calc(100vw - 1rem);\n    max-height: 90vmin;\n}\n"],sourceRoot:""}]);const l=i},9551:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),a=t(3645),i=t.n(a)()(o());i.push([e.id,".view-ShaderCodeEditorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.view-ShaderCodeEditorView > .code-editor {\n    flex: 1 1 auto;\n    overflow: auto;\n}\n\n.view-ShaderCodeEditorView > header {\n    padding: .25em 1em;\n    border-radius: .5em .5em 0 0;\n}\n\n.view-ShaderCodeEditorView > header,\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    flex: 0 0 auto;\n}\n\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    font-size: 80%;\n    padding: 1em;\n    max-height: 40vh;\n    overflow: auto;\n    margin: 0;\n    white-space: pre-wrap;\n}","",{version:3,sources:["webpack://./src/view/shader-code-editor/shader-code-editor-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;AACV;;AAEA;IACI,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,4BAA4B;AAChC;;AAEA;;IAEI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,cAAc;IACd,SAAS;IACT,qBAAqB;AACzB",sourcesContent:[".view-ShaderCodeEditorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.view-ShaderCodeEditorView > .code-editor {\n    flex: 1 1 auto;\n    overflow: auto;\n}\n\n.view-ShaderCodeEditorView > header {\n    padding: .25em 1em;\n    border-radius: .5em .5em 0 0;\n}\n\n.view-ShaderCodeEditorView > header,\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    flex: 0 0 auto;\n}\n\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    font-size: 80%;\n    padding: 1em;\n    max-height: 40vh;\n    overflow: auto;\n    margin: 0;\n    white-space: pre-wrap;\n}"],sourceRoot:""}]);const l=i},6305:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(6164),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9317:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(3788),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},1865:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(100),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},935:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(5921),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2533:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(3697),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9266:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(6750),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},4370:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(9163),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},3003:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(9722),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9898:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(1963),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},5192:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(2865),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},8892:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(7471),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},160:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(7071),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},6825:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(1009),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2384:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(657),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},117:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(4854),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},6850:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(4868),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},5075:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(2800),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},7176:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(2779),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2357:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),a=t(7795),i=t.n(a),l=t(569),c=t.n(l),u=t(3565),s=t.n(u),A=t(9216),d=t.n(A),f=t(4589),h=t.n(f),m=t(9551),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),o()(m.Z,p);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},3397:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var c=l(t(8260)),u=l(t(7937)),s=a(t(7294)),A=t(9383);t(6305);var d=s.default.lazy((function(){return Promise.resolve().then((function(){return a(t(6047))}))})),f=s.default.lazy((function(){return Promise.resolve().then((function(){return a(t(2545))}))})),h=s.default.lazy((function(){return Promise.resolve().then((function(){return a(t(6317))}))})),m={"#test":s.default.createElement(d,null),"#tools/painter":s.default.createElement(f,null)};n.default=function(){var e=(0,A.useHash)(),n=i(s.default.useState(!0),2),t=n[0],r=(n[1],m[e]),o=!r||t?"show":"hide";return console.log("🚀 [app] page, navClassName = ",r,o),s.default.createElement("div",{className:"App"},s.default.createElement("div",{className:"body"},s.default.createElement(s.Suspense,{fallback:s.default.createElement(c.default,null)},null!=r?r:s.default.createElement(h,null))),s.default.createElement("nav",{className:"".concat(o," theme-shadow-header theme-color-primary-dark"),onClick:function(){return window.location.hash="#"}},s.default.createElement(u.default,{name:"menu"}),s.default.createElement("div",null,"WebGL2 Experiments"),s.default.createElement("div",null)))}},373:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(3397);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},5796:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o,a=r(t(373)),i=r(t(7294)),l=r(t(3935)),c=r(t(1311));t(9317),c.default.apply({colors:{black:"#000",white:"#fff",error:"#f30",input:"#fff",section:"#ddd",frame:"#bbb",screen:"#999",primary:c.default.shade("#9cd"),accent:c.default.shade("#f80")}}),console.log("VERSION",i.default.version),l.default.render(i.default.createElement(i.default.StrictMode,null,i.default.createElement(a.default,null)),document.getElementById("root")),(o=document.getElementById("tgd-logo"))&&(o.classList.add("vanish"),window.setTimeout((function(){var e=o.parentNode;e&&e.removeChild(o)}),900))},6317:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(6328);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},6328:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=a(t(7294)),c=i(t(9732)),u=i(t(7e3));function s(e){var n=["custom","pages-tools-Welcome"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(1865),n.default=function(e){return l.createElement("div",{className:s(e)},l.createElement(c.default,null,u.default))}},1306:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function l(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,l)}c((r=r.apply(e,n||[])).next())}))},l=this&&this.__generator||function(e,n){var t,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(a){return function(l){return function(a){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(e,i)}catch(e){a=[6,e],r=0}finally{t=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,l])}}},c=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var s=a(t(7294)),A=u(t(7583)),d=u(t(8168)),f=u(t(9681)),h=u(t(3693)),m=t(2905),p=t(99);t(935);var v={POINTS:"POINTS",LINE_STRIP:"LINE_STRIP",LINE_LOOP:"LINE_LOOP",LINES:"LINES",TRIANGLE_STRIP:"TRIANGLE_STRIP",TRIANGLE_FAN:"TRIANGLE_FAN",TRIANGLES:"TRIANGLES"};function b(e){var n=["custom","pages-tools-painter-CodeGeneratorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=c(s.useState(""),2),t=n[0],r=n[1],o=c((0,p.usePersistentState)("painter-options","minify",!0),2),a=o[0],u=o[1],g=c((0,p.usePersistentState)("painter-options","typescript",!0),2),C=g[0],y=g[1],w=c((0,p.usePersistentState)("painter-options","drawElements",!1),2),_=w[0],B=w[1],I=c((0,p.usePersistentState)("painter-options","primitive","TRIANGLES"),2),V=I[0],x=I[1];return s.useEffect((function(){if(e.analyse){var n=e.analyse,t=n.vertCode,o=n.fragCode,i=n.uniforms,l=n.attributes;r((0,m.makePainterClassCode)({vertCode:t,fragCode:o,uniforms:i,attributes:l,className:"Painter",minifyShaderCode:a,typescript:C,drawElements:_,primitive:V}))}}),[e.analyse,a,C,_,V]),s.createElement("div",{className:b(e)},s.createElement("header",{className:"theme-color-frame"},s.createElement(d.default,{label:"drawElements",value:_,onChange:B}),s.createElement(d.default,{label:"Minifier",value:a,onChange:u}),s.createElement(d.default,{label:"Typescript",value:C,onChange:y}),s.createElement(h.default,{options:v,value:V,onChange:x}),s.createElement(A.default,{label:"Copier",onClick:function(){return function(e){return i(this,void 0,void 0,(function(){var n;return l(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,navigator.clipboard.writeText(e)];case 1:return t.sent(),[3,3];case 2:return n=t.sent(),console.error("Unable to copy to the clipboard:",n),[3,3];case 3:return[2]}}))}))}(t)}}),s.createElement("div",null,"Ce code pèse ",s.createElement("b",null,t.length)," octets.")),s.createElement(f.default,{value:t,lang:"typescript"}))}},5266:function(e,n){var t=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};function r(e){var n,r,o=e.attributes,a=0;try{for(var i=t(o),l=i.next();!l.done;l=i.next()){var c=l.value;a+=c.length*c.size}}catch(e){n={error:e}}finally{try{l&&!l.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}return a}Object.defineProperty(n,"__esModule",{value:!0}),n.computeAttributesTotalLength=n.makeBindAttributesCode=n.makeAttributesLocationsCode=n.makeAttribsCountStaticCode=void 0,n.makeAttribsCountStaticCode=function(e){return"".concat(e.typescript?"private ":"","static ATTRIBS_COUNT = ").concat(r(e))},n.makeAttributesLocationsCode=function(e){return e.attributes.map((function(n){return"".concat(e.typescript?"private readonly":"//"," _").concat(n.name,": number")})).join("\n")},n.makeBindAttributesCode=function(e){var n,r,o=["const BPE = Float32Array.BYTES_PER_ELEMENT","const stride = ".concat(e.className,".ATTRIBS_COUNT * BPE"),"gl.bindBuffer(gl.ARRAY_BUFFER, this.vertBuff)"],a=e.attributes,i=0;try{for(var l=t(a),c=l.next();!c.done;c=l.next()){var u=c.value;o.push("const idx".concat(u.index," = this._").concat(u.name),"gl.enableVertexAttribArray(idx".concat(u.index,")"),"gl.vertexAttribPointer(idx".concat(u.index,", ").concat(u.size,", gl.FLOAT, false, stride, ").concat(i," * BPE)")),i+=u.size*u.length}}catch(e){n={error:e}}finally{try{c&&!c.done&&(r=l.return)&&r.call(l)}finally{if(n)throw n.error}}return o.join("\n")},n.computeAttributesTotalLength=r},4812:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.makeBuffersCode=void 0,n.makeBuffersCode=function(e){var n=["vert"];return e.drawElements&&n.push("elem"),n.map((function(n){return"".concat(e.typescript?"private readonly":"//"," ").concat(n,"Buff: WebGLBuffer")})).join("\n")}},2905:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.compressGLSL=n.makePainterClassCode=void 0;var r=t(3184),o=t(4812),a=t(5343),i=t(3685),l=t(5400),c=t(8099),u=t(9809),s=t(8514),A=t(5266);function d(e){var n=e;return n=f(n,/\/\/[^\n\r]*\n/g,""),n=f(n,/\/\*.+?\*\/|\/\/.*(?=[\n\r])/g,""),n=f(n=n.split(/[ \t]*\n[ \t\n\r]*/).join("\n"),/\s*\+\s*/g,"+"),n=f(n,/\s*\*\s*/g,"*"),n=f(n,/\s*\/\s*/g,"/"),n=f(n,/\s*-\s*/g,"-"),n=f(n,/\s*=\s*/g,"="),n=f(n,/\s*,\s*/g,","),n=f(n,/\s*\(\s*/g,"("),n=f(n,/\s*\)\s*/g,")"),n=f(n,/\s*\{\s*/g,"{"),f(n,/\s*\}\s*/g,"}")}function f(e,n,t){return e.split(n).join(t)}n.makePainterClassCode=function(e){var n=new Intl.DateTimeFormat("fr");return"/**\n * Code généré automatiquement le ".concat(n.format(new Date),"\n */\nexport default class ").concat(e.className," {\n").concat((0,r.indent)((0,o.makeBuffersCode)(e)),"\n").concat((0,r.indent)((0,A.makeAttributesLocationsCode)(e)),"    \n").concat((0,r.indent)((0,s.makeUniformsLocationsCode)(e)),"    \n").concat((0,r.indent)((0,A.makeAttribsCountStaticCode)(e)),"\n").concat((0,r.indent)(function(e){if(!e.typescript)return"";var n=["private vertData = new Float32Array()\nprivate vertCount = 0"];return e.drawElements&&n.push("private elemData = new Uint16Array()\nprivate elemCount = 0"),n.join("\n")}(e)),"\n").concat(e.typescript?"    private readonly prg: WebGLProgram\n":"","\n").concat((0,r.indent)((0,a.makeConstructorCode)(e)),"\n\n").concat((0,r.indent)((0,i.makeCreateDataArrayFunctionCode)(e)),"\n\n").concat((0,r.indent)((0,i.makePokeDataFunctionCode)(e)),"\n\n").concat((0,r.indent)((0,c.makeDestroyFunctionCode)(e)),"\n\n").concat((0,r.indent)((0,u.makePaintFunctionCode)(e)),"\n\n").concat((0,r.indent)((0,s.makeUniformsCode)(e)),"\n\n").concat((0,r.indent)((0,l.makeCreateShaderFunctionCode)(e)),"\n\n    static ").concat(e.typescript?"readonly ":"","VERT = `").concat(e.minifyShaderCode?d(e.vertCode):e.vertCode,"`\n    static ").concat(e.typescript?"readonly ":"","FRAG = `").concat(e.minifyShaderCode?d(e.fragCode):e.fragCode,"`\n}\n")},n.compressGLSL=d},3184:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.indent=void 0,n.indent=function(e,n){void 0===n&&(n=4);var t=Array(n).fill(" ").join("");return e.split("\n").map((function(e){return"".concat(t).concat(e)})).join("\n")}},5343:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.makeConstructorCode=void 0,n.makeConstructorCode=function(e){return"".concat(e.typescript?"constructor(\n    public readonly gl: WebGL2RenderingContext,\n    private readonly onPaint: (painter: ".concat(e.className,", time: number) => void\n) {"):"/**\n * @param {WebGL2RenderingContext} gl\n * @param {(painter: ".concat(e.className,", time: number) => void} painter\n */\nconstructor(gl, onPaint) {\n    this.gl = gl\n    this.onPaint = onPaint"),'\n    const prg = gl.createProgram()\n    if (!prg) throw Error("Unable to create a WebGL Program!")\n    ').concat(e.className,".createShader(gl, prg, gl.VERTEX_SHADER, ").concat(e.className,".VERT)\n    ").concat(e.className,".createShader(gl, prg, gl.FRAGMENT_SHADER, ").concat(e.className,".FRAG)\n    gl.linkProgram(prg)\n    this.prg = prg\n    ").concat(function(e){var n=["vert"];return e.drawElements&&n.push("elem"),n.map((function(e){return"const ".concat(e,"Buff = gl.createBuffer()\n    if (!").concat(e,'Buff) throw Error("Unable to create WebGL Buffer!")\n    this.').concat(e,"Buff = ").concat(e,"Buff")})).join("\n    ")}(e),"\n    ").concat(function(e){return e.attributes.map((function(e){return"this._".concat(e.name,' = gl.getAttribLocation(prg, "').concat(e.name,'")')})).join("\n    ")}(e),"\n    ").concat(function(e){return e.uniforms.map((function(n){return"this._$".concat(n.name,' = gl.getUniformLocation(prg, "').concat(n.name,'")').concat(e.typescript?" as WebGLUniformLocation":"")})).join("\n    ")}(e),"\n}")}},5400:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.makeCreateShaderFunctionCode=void 0,n.makeCreateShaderFunctionCode=function(e){return"".concat(e.typescript?"private static createShader(gl: WebGL2RenderingContext, prg: WebGLProgram, type: number, code: string) {":"static createShader(gl, prg, type, code) {",'\n    const shader = gl.createShader(type)\n    if (!shader) throw Error("Unable to create WebGL Shader!")\n\n    gl.shaderSource(shader, code)\n    gl.compileShader(shader)\n    gl.attachShader(prg, shader)\n}')}},3685:function(e,n,t){var r=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.makePushData=n.makeSwapDataFunctionCode=n.makePokeDataFunctionCode=n.makeCreateDataArrayFunctionCode=void 0;var o=t(5266);n.makeCreateDataArrayFunctionCode=function(e){if(e.attributes.length<1)return"// No attributes.";var n=(0,o.computeAttributesTotalLength)(e),t=["public createVertDataArray(vertCount".concat(e.typescript?": number): void":")"," {\n    this.vertCount = vertCount\n    this.vertData = new Float32Array(vertCount * ").concat(n,")\n}"),"public pushVertData() {\n    const { gl } = this\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertBuff)\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertData, gl.STATIC_DRAW)\n}"];return e.drawElements&&t.push("public setElemDataArray(elemData".concat(e.typescript?": Uint16Array): void":")"," {\n    const { gl } = this\n    this.elemCount = elemData.length\n    this.elemData = elemData\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.elemBuff)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, elemData, gl.STATIC_DRAW)\n}")),t.join("\n")},n.makePokeDataFunctionCode=function(e){var n,t,o=e.attributes;if(o.length<1)return"// No attributes.";var a=[];try{for(var i=r(o),l=i.next();!l.done;l=i.next()){var c=l.value,u=c.name,s=c.size;if(1===s)a.push(u);else if(2===s)a.push("".concat(u,"_X"),"".concat(u,"_Y"));else if(3===s)a.push("".concat(u,"_X"),"".concat(u,"_Y"),"".concat(u,"_Z"));else{if(4!==s)throw Error("Unexpected size ".concat(s,' for attribute "').concat(u,'"!'));a.push("".concat(u,"_X"),"".concat(u,"_Y"),"".concat(u,"_Z"),"".concat(u,"_W"))}}}catch(e){n={error:e}}finally{try{l&&!l.done&&(t=i.return)&&t.call(i)}finally{if(n)throw n.error}}return"public pokeVertData(\n    vertexIndex: number,\n    ".concat(a.map((function(e){return"".concat(e,": number")})).join(",\n    "),"\n) {\n    let index = vertexIndex * ").concat(e.className,".ATTRIBS_COUNT\n    const data = this.vertData\n    ").concat(a.map((function(e){return"data[index++] = ".concat(e)})).join(",\n    "),"\n}")},n.makeSwapDataFunctionCode=function(e){if(e.attributes.length<1)return"// No attributes.";var n=(0,o.computeAttributesTotalLength)(e);return"public static swapData(\n    data: Float32Array,\n    indexA: number,\n    indexB: number        \n) {\n    let ptrA = indexA * ".concat(e.className,".ATTRIBS_COUNT\n    let ptrB = indexB * ").concat(e.className,".ATTRIBS_COUNT\n    let tmp: number = 0\n    ").concat(function(e,n){for(var t=[],r=0;r<e;r++)t.push("tmp = data[ptrA]\n    data[ptrA++] = data[ptrB]\n    data[ptrB++] = tmp");return t}(n).join("\n    "),"\n}")},n.makePushData=function(e){return"public pushDataArray(data: Float32Array) {\n    const { gl, vertBuff } = this\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertBuff)\n    gl.bufferData(gl.ARRAY_BUFFER, data, ".concat("gl.STATIC_DRAW",")\n}\n\n/**\n * @param start First vertex index to push\n * @param end First vertex index to NOT push.\n */\npublic pushDataSubArray(data: Float32Array, start: number, end: number) {\n    const { gl, vertBuff } = this\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertBuff)\n    const N = ").concat(e.className,".ATTRIBS_COUNT\n    const subData = data.subarray(start * N, end * N)\n    gl.bufferSubData(\n        gl.ARRAY_BUFFER, \n        start * Float32Array.BYTES_PER_ELEMENT * N,\n        subData\n    )\n}")}},8099:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.makeDestroyFunctionCode=void 0,n.makeDestroyFunctionCode=function(e){var n=["vert"];return e.drawElements&&n.push("elem"),"public destroy() {\n    const { gl, prg, ".concat(n.map((function(e){return"".concat(e,"Buff")})).join(", ")," } = this\n    ").concat(n.map((function(e){return"gl.deleteBuffer(".concat(e,"Buff)")})).join("\n    "),"\n    gl.deleteProgram( prg )\n}")}},9809:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.makePaintFunctionCode=void 0;var r=t(3184),o=t(5266);n.makePaintFunctionCode=function(e){return"public readonly paint = (time: number) => {\n    const { gl, prg } = this\n    gl.useProgram(prg)\n    this.onPaint(this, time)\n".concat((0,r.indent)((0,o.makeBindAttributesCode)(e)),"\n").concat((0,r.indent)(e.drawElements?"gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.elemBuff)\ngl.drawElements(gl.".concat(e.primitive,", this.elemCount, gl.UNSIGNED_SHORT, 0)"):"gl.drawArrays(gl.".concat(e.primitive,", 0, this.vertCount)")),"\n}")}},8514:(e,n)=>{function t(e,n){var t="xyzw".substring(0,n).split("");return"$".concat(e.name,"(").concat(t.map((function(e){return"".concat(e,": number")})).join(", "),") {\n    this.gl.uniform").concat(t.length,"f(this._$").concat(e.name,", ").concat(t.join(", "),")\n}")}Object.defineProperty(n,"__esModule",{value:!0}),n.makeUniformsLocationsCode=n.makeUniformsCode=void 0,n.makeUniformsCode=function(e){return e.uniforms.map((function(e){return function(e){return 1===e.size?function(e){switch(e.type){case"FLOAT":return function(e){return"$".concat(e.name,"(value: number) {\n    this.gl.uniform1f(this._$").concat(e.name,", value)\n}")}(e);case"FLOAT_VEC2":return t(e,2);case"FLOAT_VEC3":return t(e,3);case"FLOAT_VEC4":return t(e,4);case"SAMPLER_2D":return function(e){var n=e.name,t=e.slot;return"$".concat(n,"(texture: WebGLTexture) {\n    const { gl } = this\n    gl.activeTexture(gl.TEXTURE").concat(t,")\n    gl.bindTexture(gl.TEXTURE_2D, texture)\n    gl.uniform1i(this._$").concat(e.name,", ").concat(t,")\n}")}(e);default:return'/* @TODO: Uniform "'.concat(e.name,'" of type ').concat(e.type," */")}}(e):'/* @TODO: Uniform "'.concat(e.name,'" of type ').concat(e.type,"[").concat(e.size,"] */")}(e)})).join("\n\n")},n.makeUniformsLocationsCode=function(e){return e.uniforms.map((function(n){return"".concat(e.typescript?"private readonly":"//"," _$").concat(n.name,": WebGLUniformLocation")})).join("\n")}},6826:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(1306);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},2545:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(7051);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},7051:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var c=a(t(7294)),u=l(t(6826)),s=l(t(1094));t(2533),n.default=function(){var e=i(c.useState("main"),2),n=e[0],t=(e[1],i(c.useState(null),2)),r=t[0],o=t[1];return c.createElement("div",{className:"pages-tools-painter-PainterTools"},c.createElement(s.default,{project:n,onAnalyse:o}),c.createElement(u.default,{project:n,analyse:r}))}},1094:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(3338);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},3338:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var c=a(t(7294)),u=t(99),s=l(t(6560)),A=t(8833);function d(e){var n=["custom","pages-tools-painter-ProgramCodeEditorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(9266),n.default=function(e){var n=i((0,u.usePersistentState)("vert-code",e.project,""),2),t=n[0],r=n[1],o=i(c.useState(""),2),a=o[0],l=o[1],f=i((0,u.usePersistentState)("frag-code",e.project,""),2),h=f[0],m=f[1],p=i(c.useState(""),2),v=p[0],b=p[1];return c.useEffect((function(){var n=(0,A.analyseProgram)({vert:t,frag:h});l(n.vertError),b(n.fragError),n.vertError||n.fragError||e.onAnalyse(n)}),[t,h]),c.createElement("div",{className:d(e)},c.createElement(s.default,{label:"Vertex Shader",error:a,value:t,onChange:r}),c.createElement(s.default,{label:"Fragment Shader",error:v,value:h,onChange:m}))}},6047:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(380);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},4834:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0});var t=function(){function e(n,t){var r=this;this.gl=n,this.onPaint=t,this.vertData=new Float32Array,this.vertCount=0,this.paint=function(n){var t=r,o=t.gl,a=t.prg;o.useProgram(a),r.onPaint(r,n);var i=Float32Array.BYTES_PER_ELEMENT,l=e.ATTRIBS_COUNT*i;o.bindBuffer(o.ARRAY_BUFFER,r.vertBuff);var c=r._attPos;o.enableVertexAttribArray(c),o.vertexAttribPointer(c,2,o.FLOAT,!1,l,0*i);var u=r._attUV;o.enableVertexAttribArray(u),o.vertexAttribPointer(u,2,o.FLOAT,!1,l,2*i),o.drawArrays(o.TRIANGLE_STRIP,0,r.vertCount)};var o=n.createProgram();if(!o)throw Error("Unable to create a WebGL Program!");e.createShader(n,o,n.VERTEX_SHADER,e.VERT),e.createShader(n,o,n.FRAGMENT_SHADER,e.FRAG),n.linkProgram(o),this.prg=o;var a=n.createBuffer();if(!a)throw Error("Unable to create WebGL Buffer!");this.vertBuff=a,this._attPos=n.getAttribLocation(o,"attPos"),this._attUV=n.getAttribLocation(o,"attUV"),this._$uniAspectRatio=n.getUniformLocation(o,"uniAspectRatio"),this._$uniShift=n.getUniformLocation(o,"uniShift"),this._$uniScale=n.getUniformLocation(o,"uniScale")}return e.prototype.createVertDataArray=function(e){this.vertCount=e,this.vertData=new Float32Array(4*e)},e.prototype.pushVertData=function(){var e=this.gl;e.bindBuffer(e.ARRAY_BUFFER,this.vertBuff),e.bufferData(e.ARRAY_BUFFER,this.vertData,e.STATIC_DRAW)},e.prototype.pokeVertData=function(n,t,r,o,a){var i=n*e.ATTRIBS_COUNT,l=this.vertData;l[i++]=t,l[i++]=r,l[i++]=o,l[i++]=a},e.prototype.destroy=function(){var e=this,n=e.gl,t=e.prg,r=e.vertBuff;n.deleteBuffer(r),n.deleteProgram(t)},e.prototype.$uniAspectRatio=function(e){this.gl.uniform1f(this._$uniAspectRatio,e)},e.prototype.$uniShift=function(e){this.gl.uniform1f(this._$uniShift,e)},e.prototype.$uniScale=function(e){this.gl.uniform1f(this._$uniScale,e)},e.createShader=function(e,n,t,r){var o=e.createShader(t);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(n,o)},e.ATTRIBS_COUNT=4,e.VERT="uniform float uniScale;\nuniform float uniAspectRatio;\nuniform float uniShift;\nattribute vec2 attPos;\nattribute vec2 attUV;\nvarying vec2 varUV;\nvarying float varLight;\nvoid main(){varUV=attUV+vec2(uniShift,0.0);\nvarLight=attUV.y < 0.5 ? 1.0/(uniScale*uniScale*uniScale): 1.0;\ngl_Position=vec4(attPos.x*uniScale,attPos.y*uniAspectRatio,1.0,attUV.y < 0.5 ? uniScale : 1.0);}",e.FRAG="precision mediump float;\nconst float MIN=0.1;\nconst float MAX=0.9;\nconst float CELLS=8.0;\nconst vec3 ORANGE=vec3(1.0,0.5,0.0);\nconst vec3 BLUE=vec3(0.0,0.6,1.0);\nvarying vec2 varUV;\nvarying float varLight;\nvoid main(){float u=fract(varUV.x*CELLS)-0.5;\nfloat v=fract(varUV.y*CELLS)-0.5;\nfloat r=4.0*(u*u+v*v);\nfloat a=smoothstep(0.8,0.9,r);\ngl_FragColor=vec4(mix(BLUE,ORANGE,a)*varLight,1.0);}",e}();n.default=t},380:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=a(t(7294)),c=i(t(4834)),u=i(t(4017));function s(e){var n=["custom","Test"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}function A(e){var n=new c.default(e,(function(n,t){e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT),n.$uniShift(1e-4*t),n.$uniScale(1+3*(1+Math.cos(5e-4*t))),n.$uniAspectRatio(e.drawingBufferWidth/e.drawingBufferHeight)}));return n.createVertDataArray(4),n.pokeVertData(0,-1,-1,0,1),n.pokeVertData(1,1,-1,1,1),n.pokeVertData(2,-1,1,0,0),n.pokeVertData(3,1,1,1,0),n.pushVertData(),new Promise((function(e){e((function(e){return n.paint(e)}))}))}t(4370),n.default=function(e){return l.createElement("div",{className:s(e)},l.createElement(u.default,{onInit:A}))}},9114:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},r=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,a=n.length;o<a;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))};Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){var o=0;return function(){for(var a=[],i=0;i<arguments.length;i++)a[i]=arguments[i];o&&window.clearTimeout(o),o=window.setTimeout((function(){o=0,e.apply(void 0,r([],t(a),!1))}),n)}}},3749:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(9114)),a=t(5139),i=r(t(6569)),l=r(t(4459));n.default={Debouncer:o.default,sleep:a.sleep,Throttler:i.default,UpdateTasks:l.default}},5139:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.sleep=void 0,n.sleep=function(e){return new Promise((function(n){return window.setTimeout(n,e)}))}},6569:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},r=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,a=n.length;o<a;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))};Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e,n){var o=0,a=0,i=function(){},l=[],c=function(){o=0,i.apply(void 0,r([],t(l),!1))};return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];i=e,l=t;var u=Date.now(),s=u-a;a=u,s>n?c():0===o&&(o=window.setTimeout(c,n-s))}}},4459:function(e,n){var t=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function l(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,l)}c((r=r.apply(e,n||[])).next())}))},r=this&&this.__generator||function(e,n){var t,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(a){return function(l){return function(a){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(e,i)}catch(e){a=[6,e],r=0}finally{t=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,l])}}};Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(){this.actionRunning=!1}return e.prototype.exec=function(e){this.curTask?this.nxtTask=e:this.curTask=e,this.actionRunning||this.action()},e.prototype.action=function(){return t(this,void 0,void 0,(function(){var e;return r(this,(function(n){switch(n.label){case 0:this.actionRunning=!0,n.label=1;case 1:n.trys.push([1,,8,9]),n.label=2;case 2:if(!this.curTask)return[3,7];n.label=3;case 3:return n.trys.push([3,5,,6]),[4,this.curTask()];case 4:return n.sent(),[3,6];case 5:return e=n.sent(),console.error("[UpdateTasks]",e),[3,6];case 6:return this.curTask=this.nxtTask,[3,2];case 7:return[3,9];case 8:return this.actionRunning=!1,[7];case 9:return[2]}}))}))},e}();n.default=o},7541:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.getExceptionMessage=void 0;var o=r(t(1142));n.getExceptionMessage=function(e){return e instanceof Error?e.message:"string"==typeof e?e:o.default.stringify(e,null,"  ")}},6535:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.getGrammarForLanguage=void 0,n.getGrammarForLanguage=function(e){return t};var t={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/g,lookbehind:!0,greedy:!0},{pattern:/"(^|[^\\:])\/\/.*"/g,lookbehind:!0,greedy:!0}],number:{pattern:/(^|[^\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?|\d+(?:_\d+)*n|(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?)(?![\w$])/,lookbehind:!0},type:{pattern:new RegExp("(".concat(["bvec2","bvec3","bvec4","dmat2","dmat2x2","dmat2x3","dmat2x4","dmat3","dmat3x2","dmat3x3","dmat3x4","dmat4","dmat4x2","dmat4x3","dmat4x4","dvec2","dvec3","dvec4","float","fvec2","fvec3","fvec4","isampler1D","isampler1DArray","isampler2D","isampler2DArray","isampler2DMS","isampler2DMSArray","isampler2DRect","isampler3D","isamplerBuffer","isamplerCube","isamplerCubeArray","ivec2","ivec3","ivec4","mat2","mat2x2","mat2x3","mat2x4","mat3","mat3x2","mat3x3","mat3x4","mat4","mat4x2","mat4x3","mat4x4","sample","sampler1D","sampler1DArray","sampler1DArrayShadow","sampler1DShadow","sampler2D","sampler2DArray","sampler2DArrayShadow","sampler2DMS","sampler2DMSArray","sampler2DRect","sampler2DRectShadow","sampler2DShadow","sampler3D","samplerBuffer","samplerCube","samplerCubeArray","samplerCubeArrayShadow","samplerCubeShadow","usampler1D","usampler1DArray","usampler2D","usampler2DArray","usampler2DMS","usampler2DMSArray","usampler2DRect","usampler3D","usamplerBuffer","usamplerCube","usamplerCubeArray","uvec2","uvec3","uvec4","vec2","vec3","vec4","void"].join("|"),")(?=[^a-zA-Z0-9_])"))},keyword:{pattern:new RegExp("(".concat(["attribute","centroid","const","discard","else","flat","highp","if","in","inout","invariant","layout","lowp","mediump","noperspective","out","patch","precision","smooth","subroutine","uniform","varying","active","asm","cast","class","common","enum","extern","external","filter","fixed","goto","half","hvec2","hvec3","hvec4","iimage1D","iimage1DArray","iimage2D","iimage2DArray","iimage3D","iimageBuffer","iimageCube","image1D","image1DArray","image1DArrayShadow","image1DShadow","image2D","image2DArray","image2DArrayShadow","image2DShadow","image3D","imageBuffer","imageCube","inline","input","interface","long","namespace","noinline","output","packed","partition","public","row_major","sampler3DRect","short","sizeof","static","superp","template","this","typedef","uimage1D","uimage1DArray","uimage2D","uimage2DArray","uimage3D","uimageBuffer","uimageCube","union","unsigned","using","volatile"].join("|"),")(?=[^a-zA-Z0-9_])"))},global:new RegExp("(".concat(["gl_DepthRange","gl_DepthRange.diff","gl_DepthRange.far","gl_DepthRange.near","gl_FragColor","gl_FragCoord","gl_FragDepth","gl_FrontFacing","gl_InstanceID","gl_PointCoord","gl_PointSize","gl_Position","gl_VertexID"].join("|"),")(?=[^a-zA-Z0-9_])")),function:new RegExp("(".concat(["abs","acos","acosh","all","any","asin","asinh","atan","atanh","ceil","clamp","cos","cosh","cross","degrees","determinant","dFdx","dFdy","distance","dot","equal","exp","exp2","faceforward","floatBitsToInt","floatBitsToUint","floor","fract","fwidth","greaterThan","greaterThanEqual","intBitsToFloat","inverse","inversesqrt","isinf","isnan","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","modf","normalize","not","notEqual","outerProduct","packHalf2x16","packSnorm2x16","packUnorm2x16","pow","radians","reflect","refract","round","roundEven","sign","sin","sinh","smoothstep","sqrt","step","tan","tanh","texelFetch","texelFetchOffset","texture","textureGrad","textureGradOffset","textureLod","textureLodOffset","textureOffset","textureProj","textureProjGrad","textureProjGradOffset","textureProjLod","textureProjLodOffset","textureProjOffset","textureSize","transpose","trunc","uintBitsToFloat","unpackHalf2x16","unpackSnorm2x16","unpackUnorm2x16"].join("|"),")(?=[^a-zA-Z0-9_])"))}},99:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=t(6618);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return a(i).default}}),o(t(6618),n)},6618:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function l(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,l)}c((r=r.apply(e,n||[])).next())}))},l=this&&this.__generator||function(e,n){var t,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(a){return function(l){return function(a){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(e,i)}catch(e){a=[6,e],r=0}finally{t=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,l])}}},c=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.usePersistentState=void 0;var s=a(t(7294)),A=u(t(1142)),d=new(function(){function e(){}return e.prototype.get=function(e,n,t){return i(this,void 0,void 0,(function(){var r;return l(this,(function(o){if(null===(r=window.localStorage.getItem(f(e,n))))return[2,t];try{return[2,A.default.parse(r)]}catch(e){return console.error(e),[2,t]}return[2]}))}))},e.prototype.set=function(e,n,t){return i(this,void 0,void 0,(function(){return l(this,(function(r){return window.localStorage.setItem(f(e,n),A.default.stringify(t)),[2]}))}))},e}());function f(e,n){return"wgl2:".concat(e,"\t").concat(n)}n.usePersistentState=function(e,n,t){var r=c(s.useState(t),2),o=r[0],a=r[1];return s.useEffect((function(){d.get(e,n,t).then(a)}),[t]),[o,function(t){a(t),d.set(e,n,t)}]},n.default=d},3724:function(e,n){var t=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};function r(e){return void 0===e}function o(e){return!Array.isArray(e)&&null!==e&&"object"==typeof e}function a(e){return"string"==typeof e}function i(e){return"string"==typeof e||void 0===e}function l(e){return"number"==typeof e}function c(e,n){if(void 0===n&&(n="data"),!l(e))throw Error("".concat(n," was expected to be a number but we got ").concat(typeof e,"!"))}function u(e){return"boolean"==typeof e}function s(e){var n,r;if(!Array.isArray(e))return!1;try{for(var o=t(e),i=o.next();!i.done;i=o.next())if(!a(i.value))return!1}catch(e){n={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return!0}function A(e){var n,r;if(!Array.isArray(e))return!1;try{for(var o=t(e),a=o.next();!a.done;a=o.next())if(!l(a.value))return!1}catch(e){n={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return!0}function d(e){return Array.isArray(e)}function f(e,n){if(void 0===n&&(n="data"),!d(e))throw Error("".concat(n," was expected to be an array but we got ").concat(typeof e,"!"))}Object.defineProperty(n,"__esModule",{value:!0}),n.isEMail=n.assertArray=n.ensureArray=n.isArray=n.ensureNumberArray=n.assertNumberArray=n.assertStringArray=n.isNumberArray=n.isStringArray=n.isArrayBuffer=n.assertBoolean=n.isBoolean=n.ensureNumber=n.assertNumberOrUndefined=n.assertNumber=n.isNumber=n.assertStringOrIUndefined=n.isStringOrIUndefined=n.ensureString=n.assertStringOrNumber=n.assertString=n.isString=n.assertObject=n.isObject=n.isUndefined=void 0,n.isUndefined=r,n.isObject=o,n.assertObject=function(e,n){if(void 0===n&&(n="data"),!o(e))throw Error("".concat(n," was expected to be an object but we got ").concat(typeof e,"!"))},n.isString=a,n.assertString=function(e,n){if(void 0===n&&(n="data"),!a(e))throw Error("".concat(n," was expected to be a string but we got ").concat(typeof e,"!"))},n.assertStringOrNumber=function(e,n){if(void 0===n&&(n=""),!a(e)&&!l(e))throw Error("".concat(n," was expected to be a string or a number but we got ").concat(typeof e,"!"))},n.ensureString=function(e,n){return a(e)?e:n},n.isStringOrIUndefined=i,n.assertStringOrIUndefined=function(e,n){if(void 0===n&&(n="data"),!i(e))throw Error("".concat(n," was expected to ba a string or undefined but we got ").concat(typeof e,"!"))},n.isNumber=l,n.assertNumber=c,n.assertNumberOrUndefined=function(e,n){if(void 0===n&&(n="data"),!l(e)&&!r(e))throw Error("".concat(n," was expected to be a number but we got ").concat(typeof e,"!"))},n.ensureNumber=function(e,n){return l(e)?e:n},n.isBoolean=u,n.assertBoolean=function(e,n){if(void 0===n&&(n="data"),!u(e))throw Error("".concat(n," was expected to be a boolean but we got ").concat(typeof e,"!"))},n.isArrayBuffer=function(e){return!!e&&e instanceof ArrayBuffer},n.isStringArray=s,n.isNumberArray=A,n.assertStringArray=function(e,n){if(void 0===n&&(n="data"),!s(e))throw Error("".concat(n," was expected to be an array of strings but we got ").concat(typeof e,"!"))},n.assertNumberArray=function(e,n){void 0===n&&(n="data"),f(e,n);for(var t=0;t<e.length;t++)c(e[t],"".concat(n,"[").concat(t,"]"))},n.ensureNumberArray=function(e,n){return void 0===n&&(n=[]),A(e)?e:n},n.isArray=d,n.ensureArray=function(e,n){return void 0===n&&(n=[]),d(e)?e:n},n.assertArray=f;var h=/^[^@ \t\n\r]+@(?:[A-Z0-9-]+\.)+[A-Z]{2,6}$/gi;n.isEMail=function(e){return!!a(e)&&("admin"===e||"test"===e||(h.lastIndex=-1,h.test(e)))}},8725:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},r=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0});var o=1e-6,a=255,i=1/6,l=1/15,c=1/99,u=1/a,s=function(){function e(n){void 0===n&&(n="#000000"),this.R=0,this.G=0,this.B=0,this.H=0,this.S=0,this.L=0,this.A=1,e.isValid(n)&&this.parse(n)}return e.fromColorOrString=function(n){return n?n instanceof e?n:new e(n):e.newBlack()},e.fromArrayRGB=function(n){if(!Array.isArray(n))return console.error("Invalid param rgb: ",n),e.fromRGB(0,0,0);for(;n.length<3;)n.push(0);var r=t(n,3),o=r[0],a=r[1],i=r[2];return e.fromRGB(o,a,i)},e.fromArrayRGBA=function(n){if(!Array.isArray(n))return console.error("Invalid param rgba: ",n),e.fromRGB(0,0,0);for(;n.length<4;)n.push(1);var r=t(n,4),o=r[0],a=r[1],i=r[2],l=r[3];return e.fromRGBA(o,a,i,l)},e.fromHSL=function(n,t,r){var o=new e;return o.H=n,o.S=t,o.L=r,o.hsl2rgb(),o},e.fromHSLA=function(n,t,r,o){var a=new e;return a.H=n,a.S=t,a.L=r,a.hsl2rgb(),a.A=o,a},e.isValid=function(e){if("string"!=typeof e)return!1;if("#"!==e.charAt(0))return!1;switch(e.length){case"#RGB".length:case"#RGBA".length:case"#RRGGBB".length:case"#RRGGBBAA".length:return!0;default:return!1}},e.contrast=function(n,t){var r=e.fromColorOrString(n),o=e.fromColorOrString(t),a=e.mix(r,o,o.A),i=r.luminance(),l=a.luminance(),c=.05;return i>l?(i+c)/(l+c):(l+c)/(i+c)},e.bestContrast=function(n){for(var t,o,a=[],i=1;i<arguments.length;i++)a[i-1]=arguments[i];var l=e.fromColorOrString(n),c=0,u=-1,s=0;try{for(var A=r(a),d=A.next();!d.done;d=A.next()){var f=d.value,h=e.contrast(l,f);h>c&&(c=h,u=s),s++}}catch(e){t={error:e}}finally{try{d&&!d.done&&(o=A.return)&&o.call(A)}finally{if(t)throw t.error}}return a[u]},e.luminance=function(n){return void 0===n?0:e.fromColorOrString(n).luminance()},e.luminanceStep=function(n){if(!e.isValid(n))return-1;var t=e.luminance(n),r=.05;return(t+r)/r>1.05/(t+r)?1:0},e.isDarkColor=function(n){return 0===e.luminanceStep(n)},e.isLightColor=function(n){return 1===e.luminanceStep(n)},e.makeDarker=function(n,t){if(void 0===t&&(t=.5),t<=0)return new e("#000");var r=e.fromColorOrString(n);return t>=1?r:e.fromHSLA(r.H,r.S,r.L,r.A*t)},e.makeHueRotated=function(n,t){void 0===t&&(t=.5);var r=e.fromColorOrString(n);return r.rgb2hsl(),r.H+=t-Math.floor(t),r.H>1&&r.H--,r.hsl2rgb(),r},e.makeTransparent=function(n,t){var r=e.fromColorOrString(n);return r.A=h(t),r},e.mix=function(n,t,r){void 0===r&&(r=.5);var o=e.fromColorOrString(n),a=e.fromColorOrString(t),i=1-r;return e.fromRGBA(r*a.R+i*o.R,r*a.G+i*o.G,r*a.B+i*o.B,r*a.A+i*o.A)},e.newBlack=function(){return e.fromRGB(0,0,0)},e.newWhite=function(){return e.fromRGB(1,1,1)},e.fromRGB=function(n,t,r){var o=new e;return o.R=n,o.G=t,o.B=r,o.A=1,o},e.fromRGBA=function(n,t,r,o){var a=new e;return a.R=n,a.G=t,a.B=r,a.A=o,a},e.normalize=function(n){return new e(n).stringify()},e.interpolate=function(n,t){if(t<1)return[];for(var r=n.map((function(n){return"string"==typeof n?new e(n):n})),o=[],a=1;a<=t;a++){var i=a/(t+1);o.push(e.ramp(r,i))}return o},e.ramp=function(n,t){if(void 0===t&&(t=.5),0===n.length)return e.newBlack();if(1===n.length)return n[0];var r=n.length-1,o=Math.floor(t*r),a=n[o];if(o===r)return a;var i=n[o+1],l=t*r-o;return e.mix(a,i,l)},e.prototype.copy=function(){var n=new e;return n.R=this.R,n.G=this.G,n.B=this.B,n.A=this.A,n.H=this.H,n.S=this.S,n.L=this.L,n},e.prototype.hsl2rgb=function(){var e=6*this.H,n=this.S,t=this.L,r=(1-Math.abs(t+t-1))*n,o=r*(1-Math.abs(e%2-1)),a=0,i=0,l=0;e<3?e<1?(a=r,i=o,l=0):e<2?(a=o,i=r,l=0):(a=0,i=r,l=o):e<4?(a=0,i=o,l=r):e<5?(a=o,i=0,l=r):(a=r,i=0,l=o);var c=t-.5*r;this.R=a+c,this.G=i+c,this.B=l+c},e.prototype.luminance=function(){var e=this,n=e.R,t=e.G,r=e.B,o=.03928,a=.07739938080495357,i=.055,l=.9478672985781991;return.2126*(n<o?n*a:Math.pow((n+i)*l,2.4))+.7152*(t<o?n*a:Math.pow((t+i)*l,2.4))+.0722*(r<o?n*a:Math.pow((r+i)*l,2.4))},e.prototype.luminanceStep=function(){return this.luminance()<.62?0:1},e.prototype.parse=function(e){void 0===e&&(e="#000000");var n=e.trim().toUpperCase();return!!(this.parseHexa.call(this,n)||this.parseRGB.call(this,n)||this.parseRGBA.call(this,n)||this.parseHSL.call(this,n))},e.prototype.rgb2hsl=function(){var e=this.R,n=this.G,t=this.B,r=Math.min(e,n,t),a=Math.max(e,n,t),l=a-r;this.L=.5*(a+r),l<o?(this.H=0,this.S=0):(this.S=l/(1-Math.abs(this.L+this.L-1)),this.H=a===e?n>=t?i*((n-t)/l):i*((t-n)/l):a===n?i*(2+(t-e)/l):i*(4+(e-n)/l))},e.prototype.stringify=function(){var e=m(this.R*a)+m(this.G*a)+m(this.B*a);this.A<1&&(e+=m(this.A*a));for(var n=!0,t=0;t<e.length;t+=2)if(e.charAt(t)!==e.charAt(t+1)){n=!1;break}return n&&(e=6===e.length?e.charAt(0)+e.charAt(2)+e.charAt(4):e.charAt(0)+e.charAt(2)+e.charAt(4)+e.charAt(6)),"#".concat(e)},e.prototype.toArrayRGB=function(){return[this.R,this.G,this.B]},e.prototype.toArrayRGBA=function(){return[this.R,this.G,this.B,this.A]},e.prototype.parseHexa=function(e){if("#"!==e.charAt(0))return!1;var n=0,t=0,r=0,o=1;switch(e.length){case"#fff".length:n=parseInt(e.charAt(1),16)*l,t=parseInt(e.charAt(2),16)*l,r=parseInt(e.charAt(3),16)*l;break;case"#fff7".length:n=parseInt(e.charAt(1),16)*l,t=parseInt(e.charAt(2),16)*l,r=parseInt(e.charAt(3),16)*l,o=parseInt(e.charAt(4),16)*l;break;case"#ffffff".length:n=parseInt(e.substr(1,2),16)*u,t=parseInt(e.substr(3,2),16)*u,r=parseInt(e.substr(5,2),16)*u;break;case"#ffffff77".length:n=parseInt(e.substr(1,2),16)*u,t=parseInt(e.substr(3,2),16)*u,r=parseInt(e.substr(5,2),16)*u,o=parseInt(e.substr(7,2),16)*u}return isNaN(n)||isNaN(t)||isNaN(r)||isNaN(o)?this.R=this.G=this.B=this.A=0:(this.R=n,this.G=t,this.B=r,this.A=o),!0},e.prototype.parseHSL=function(e){var n=f.exec(e);return!!n&&(this.H=h(.002785515320334262*parseInt(n[1],10)),this.S=h(parseInt(n[2],10)*c),this.L=h(parseInt(n[3],10)*c),this.A=1,this.hsl2rgb(),!0)},e.prototype.parseRGB=function(e){var n=A.exec(e);return!!n&&(this.R=h(parseInt(n[1],10)*u),this.G=h(parseInt(n[2],10)*u),this.B=h(parseInt(n[3],10)*u),this.A=1,!0)},e.prototype.parseRGBA=function(e){var n=d.exec(e);return!!n&&(this.R=h(parseInt(n[1],10)*u),this.G=h(parseInt(n[2],10)*u),this.B=h(parseInt(n[3],10)*u),this.A=h(parseFloat(n[4])),!0)},e}();n.default=s;var A=/^RGB[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/,d=/^RGBA[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/,f=/^HSL[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;function h(e){return Math.min(1,Math.max(0,e))}function m(e){var n=Math.min(Math.max(Math.floor(e+o),0),a).toString(16);return n.length<"FF".length&&(n="0".concat(n)),n}},7857:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(8725);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},8499:function(e,n,t){var r=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var a=o(t(7294)),i=t(7720),l=a.default.createElement("svg",{viewBox:"0 0 24 24",preserveAspectRatio:"meet xMidYMid"},a.default.createElement("path",{fill:"currentColor",d:"M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z"})),c=new(function(){function e(){this.icons=new Map}return e.prototype.register=function(e,n){this.icons.set(e,n)},e.prototype.registerFromPath=function(e,n){this.icons.set(e,a.default.createElement("svg",{viewBox:"0 0 24 24",preserveAspectRatio:"meet xMidYMid"},a.default.createElement("path",{fill:"currentColor",d:n})))},e.prototype.registerMany=function(e){var n,t;try{for(var o=r(Object.keys(e)),a=o.next();!a.done;a=o.next()){var i=a.value,l=e[i];this.registerFromPath(i,l)}}catch(e){n={error:e}}finally{try{a&&!a.done&&(t=o.return)&&t.call(o)}finally{if(n)throw n.error}}},e.prototype.make=function(e){var n;return null!==(n=this.icons.get(e))&&void 0!==n?n:l},e}());n.default=c,c.registerMany(i)},1078:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(8499);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},7377:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),n.useDebouncedEffect=void 0;var i=a(t(7294));n.useDebouncedEffect=function(e,n,t){var r=i.useRef(-1);i.useEffect((function(){window.clearTimeout(r.current),r.current=window.setTimeout(e,n)}),t)}},9383:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i};Object.defineProperty(n,"__esModule",{value:!0}),n.useHash=void 0;var l=a(t(7294));n.useHash=function(){var e=i(l.useState(window.location.hash),2),n=e[0],t=e[1];return l.useEffect((function(){var e=function(e){console.log("🚀 [hash] evt.newURL = ",e.newURL),t(window.location.hash)};return window.addEventListener("hashchange",e),function(){return window.removeEventListener("hashchange",e)}}),[]),n}},5525:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.useTogglePopup=n.useResizeObserver=n.useLocalStorageState=n.useDebouncedEffect=void 0;var r=t(7377);Object.defineProperty(n,"useDebouncedEffect",{enumerable:!0,get:function(){return r.useDebouncedEffect}});var o=t(7066);Object.defineProperty(n,"useLocalStorageState",{enumerable:!0,get:function(){return o.useLocalStorageState}});var a=t(4514);Object.defineProperty(n,"useResizeObserver",{enumerable:!0,get:function(){return a.useResizeObserver}});var i=t(1788);Object.defineProperty(n,"useTogglePopup",{enumerable:!0,get:function(){return i.useTogglePopup}})},7066:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.useLocalStorageState=void 0;var c=l(t(1142)),u=a(t(7294));n.useLocalStorageState=function(e,n,t){var r=i(u.useState(function(e,n,t){var r=window.localStorage.getItem(e);if(!r)return t?t(n):n;try{var o=c.default.parse(r);if(typeof o!=typeof n)throw Error("Incompatible types!");return t?t(o):o}catch(r){return console.error('Unexpected value in local storage "'.concat(e,'":'),r),t?t(n):n}}(n,e,t)),2),o=r[0],a=r[1];return[o,function(e){a(e),window.localStorage.setItem(n,c.default.stringify(e))}]}},4514:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.useResizeObserver=void 0;var c=a(t(7294)),u=l(t(3749));function s(e){return e?[e.clientWidth,e.clientHeight]:[0,0]}n.useResizeObserver=function(e,n){var t=i(c.useState(s(e)),2),r=t[0],o=t[1],a=c.useMemo((function(){var e=function(e,n){return o([e,n])};return"number"==typeof n&&n>0?u.default.Debouncer(e,n):e}),[n]);return c.useEffect((function(){if(o(s(e)),e){var n=new ResizeObserver((function(){var n=e.getBoundingClientRect(),t=n.width,r=n.height;a(t,r)}));return n.observe(e),function(){return n.unobserve(e)}}}),[e,a]),r}},1788:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i};Object.defineProperty(n,"__esModule",{value:!0}),n.useTogglePopup=void 0;var l=a(t(7294)),c=Math.random();function u(e,n){if(!e)return!1;var t=e.type,r=e.id,o=e.value;return"toggle-popup"===t&&r===n&&"boolean"==typeof o}function s(e,n){return{type:"toggle-popup",id:e,value:n}}function A(){window.history.back()}n.useTogglePopup=function(){var e=l.useRef(-1),n=l.useRef(null),t=i(l.useState(!1),2),r=t[0],o=t[1];return l.useEffect((function(){e.current=c++;var t=function(t){var r=t.state,a=n.current;if(n.current=r,u(r,e.current)){var i=r.value;o(i),i||(u(a,e.current)?!0===a.value&&A():window.history.forward())}};return window.addEventListener("popstate",t,!1),function(){return window.removeEventListener("popstate",t,!1)}}),[]),[r,function(t){if(t!==r)if(t){var a=e.current;window.history.pushState(s(a,!1),document.title,null);var i=s(a,!0);window.history.pushState(i,document.title,null),n.current=i,o(!0)}else A()}]}},4977:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0});var t=function(){function e(e){this.target=null!=e?e:window.document.body}return e.prototype.set=function(e,n){this.target.style.setProperty(this.sanitizeName(e),n)},e.prototype.get=function(e){return this.target.style.getPropertyValue(this.sanitizeName(e))},e.prototype.sanitizeName=function(e){return e.startsWith("--")?e:"--".concat(e)},e}();n.default=t},1311:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(352);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},352:function(e,n,t){var r=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var a=o(t(7857)),i=o(t(4977));t(3003);var l="theme",c="-color",u="-opacity-",s={apply:function(e,n){A=e;var t=new i.default(n);(function(e,n){var t=a.default.fromColorOrString(e.colors.white),r=a.default.fromColorOrString(e.colors.black);if(d(n,"primary",e.colors.primary.base,t,r),d(n,"primary-light",e.colors.primary.light,t,r),d(n,"primary-dark",e.colors.primary.dark,t,r),d(n,"accent",e.colors.accent.base,t,r),d(n,"accent-light",e.colors.accent.light,t,r),d(n,"accent-dark",e.colors.accent.dark,t,r),d(n,"error",e.colors.error,t,r),d(n,"screen",e.colors.screen,t,r),d(n,"frame",e.colors.frame,t,r),d(n,"section",e.colors.section,t,r),d(n,"input",e.colors.input,t,r),d(n,"white",e.colors.white,t,r),d(n,"black",e.colors.black,t,r),e.colors.link)n.set(h("link"),e.colors.link);else{var o=s.shade(e.colors.accent.base,.6),i=s.shade(e.colors.accent.base,.6);n.set(h("link"),a.default.bestContrast(e.colors.frame,e.colors.primary.dark,e.colors.primary.base,e.colors.primary.light,i.light,i.dark,e.colors.accent.dark,e.colors.accent.base,e.colors.accent.light,o.light,o.dark))}})(e,t),function(e,n){var t,o,a={card:1,button:2,header:4,"button-pressed":8,dialog:24};try{for(var i=r(Object.keys(a)),c=i.next();!c.done;c=i.next()){var u=c.value,s=.0625*a[u];n.set("".concat(l).concat("-shadow","-").concat(u),"0 ".concat(s,"rem ").concat(2*s,"rem ").concat("#000a"))}}catch(e){t={error:e}}finally{try{c&&!c.done&&(o=i.return)&&o.call(i)}finally{if(t)throw t.error}}}(0,t)},shade:function(e,n){void 0===n&&(n=.5);var t="string"==typeof e?new a.default(e):e;t.rgb2hsl();var r=t.H,o=t.S,i=t.L,l=t.A;return{base:t.stringify(),dark:a.default.fromHSLA(r,o,i*(1-n),l).stringify(),light:a.default.fromHSLA(r,o,i+(1-i)*n,l).stringify()}},get current(){return A},get defaultDarkTheme(){return{colors:{black:"#000",white:"#fff",error:"#f20",screen:"#ddd",frame:"#e9ebef",section:"#eff2f5",input:"#fff",primary:{dark:"#050A56",base:"#0083CB",light:"#00D4FE"},accent:{dark:"#802d00",base:"#cb4800",light:"#ff8c4d"},link:"#802d00"}}},get defaultLightTheme(){return{colors:{black:"#111e",white:"#eeee",error:"#f20",screen:"#bbb",frame:"#ccc",section:"#ddd",input:"#eee",primary:{dark:"#1f2859",base:"#3e50b4",light:"#5871ff"},accent:{dark:"#59501f",base:"#b4a23e",light:"#ffe658"}}}}};n.default=s;var A=s.defaultDarkTheme;function d(e,n,t,r,o){var i=a.default.fromColorOrString(t);e.set(h(n),i.stringify());for(var l=5;l<100;l+=5)i.A=.01*l,e.set(h(n,l),i.stringify());var c=a.default.bestContrast(i,r,o);for(e.set(m(n),c.stringify()),l=5;l<100;l+=5){var u=c.copy();u.A=.01*l*c.A,e.set(m(n,l),u.stringify())}}var f={"accent-dark":"-accent-dark","accent-light":"-accent-light","primary-dark":"-primary-dark","primary-light":"-primary-light",accent:"-accent",black:"-black",error:"-error",frame:"-frame",input:"-input",primary:"-primary",screen:"-screen",section:"-section",white:"-white",link:"-link"};function h(e,n){void 0===n&&(n=0);var t=f[e];return"".concat(l).concat(c).concat(t).concat(n>0?"".concat(u).concat(n):"")}function m(e,n){void 0===n&&(n=0);var t=f[e];return"".concat(l).concat(c).concat("-on").concat(t).concat(n>0?"".concat(u).concat(n):"")}},1211:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=a(t(7294)),c=i(t(1078)),u=i(t(5630)),s=i(t(3665));function A(e){var n=e.className,t=e.enabled,r=e.reversed,o=e.outline,a=e.wide,i=e.flat,l=e.icon,c=["custom","ui-view-ButtonView"];return"string"==typeof n&&c.push(n),!1===t&&c.push("disabled"),!0===a&&c.push("wide"),!0===i&&c.push("flat"),!0===o&&c.push("outline"),l&&c.push("with-icon"),!0===r&&c.push("flip"),c.join(" ")}t(9898),n.default=function(e){var n,t=e.label,r=e.icon,o=e.error,a=e.tag,i=e.onClick,d=function(){"function"==typeof i&&i(a)};return!1===e.visible?null:t?l.createElement("div",{className:A(e)},o&&l.createElement(s.default,{className:"error",error:!0,value:o}),l.createElement("button",{className:"theme-color-".concat(null!==(n=e.color)&&void 0!==n?n:"primary"),onClick:d},r&&c.default.make(r),l.createElement("div",{className:"label"},t))):l.createElement(u.default,{enabled:e.enabled,tag:a,icon:null!=r?r:"ok",className:A(e),onClick:d,color:e.color})}},7583:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(1211);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},7763:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var i=a(t(7294));function l(e){var n=e.className,t=e.value,r=e.enabled,o=e.wide,a=e.reverse,i=["custom","ui-view-CheckboxView"];return"string"==typeof n&&i.push(n),!0===t&&i.push("ok"),!1===r&&i.push("disabled"),!0===o&&i.push("wide"),!0===a&&i.push("reverse"),i.join(" ")}t(5192),n.default=function(e){var n=e.value,t=e.label,r=e.enabled,o=e.onChange;return i.createElement("button",{className:l(e),disabled:!1===r||void 0,onClick:function(){return o(!n)}},i.createElement("div",{className:"pin"},i.createElement("div",{className:"bar"}," "),i.createElement("div",{className:"btn"}," ")),i.createElement("div",{className:"label"},t))}},8168:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(7763);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},1626:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=a(t(7294)),c=i(t(1078));function u(e){var n=e.className,t=e.small,r=e.enabled,o=e.color,a=["custom","ui-view-FloatingButtonView"];return"string"==typeof n&&a.push(n),!0===t&&a.push("small"),!1===r&&a.push("disabled"),a.push("theme-color-".concat(null!=o?o:"primary")),a.join(" ")}t(8892),n.default=function(e){return l.createElement("button",{className:u(e),onClick:function(){var n=e.onClick,t=e.tag;n&&n(t)}},c.default.make(e.icon))}},5630:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(1626);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},402:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=a(t(7294)),c=i(t(1078));function u(e){var n=["custom","ui-view-IconView"];return"string"==typeof e.className&&n.push(e.className),!0===e.animate&&n.push("animate"),e.onClick&&n.push("clickable"),n.join(" ")}t(160),n.default=function(e){var n,t=null!==(n=e.size)&&void 0!==n?n:"1.5rem";return l.createElement("div",{title:e.title,className:u(e),tabIndex:0,onClick:function(){return e.onClick&&e.onClick()},style:{width:t,height:t}},c.default.make(e.name))}},7937:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(402);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},3665:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(5323);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},5323:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var i=a(t(7294));function l(e){var n=["custom","ui-view-LabelView"];return"string"==typeof e.className&&n.push(e.className),!0===e.error&&n.push("error"),!1===e.visible&&n.push("hide"),n.join(" ")}t(6825),n.default=function(e){var n=e.value,t=e.target;return void 0===n?null:i.createElement("label",{htmlFor:t,className:l(e)},n)}},3693:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(6754);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},6754:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var c=a(t(7294)),u=t(3724),s=l(t(3665));function A(e){var n=["custom","ui-view-SimpleComboView"];return"string"==typeof e.className&&n.push(e.className),!0===e.wide&&n.push("wide"),n.join(" ")}t(2384),n.default=function(e){var n=e.label,t=e.options,r=e.onChange,o=i(c.useState(e.value),2),a=o[0],l=o[1];return c.createElement("div",{className:A(e)},c.createElement(s.default,{value:n}),c.createElement("div",{className:"container theme-shadow-button"},c.createElement("select",{className:"theme-color-input",value:a,onChange:function(e){var n=e.target.value;l(n),r(n)}},Object.keys(t).map((function(e){return function(e,n){return(0,u.isString)(n)?c.createElement("option",{key:e,value:e},n):c.createElement("optgroup",{key:"grp/".concat(e),label:e},Object.keys(n).map((function(e){return c.createElement("option",{key:e,value:e},n[e])})))}(e,t[e])}))),c.createElement("div",{className:"dropdown-button theme-color-primary"},"▼")),c.createElement(s.default,{value:n,visible:!1}))}},4740:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=a(t(7294)),c=i(t(460)),u=i(t(5660)),s=t(6535);function A(e){var n=["custom","view-CodeEditorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(117),n.default=function(e){return l.createElement("div",{className:A(e)},l.createElement(c.default,{value:e.value,onValueChange:e.onChange,highlight:function(n){return u.default.highlight(n,(0,s.getGrammarForLanguage)(e.language),e.language)}}))}},9860:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(4740);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},1318:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=a(t(7294)),c=i(t(1942)),u=i(t(3390)),s=i(t(8987));function A(e){var n=["custom","view-CodeView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(6850),t(3479),u.default.registerLanguage("typescript",s.default),u.default.registerLanguage("glsl",c.default),n.default=function(e){var n=l.useRef(null);return l.useEffect((function(){n.current&&u.default.highlightElement(n.current)}),[e.value,n]),l.createElement("div",{className:A(e)},l.createElement("pre",null,l.createElement("code",{ref:n,className:"language-".concat(e.lang)},e.value)))}},9681:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(1318);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},4446:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var i=a(t(7294));function l(e){var n=["custom","view-FallbackView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(5075),n.default=function(e){return i.createElement("div",{className:l(e)},"Chargement en  cours...")}},8260:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(4446);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},4017:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var i=t(889);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return a(i).default}}),o(t(889),n)},889:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var i=a(t(7294));function l(e){var n=["custom","view-SceneView","theme-shadow-button"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(7176),n.default=function(e){var n=i.useCallback((function(n){if(n){var t=n.getContext("webgl2");t?e.onInit(t).then((function(e){var n=0,r=0,o=t.canvas,a=function(i){window.requestAnimationFrame(a);var l=Math.ceil(o.clientWidth),c=Math.ceil(o.clientHeight);l===n&&c===r||(n=l,r=c,o.width=l,o.height=c,t.viewport(0,0,l,c),console.log(l,c)),e(i)};window.requestAnimationFrame(a)})).catch(console.error):console.error("Unable to create a WebGL2 Context!")}}),[]);return i.createElement("canvas",{className:l(e),ref:n})}},6560:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(1143);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},1143:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},i=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var c=a(t(7294)),u=l(t(9860)),s=t(5525);function A(e){var n=["custom","view-ShaderCodeEditorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(2357),n.default=function(e){var n,t=i(c.useState(e.value),2),r=t[0],o=t[1];return(0,s.useDebouncedEffect)((function(){r!==e.value&&e.onChange(r)}),null!==(n=e.debouncing)&&void 0!==n?n:1e3,[r]),c.useEffect((function(){return o(e.value)}),[e.value]),c.createElement("div",{className:A(e)},c.createElement("header",{className:"theme-color-primary-dark"},e.label),c.createElement(u.default,{className:"code-editor",language:"glsl",value:r,onChange:o}),e.error&&c.createElement("pre",{className:"theme-color-error"},e.error))}},2979:function(e,n,t){var r=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,a=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i};Object.defineProperty(n,"__esModule",{value:!0}),n.analyseProgram=void 0;var a=t(699),i=t(7541),l=t(9457);function c(e,n,t){var r,o=n.createShader(e);if(!o)throw Error("Unable to create a WebGL shader of type ".concat(e,"!"));if(n.shaderSource(o,t),n.compileShader(o),!n.getShaderParameter(o,n.COMPILE_STATUS))throw Error(null!==(r=n.getShaderInfoLog(o))&&void 0!==r?r:"Unknow error while compiling the shader!");return o}n.analyseProgram=function(e){var n={vertCode:e.vert,fragCode:e.frag,vertError:null,fragError:null,uniforms:[],attributes:[]};try{var t=function(){var e=document.createElement("canvas").getContext("webgl2");if(!e)throw Error("Unable to create WebGL2 context!");return e}(),r=function(e){var n=e.createProgram();if(!n)throw Error("Unable to create WebGL Program!");return n}(t);if(function(e,n,t){try{var r=c(e.VERTEX_SHADER,e,t);e.attachShader(n,r)}catch(e){throw Error("<VERT>".concat(s(t,e)))}}(t,r,e.vert),function(e,n,t){try{var r=c(e.FRAGMENT_SHADER,e,t);e.attachShader(n,r)}catch(e){throw Error("<FRAG>".concat(s(t,e)))}}(t,r,e.frag),t.linkProgram(r),!t.getProgramParameter(r,t.LINK_STATUS)){var o=t.getProgramInfoLog(r);throw new Error("Could link WebGL2 program.\n"+o)}n.uniforms=(0,l.listUniforms)(t,r),n.attributes=(0,a.listAttributes)(t,r)}catch(e){var u=(0,i.getExceptionMessage)(e);u.startsWith("<VERT>")?n.vertError=u.substring("<VERT>".length):u.startsWith("<FRAG>")?n.fragError=u.substring("<FRAG>".length):(n.vertError=u,n.fragError=u)}return n};var u=/^(ERROR|WARNING): [0-9]+:([0-9]+)/gu;function s(e,n){var t,a,i,l,c=e.split("\n"),s=n instanceof Error?n.message:JSON.stringify(n),A=new Set,d=new Set;try{for(var f=r(s.split("\n")),h=f.next();!h.done;h=f.next()){var m=h.value;u.lastIndex=-1;var p=u.exec(m);if(p){var v=o(p,3),b=(v[0],v[1],v[2]),g=parseInt(b);if(!isNaN(g)){d.add(g);for(var C=-2;C<=2;C++){var y=g+C;y<1||y>c.length||A.add(y)}}}}}catch(e){t={error:e}}finally{try{h&&!h.done&&(a=f.return)&&a.call(f)}finally{if(t)throw t.error}}var w=[],_=Array.from(A).sort(),B=0;try{for(var I=r(_),V=I.next();!V.done;V=I.next()){(b=V.value)-B>1&&w.push(""),B=b;for(var x=d.has(b)?">":" ",E="".concat(b);E.length<7;)E=" ".concat(E);m=c[b-1],w.push("".concat(x).concat(E," | ").concat(m))}}catch(e){i={error:e}}finally{try{V&&!V.done&&(l=I.return)&&l.call(I)}finally{if(i)throw i.error}}return"".concat(s,"\n").concat(w.join("\n"))}},699:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.listAttributes=void 0;var r=t(6844);function o(e,n){switch(n.type){case e.FLOAT:return 1;case e.FLOAT_VEC2:return 2;case e.FLOAT_VEC3:return 3;case e.FLOAT_VEC4:return 4;default:return 0}}n.listAttributes=function(e,n){for(var t=[],a=e.getProgramParameter(n,e.ACTIVE_ATTRIBUTES),i=0;i<a;i++){var l=e.getActiveAttrib(n,i);if(l){var c=o(e,l);if(0===c)throw Error("Don't know how to deal with type \"".concat((0,r.lookupConstantName)(e,l.type),'" for attribute "').concat(l.name,'"!'));t.push({name:l.name,size:c,length:l.size,type:(0,r.lookupConstantName)(e,l.type),index:e.getAttribLocation(n,l.name)})}}return t.sort((function(e,n){return e.index-n.index})),console.log("🚀 attributes = ",t),t}},8833:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,r,o)}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),o(t(2979),n)},9457:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.listUniforms=void 0;var r=t(6844);n.listUniforms=function(e,n){for(var t=[],o=e.getProgramParameter(n,e.ACTIVE_UNIFORMS),a=0,i=0;i<o;i++){var l=e.getActiveUniform(n,i);l&&null!==e.getUniformLocation(n,l.name)&&(t.push({name:l.name,size:l.size,type:(0,r.lookupConstantName)(e,l.type),slot:a}),l.type===e.SAMPLER_2D&&(a+=l.size))}return console.log("🚀 [hooks] uniforms = ",t),t}},6844:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.lookupConstantName=void 0,n.lookupConstantName=function(e,n){for(var t in e)if(e[t]===n)return t;return"".concat(n,"?")}},7e3:e=>{e.exports="# Expérimentons WebGL2\n\n## Articles\n\n----\n\n[Test](#test)\n\n## Outils\n\n* [Painters](#tools/painter)"},7720:e=>{e.exports=JSON.parse('{"add":"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z","arrow-down":"M9,4H15V12H19.84L12,19.84L4.16,12H9V4Z","arrow-left":"M20,9V15H12V19.84L4.16,12L12,4.16V9H20Z","arrow-right":"M4,15V9H12V4.16L19.84,12L12,19.84V15H4Z","arrow-up":"M15,20H9V12H4.16L12,4.16L19.84,12H15V20Z","back":"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z","book":"M21,5C19.89,4.65 18.67,4.5 17.5,4.5C15.55,4.5 13.45,4.9 12,6C10.55,4.9 8.45,4.5 6.5,4.5C4.55,4.5 2.45,4.9 1,6V20.65C1,20.9 1.25,21.15 1.5,21.15C1.6,21.15 1.65,21.1 1.75,21.1C3.1,20.45 5.05,20 6.5,20C8.45,20 10.55,20.4 12,21.5C13.35,20.65 15.8,20 17.5,20C19.15,20 20.85,20.3 22.25,21.05C22.35,21.1 22.4,21.1 22.5,21.1C22.75,21.1 23,20.85 23,20.6V6C22.4,5.55 21.75,5.25 21,5M21,18.5C19.9,18.15 18.7,18 17.5,18C15.8,18 13.35,18.65 12,19.5V8C13.35,7.15 15.8,6.5 17.5,6.5C18.7,6.5 19.9,6.65 21,7V18.5Z","bug":"M14,12H10V10H14M14,16H10V14H14M20,8H17.19C16.74,7.22 16.12,6.55 15.37,6.04L17,4.41L15.59,3L13.42,5.17C12.96,5.06 12.5,5 12,5C11.5,5 11.04,5.06 10.59,5.17L8.41,3L7,4.41L8.62,6.04C7.88,6.55 7.26,7.22 6.81,8H4V10H6.09C6.04,10.33 6,10.66 6,11V12H4V14H6V15C6,15.34 6.04,15.67 6.09,16H4V18H6.81C7.85,19.79 9.78,21 12,21C14.22,21 16.15,19.79 17.19,18H20V16H17.91C17.96,15.67 18,15.34 18,15V14H20V12H18V11C18,10.66 17.96,10.33 17.91,10H20V8Z","center":"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M19,19H15V21H19A2,2 0 0,0 21,19V15H19M19,3H15V5H19V9H21V5A2,2 0 0,0 19,3M5,5H9V3H5A2,2 0 0,0 3,5V9H5M5,15H3V19A2,2 0 0,0 5,21H9V19H5V15Z","chevron-right":"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z","close":"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z","cut":"M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z","delete":"M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8.46,11.88L9.87,10.47L12,12.59L14.12,10.47L15.53,11.88L13.41,14L15.53,16.12L14.12,17.53L12,15.41L9.88,17.53L8.47,16.12L10.59,14L8.46,11.88M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z","edit":"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z","export":"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z","external-link":"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z","filter":"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z","fly":"M5,7H9A2,2,0,0,1,11,9V15A2,2,0,0,1,9,17H5V15H9V13H6V11H9V9H5V7M13,7H16A3,3,0,0,1,19,10V14A3,3,0,0,1,16,17H13V7M16,15A1,1,0,0,0,17,14V10A1,1,0,0,0,16,9H15V15H16Z","focus":"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M19,19H15V21H19A2,2 0 0,0 21,19V15H19M19,3H15V5H19V9H21V5A2,2 0 0,0 19,3M5,5H9V3H5A2,2 0 0,0 3,5V9H5M5,15H3V19A2,2 0 0,0 5,21H9V19H5V15Z","format-bold":"M13.5,15.5H10V12.5H13.5A1.5,1.5 0 0,1 15,14A1.5,1.5 0 0,1 13.5,15.5M10,6.5H13A1.5,1.5 0 0,1 14.5,8A1.5,1.5 0 0,1 13,9.5H10M15.6,10.79C16.57,10.11 17.25,9 17.25,8C17.25,5.74 15.5,4 13.25,4H7V18H14.04C16.14,18 17.75,16.3 17.75,14.21C17.75,12.69 16.89,11.39 15.6,10.79Z","format-bullets":"M7,5H21V7H7V5M7,13V11H21V13H7M4,4.5A1.5,1.5 0 0,1 5.5,6A1.5,1.5 0 0,1 4,7.5A1.5,1.5 0 0,1 2.5,6A1.5,1.5 0 0,1 4,4.5M4,10.5A1.5,1.5 0 0,1 5.5,12A1.5,1.5 0 0,1 4,13.5A1.5,1.5 0 0,1 2.5,12A1.5,1.5 0 0,1 4,10.5M7,19V17H21V19H7M4,16.5A1.5,1.5 0 0,1 5.5,18A1.5,1.5 0 0,1 4,19.5A1.5,1.5 0 0,1 2.5,18A1.5,1.5 0 0,1 4,16.5Z","format-italic":"M10,4V7H12.21L8.79,15H6V18H14V15H11.79L15.21,7H18V4H10Z","fullscreen":"M12 5.5L10 8H14L12 5.5M18 10V14L20.5 12L18 10M6 10L3.5 12L6 14V10M14 16H10L12 18.5L14 16M21 3H3C1.9 3 1 3.9 1 5V19C1 20.1 1.9 21 3 21H21C22.1 21 23 20.1 23 19V5C23 3.9 22.1 3 21 3M21 19H3V5H21V19Z","gear":"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z","gps-off":"M3.05,13H1V11H3.05C3.5,6.83 6.83,3.5 11,3.05V1H13V3.05C17.17,3.5 20.5,6.83 20.95,11H23V13H20.95C20.5,17.17 17.17,20.5 13,20.95V23H11V20.95C6.83,20.5 3.5,17.17 3.05,13M12,5A7,7 0 0,0 5,12A7,7 0 0,0 12,19A7,7 0 0,0 19,12A7,7 0 0,0 12,5Z","gps-on":"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M3.05,13H1V11H3.05C3.5,6.83 6.83,3.5 11,3.05V1H13V3.05C17.17,3.5 20.5,6.83 20.95,11H23V13H20.95C20.5,17.17 17.17,20.5 13,20.95V23H11V20.95C6.83,20.5 3.5,17.17 3.05,13M12,5A7,7 0 0,0 5,12A7,7 0 0,0 12,19A7,7 0 0,0 19,12A7,7 0 0,0 12,5Z","help":"M19.79,15.41C20.74,13.24 20.74,10.75 19.79,8.59L17.05,9.83C17.65,11.21 17.65,12.78 17.06,14.17L19.79,15.41M15.42,4.21C13.25,3.26 10.76,3.26 8.59,4.21L9.83,6.94C11.22,6.35 12.79,6.35 14.18,6.95L15.42,4.21M4.21,8.58C3.26,10.76 3.26,13.24 4.21,15.42L6.95,14.17C6.35,12.79 6.35,11.21 6.95,9.82L4.21,8.58M8.59,19.79C10.76,20.74 13.25,20.74 15.42,19.78L14.18,17.05C12.8,17.65 11.22,17.65 9.84,17.06L8.59,19.79M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,8A4,4 0 0,0 8,12A4,4 0 0,0 12,16A4,4 0 0,0 16,12A4,4 0 0,0 12,8Z","hide":"M11.83,9L15,12.16C15,12.11 15,12.05 15,12A3,3 0 0,0 12,9C11.94,9 11.89,9 11.83,9M7.53,9.8L9.08,11.35C9.03,11.56 9,11.77 9,12A3,3 0 0,0 12,15C12.22,15 12.44,14.97 12.65,14.92L14.2,16.47C13.53,16.8 12.79,17 12,17A5,5 0 0,1 7,12C7,11.21 7.2,10.47 7.53,9.8M2,4.27L4.28,6.55L4.73,7C3.08,8.3 1.78,10 1,12C2.73,16.39 7,19.5 12,19.5C13.55,19.5 15.03,19.2 16.38,18.66L16.81,19.08L19.73,22L21,20.73L3.27,3M12,7A5,5 0 0,1 17,12C17,12.64 16.87,13.26 16.64,13.82L19.57,16.75C21.07,15.5 22.27,13.86 23,12C21.27,7.61 17,4.5 12,4.5C10.6,4.5 9.26,4.75 8,5.2L10.17,7.35C10.74,7.13 11.35,7 12,7Z","import":"M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z","invert":"M21,9L17,5V8H10V10H17V13M7,11L3,15L7,19V16H14V14H7V11Z","link":"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z","logout":"M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z","map":"M15,19L9,16.89V5L15,7.11M20.5,3C20.44,3 20.39,3 20.34,3L15,5.1L9,3L3.36,4.9C3.15,4.97 3,5.15 3,5.38V20.5A0.5,0.5 0 0,0 3.5,21C3.55,21 3.61,21 3.66,20.97L9,18.9L15,21L20.64,19.1C20.85,19 21,18.85 21,18.62V3.5A0.5,0.5 0 0,0 20.5,3Z","menu":"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z","minus-o":"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7","more":"M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z","ok":"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z","orientation":"M9,1H3A2,2 0 0,0 1,3V16A2,2 0 0,0 3,18H9A2,2 0 0,0 11,16V3A2,2 0 0,0 9,1M9,15H3V3H9V15M21,13H13V15H21V21H9V20H6V21A2,2 0 0,0 8,23H21A2,2 0 0,0 23,21V15A2,2 0 0,0 21,13M23,10L19,8L20.91,7.09C19.74,4.31 17,2.5 14,2.5V1A9,9 0 0,1 23,10Z","pack":"M21,16.5C21,16.88 20.79,17.21 20.47,17.38L12.57,21.82C12.41,21.94 12.21,22 12,22C11.79,22 11.59,21.94 11.43,21.82L3.53,17.38C3.21,17.21 3,16.88 3,16.5V7.5C3,7.12 3.21,6.79 3.53,6.62L11.43,2.18C11.59,2.06 11.79,2 12,2C12.21,2 12.41,2.06 12.57,2.18L20.47,6.62C20.79,6.79 21,7.12 21,7.5V16.5M12,4.15L10.11,5.22L16,8.61L17.96,7.5L12,4.15M6.04,7.5L12,10.85L13.96,9.75L8.08,6.35L6.04,7.5M5,15.91L11,19.29V12.58L5,9.21V15.91M19,15.91V9.21L13,12.58V19.29L19,15.91Z","pause":"M14,19H18V5H14M6,19H10V5H6V19Z","play":"M8,5.14V19.14L19,12.14L8,5.14Z","plus-o":"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z","poster":"M13,9H18.5L13,3.5V9M6,2H14L20,8V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V4C4,2.89 4.89,2 6,2M6,20H15L18,20V12L14,16L12,14L6,20M8,9A2,2 0 0,0 6,11A2,2 0 0,0 8,13A2,2 0 0,0 10,11A2,2 0 0,0 8,9Z","profil":"M1.1,22.9L10.1,1.1,15.8,15.8,17.6,10.1,22.9,22.9Z","quote":"M9 22C8.4 22 8 21.6 8 21V18H4C2.9 18 2 17.1 2 16V4C2 2.9 2.9 2 4 2H20C21.1 2 22 2.9 22 4V16C22 17.1 21.1 18 20 18H13.9L10.2 21.7C10 21.9 9.8 22 9.5 22H9M10 16V19.1L13.1 16H20V4H4V16H10M16.3 6L14.9 9H17V13H13V8.8L14.3 6H16.3M10.3 6L8.9 9H11V13H7V8.8L8.3 6H10.3Z","qrcode":"M3,11H5V13H3V11M11,5H13V9H11V5M9,11H13V15H11V13H9V11M15,11H17V13H19V11H21V13H19V15H21V19H19V21H17V19H13V21H11V17H15V15H17V13H15V11M19,19V15H17V19H19M15,3H21V9H15V3M17,5V7H19V5H17M3,3H9V9H3V3M5,5V7H7V5H5M3,15H9V21H3V15M5,17V19H7V17H5Z","random":"M19.78,3H11.22C10.55,3 10,3.55 10,4.22V8H16V14H19.78C20.45,14 21,13.45 21,12.78V4.22C21,3.55 20.45,3 19.78,3M12.44,6.67C11.76,6.67 11.21,6.12 11.21,5.44C11.21,4.76 11.76,4.21 12.44,4.21A1.23,1.23 0 0,1 13.67,5.44C13.67,6.12 13.12,6.67 12.44,6.67M18.56,12.78C17.88,12.79 17.33,12.24 17.32,11.56C17.31,10.88 17.86,10.33 18.54,10.32C19.22,10.31 19.77,10.86 19.78,11.56C19.77,12.23 19.23,12.77 18.56,12.78M18.56,6.67C17.88,6.68 17.33,6.13 17.32,5.45C17.31,4.77 17.86,4.22 18.54,4.21C19.22,4.2 19.77,4.75 19.78,5.44C19.78,6.12 19.24,6.66 18.56,6.67M4.22,10H12.78A1.22,1.22 0 0,1 14,11.22V19.78C14,20.45 13.45,21 12.78,21H4.22C3.55,21 3,20.45 3,19.78V11.22C3,10.55 3.55,10 4.22,10M8.5,14.28C7.83,14.28 7.28,14.83 7.28,15.5C7.28,16.17 7.83,16.72 8.5,16.72C9.17,16.72 9.72,16.17 9.72,15.5A1.22,1.22 0 0,0 8.5,14.28M5.44,11.22C4.77,11.22 4.22,11.77 4.22,12.44A1.22,1.22 0 0,0 5.44,13.66C6.11,13.66 6.66,13.11 6.66,12.44V12.44C6.66,11.77 6.11,11.22 5.44,11.22M11.55,17.33C10.88,17.33 10.33,17.88 10.33,18.55C10.33,19.22 10.88,19.77 11.55,19.77A1.22,1.22 0 0,0 12.77,18.55H12.77C12.77,17.88 12.23,17.34 11.56,17.33H11.55Z","redo":"M18.4,10.6C16.55,9 14.15,8 11.5,8C6.85,8 2.92,11.03 1.54,15.22L3.9,16C4.95,12.81 7.95,10.5 11.5,10.5C13.45,10.5 15.23,11.22 16.62,12.38L13,16H22V7L18.4,10.6Z","refresh":"M19,8L15,12H18A6,6 0 0,1 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20A8,8 0 0,0 20,12H23M6,12A6,6 0 0,1 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4A8,8 0 0,0 4,12H1L5,16L9,12","search":"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z","share":"M18,16.08C17.24,16.08 16.56,16.38 16.04,16.85L8.91,12.7C8.96,12.47 9,12.24 9,12C9,11.76 8.96,11.53 8.91,11.3L15.96,7.19C16.5,7.69 17.21,8 18,8A3,3 0 0,0 21,5A3,3 0 0,0 18,2A3,3 0 0,0 15,5C15,5.24 15.04,5.47 15.09,5.7L8.04,9.81C7.5,9.31 6.79,9 6,9A3,3 0 0,0 3,12A3,3 0 0,0 6,15C6.79,15 7.5,14.69 8.04,14.19L15.16,18.34C15.11,18.55 15.08,18.77 15.08,19C15.08,20.61 16.39,21.91 18,21.91C19.61,21.91 20.92,20.61 20.92,19A2.92,2.92 0 0,0 18,16.08Z","show":"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z","snapshot":"M20,4H16.83L15,2H9L7.17,4H4A2,2 0 0,0 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6A2,2 0 0,0 20,4M20,18H4V6H8.05L9.88,4H14.12L15.95,6H20V18M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15Z","tp/password":"M12,8A1,1,0,0,1,13,9A1,1,0,0,1,12,10A1,1,0,0,1,11,9A1,1,0,0,1,12,8M21,11C21,16.6,17.2,21.7,12,23C6.8,21.7,3,16.6,3,11V5L12,1L21,5V11M12,6A3,3,0,0,0,9,9C9,10.3,9.8,11.4,11,11.8V18H13V16H15V14H13V11.8C14.2,11.4,15,10.3,15,9A3,3,0,0,0,12,6Z","translate":"M12.87,15.07L10.33,12.56L10.36,12.53C12.1,10.59 13.34,8.36 14.07,6H17V4H10V2H8V4H1V6H12.17C11.5,7.92 10.44,9.75 9,11.35C8.07,10.32 7.3,9.19 6.69,8H4.69C5.42,9.63 6.42,11.17 7.67,12.56L2.58,17.58L4,19L9,14L12.11,17.11L12.87,15.07M18.5,10H16.5L12,22H14L15.12,19H19.87L21,22H23L18.5,10M15.88,17L17.5,12.67L19.12,17H15.88Z","undo":"M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z","user":"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z","wait":"M6,2H18V8H18V8L14,12L18,16V16H18V22H6V16H6V16L10,12L6,8V8H6V2M16,16.5L12,12.5L8,16.5V20H16V16.5M12,11.5L16,7.5V4H8V7.5L12,11.5M10,6H14V6.75L12,8.75L10,6.75V6Z","warning":"M13 14H11V9H13M13 18H11V16H13M1 21H23L12 2L1 21Z","zoom-in":"M15.5,14L20.5,19L19,20.5L14,15.5V14.71L13.73,14.43C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.43,13.73L14.71,14H15.5M9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14M12,10H10V12H9V10H7V9H9V7H10V9H12V10Z","zoom-out":"M15.5,14H14.71L14.43,13.73C15.41,12.59 16,11.11 16,9.5A6.5,6.5 0 0,0 9.5,3A6.5,6.5 0 0,0 3,9.5A6.5,6.5 0 0,0 9.5,16C11.11,16 12.59,15.41 13.73,14.43L14,14.71V15.5L19,20.5L20.5,19L15.5,14M9.5,14C7,14 5,12 5,9.5C5,7 7,5 9.5,5C12,5 14,7 14,9.5C14,12 12,14 9.5,14M7,9H12V10H7V9Z"}')}},e=>{e.O(0,[977],(()=>(5796,e(e.s=5796)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,