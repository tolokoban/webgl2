(self.webpackChunkWebGL_2=self.webpackChunkWebGL_2||[]).push([[143],{6164:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".App {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n.App > div.body {\n    position: absolute;\n    left: 0;\n    top: 2rem;\n    width: 100%;\n    bottom: 0;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n\n.App > div.body > * {\n    position: absolute;\n    left: .5rem;\n    top: .5rem;\n    right: .5rem;\n    bottom: .5rem;\n    margin: 0;\n    padding: 0;\n}\n\n\n.App > nav {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 2rem;\n    margin: 0;\n    padding: 1rem;\n    overflow: auto;\n    transition: transform .2s;\n    transform: translateX(calc(1rem - 100%));\n}\n\n.App > nav.show {\n    transform: translateX(0);\n}","",{version:3,sources:["webpack://./src/app/app.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,SAAS;IACT,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,SAAS;IACT,WAAW;IACX,SAAS;IACT,SAAS;IACT,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,UAAU;IACV,YAAY;IACZ,aAAa;IACb,SAAS;IACT,UAAU;AACd;;;AAGA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,SAAS;IACT,aAAa;IACb,cAAc;IACd,yBAAyB;IACzB,wCAAwC;AAC5C;;AAEA;IACI,wBAAwB;AAC5B",sourcesContent:[".App {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n.App > div.body {\n    position: absolute;\n    left: 0;\n    top: 2rem;\n    width: 100%;\n    bottom: 0;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n\n.App > div.body > * {\n    position: absolute;\n    left: .5rem;\n    top: .5rem;\n    right: .5rem;\n    bottom: .5rem;\n    margin: 0;\n    padding: 0;\n}\n\n\n.App > nav {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 2rem;\n    margin: 0;\n    padding: 1rem;\n    overflow: auto;\n    transition: transform .2s;\n    transform: translateX(calc(1rem - 100%));\n}\n\n.App > nav.show {\n    transform: translateX(0);\n}"],sourceRoot:""}]);const s=i},4958:(e,t,n)=>{"use strict";n.d(t,{Z:()=>w});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a),s=n(1667),c=n.n(s),l=new URL(n(3245),n.b),u=new URL(n(1060),n.b),f=new URL(n(9297),n.b),d=new URL(n(3319),n.b),A=new URL(n(5416),n.b),p=new URL(n(5533),n.b),m=i()(o()),h=c()(l),v=c()(u),g=c()(f),b=c()(d),C=c()(A),y=c()(p);m.push([e.id,"\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url("+h+") format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url("+v+") format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url("+g+") format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+b+") format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+C+") format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+y+") format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n","",{version:3,sources:["webpack://./src/fonts/dosis.css"],names:[],mappings:";AACA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,gHAAgH;AAClH;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,mHAAmH;AACrH;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,yKAAyK;AAC3K;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,gHAAgH;AAClH;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,mHAAmH;AACrH;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,yKAAyK;AAC3K",sourcesContent:["\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url(./dosis/dosis-0.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url(./dosis/dosis-1.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url(./dosis/dosis-2.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./dosis/dosis-3.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./dosis/dosis-4.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./dosis/dosis-5.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n"],sourceRoot:""}]);const w=m},3788:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,"html,\nbody,\n#root {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: dosis, sans-serif;\n    font-size: 18px;\n}\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n\narticle {\n    width: 100%;\n    margin: 0;\n    padding: 1rem 0;\n    height: 100%;\n    overflow: auto;\n    display: grid;\n    grid-template-columns: 1fr min(320px, 50vw) min(320px, 50vw) 1fr;\n    grid-auto-rows: min-content;\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n\narticle > * {\n    grid-column: 2/4;\n}\n\narticle > *.full-width {\n    grid-column: 1/5;\n    width: 100%;\n}\n\narticle > *.left {\n    grid-column: 1/3;\n    place-self: flex-start center;\n}\n\narticle > *.right {\n    grid-column: 3/5;\n    place-self: flex-start center;\n}\n\narticle > *.margin-left {\n    grid-column: 1/2;\n}\n\narticle > *.margin-right {\n    grid-column: 4/5;\n}\n\n@media (max-width: 800px) {\n    article > *.left,\n    article > *.margin-left {\n        grid-column: 1/4;\n    }\n\n    article > *.right,\n    article > *.margin-right {\n        grid-column: 2/5;\n    }\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;IAGI,SAAS;IACT,mCAAmC;IACnC,kCAAkC;IAClC,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,8BAA8B;IAC9B,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,WAAW;IACX,SAAS;IACT,eAAe;IACf,YAAY;IACZ,cAAc;IACd,aAAa;IACb,gEAAgE;IAChE,2BAA2B;IAC3B,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;IACI,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI;;QAEI,gBAAgB;IACpB;;IAEA;;QAEI,gBAAgB;IACpB;AACJ",sourcesContent:["html,\nbody,\n#root {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: dosis, sans-serif;\n    font-size: 18px;\n}\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n\narticle {\n    width: 100%;\n    margin: 0;\n    padding: 1rem 0;\n    height: 100%;\n    overflow: auto;\n    display: grid;\n    grid-template-columns: 1fr min(320px, 50vw) min(320px, 50vw) 1fr;\n    grid-auto-rows: min-content;\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n\narticle > * {\n    grid-column: 2/4;\n}\n\narticle > *.full-width {\n    grid-column: 1/5;\n    width: 100%;\n}\n\narticle > *.left {\n    grid-column: 1/3;\n    place-self: flex-start center;\n}\n\narticle > *.right {\n    grid-column: 3/5;\n    place-self: flex-start center;\n}\n\narticle > *.margin-left {\n    grid-column: 1/2;\n}\n\narticle > *.margin-right {\n    grid-column: 4/5;\n}\n\n@media (max-width: 800px) {\n    article > *.left,\n    article > *.margin-left {\n        grid-column: 1/4;\n    }\n\n    article > *.right,\n    article > *.margin-right {\n        grid-column: 2/5;\n    }\n}\n"],sourceRoot:""}]);const s=i},8977:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".article-BasicPerspective {\n}\n","",{version:3,sources:["webpack://./src/pages/articles/basic-perspective/basic-perspective.css"],names:[],mappings:"AAAA;AACA",sourcesContent:[".article-BasicPerspective {\n}\n"],sourceRoot:""}]);const s=i},9697:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".pages-articles-AttributesView {}\n","",{version:3,sources:["webpack://./src/pages/articles/intro/attributes/attributes-view.css"],names:[],mappings:"AAAA,gCAAgC",sourcesContent:[".pages-articles-AttributesView {}\n"],sourceRoot:""}]);const s=i},8226:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".pages-articles-Webgl2contextView {}\n","",{version:3,sources:["webpack://./src/pages/articles/intro/webgl2context/webgl2context-view.css"],names:[],mappings:"AAAA,mCAAmC",sourcesContent:[".pages-articles-Webgl2contextView {}\n"],sourceRoot:""}]);const s=i},100:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".pages-tools-Welcome {}\n","",{version:3,sources:["webpack://./src/pages/articles/welcome/welcome.css"],names:[],mappings:"AAAA,sBAAsB",sourcesContent:[".pages-tools-Welcome {}\n"],sourceRoot:""}]);const s=i},5921:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".pages-tools-painter-CodeGeneratorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    margin: 0.5em 0;\n}\n\n.pages-tools-painter-CodeGeneratorView > header {\n    padding: 0.25em 1em;\n    border-radius: 0.5em 0.5em 0 0;\n    flex: 0 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 1em;\n}\n\n.pages-tools-painter-CodeGeneratorView > pre {\n    font-size: 80%;\n    overflow: auto;\n    white-space: pre-wrap;\n    flex: 1 1 auto;\n    padding: 1em;\n}\n","",{version:3,sources:["webpack://./src/pages/tools/painter/code-generator/code-generator-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,8BAA8B;IAC9B,SAAS;IACT,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,eAAe;IACf,QAAQ;AACZ;;AAEA;IACI,cAAc;IACd,cAAc;IACd,qBAAqB;IACrB,cAAc;IACd,YAAY;AAChB",sourcesContent:[".pages-tools-painter-CodeGeneratorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    margin: 0.5em 0;\n}\n\n.pages-tools-painter-CodeGeneratorView > header {\n    padding: 0.25em 1em;\n    border-radius: 0.5em 0.5em 0 0;\n    flex: 0 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 1em;\n}\n\n.pages-tools-painter-CodeGeneratorView > pre {\n    font-size: 80%;\n    overflow: auto;\n    white-space: pre-wrap;\n    flex: 1 1 auto;\n    padding: 1em;\n}\n"],sourceRoot:""}]);const s=i},677:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".pages-tools-painter-CodeOptionsView div.grid-3 {\n    display: grid;\n    grid-template-columns: auto auto 1fr;\n    gap: 0 1.5em;\n    place-items: center start;\n}\n\n.pages-tools-painter-CodeOptionsView div.grid-3 > div.hint {\n    opacity: 0.5;\n}\n\n.pages-tools-painter-CodeOptionsView .small-input {\n    width: 3em;\n}","",{version:3,sources:["webpack://./src/pages/tools/painter/code-options/code-options-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,oCAAoC;IACpC,YAAY;IACZ,yBAAyB;AAC7B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,UAAU;AACd",sourcesContent:[".pages-tools-painter-CodeOptionsView div.grid-3 {\n    display: grid;\n    grid-template-columns: auto auto 1fr;\n    gap: 0 1.5em;\n    place-items: center start;\n}\n\n.pages-tools-painter-CodeOptionsView div.grid-3 > div.hint {\n    opacity: 0.5;\n}\n\n.pages-tools-painter-CodeOptionsView .small-input {\n    width: 3em;\n}"],sourceRoot:""}]);const s=i},3697:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,"div.pages-tools-painter-PainterTools {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\ndiv.pages-tools-painter-PainterTools > div.tab-strip {\n    width: 100%;\n    height: 100%;\n}\n\ndiv.pages-tools-painter-PainterTools > div.tab-strip main > div > div {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: .5em;\n}","",{version:3,sources:["webpack://./src/pages/tools/painter/painter-tools.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,uBAAuB;IACvB,SAAS;AACb",sourcesContent:["div.pages-tools-painter-PainterTools {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\ndiv.pages-tools-painter-PainterTools > div.tab-strip {\n    width: 100%;\n    height: 100%;\n}\n\ndiv.pages-tools-painter-PainterTools > div.tab-strip main > div > div {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: .5em;\n}"],sourceRoot:""}]);const s=i},6750:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".pages-tools-painter-ProgramCodeEditorView {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n    flex-wrap: wrap;\n    gap: 0.5em;\n    padding: .5em;\n}\n\n.pages-tools-painter-ProgramCodeEditorView > * {\n    flex: 1 1 auto;\n}","",{version:3,sources:["webpack://./src/pages/tools/painter/program-code-editor/program-code-editor-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,oBAAoB;IACpB,eAAe;IACf,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB",sourcesContent:[".pages-tools-painter-ProgramCodeEditorView {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n    flex-wrap: wrap;\n    gap: 0.5em;\n    padding: .5em;\n}\n\n.pages-tools-painter-ProgramCodeEditorView > * {\n    flex: 1 1 auto;\n}"],sourceRoot:""}]);const s=i},9163:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".Test {\n}\n","",{version:3,sources:["webpack://./src/test/test.css"],names:[],mappings:"AAAA;AACA",sourcesContent:[".Test {\n}\n"],sourceRoot:""}]);const s=i},9722:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,"/***************/\n/** RESET CSS **/\n/***************/\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for\n   people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n   scroll-behavior: auto;\n  }\n  \n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/*********/\n/* Theme */\n/*********/\n\nhtml {\n    font-family: sans-serif;\n    font-size: 16px;\n}\n\n/* Focus */\n* {\n    -webkit-tap-highlight-color: transparent;\n    accent-color: var(--theme-color-accent);\n}\n*::-moz-focus-inner {\n  border: 0;\n}\n*:focus {\n    outline: 2px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n    z-index: 999999;\n}\n\nh1,\nh2 {\n    border: 0.0625em solid currentColor;\n    border-image: linear-gradient(to right, currentColor, transparent) 0 0 1 0;\n    margin: 0.5rem 0 1rem 0;\n}\n\nh1 {\n    font-size: 1.2rem;\n}\n\nh2 {\n    font-size: 1.1rem;\n}\n\nhr {\n    border: none;\n    height: 1px;\n    width: 100%;\n    margin: 1rem 0;\n    background-image: linear-gradient(\n        to left,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.theme-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 2rem;\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0;\n    z-index: 1;\n}\n\n.theme-header > * {\n    flex: 1 1 auto;\n    margin: 0 0.5rem;\n}\n\n.theme-header > div {\n    text-align: center;\n}\n\n.theme-header > div:first-child {\n    text-align: left;\n}\n\n.theme-header > svg,\n.theme-header > img {\n    height: 1.5rem;\n    flex: 0 0 auto;\n}\n\nprogress[value] {\n    box-sizing: border-box;\n    margin: 1rem 0;\n    appearance: none;\n    border: none;\n    height: 0.5rem;\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n    position: relative;\n    overflow: hidden;\n}\n\nprogress[value]::-webkit-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n}\n\nprogress[value]::-webkit-progress-value {\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n}\n\nprogress[value]::-moz-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n}\n\nfieldset {\n    margin: 1rem 0;\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n}\n\nfieldset > legend {\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section-opacity-50);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n    font-size: 80%;\n    padding: 0.25em 1em;\n    border-radius: 100vw;\n}\n\n.theme-flashing-text {\n    animation: theme-flashing-text-anim 1s infinite;\n}\n\n@keyframes theme-flashing-text-anim {\n    0% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n    50% {\n        text-shadow: 0 0 0.2em var(--theme-color-accent);\n    }\n    100% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n}\n\n*:focus {\n    outline: 3px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n}\n*:focus:not(:focus-visible) {\n    outline: none;\n}\n\n.theme-color-primary {\n    background-color: var(--theme-color-primary);\n    color: var(--theme-color-on-primary);\n}\n.theme-color-primary-dark {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n}\n.theme-color-primary-light {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n.theme-color-accent {\n    background-color: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n.theme-color-accent-dark {\n    background-color: var(--theme-color-accent-dark);\n    color: var(--theme-color-on-accent-dark);\n}\n.theme-color-accent-light {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n.theme-color-screen {\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen);\n}\n.theme-color-frame {\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n.theme-color-section {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n}\n.theme-color-input {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n}\n.theme-color-error {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.theme-shadow-card {\n    box-shadow: var(--theme-shadow-card);\n}\n.theme-shadow-button {\n    box-shadow: var(--theme-shadow-button);\n}\n.theme-shadow-header {\n    box-shadow: var(--theme-shadow-header);\n}\n.theme-shadow-button-pressed {\n    box-shadow: var(--theme-shadow-button-pressed);\n}\n.theme-shadow-dialog {\n    box-shadow: var(--theme-shadow-dialog);\n}\n\na, a:visited { color: var(--theme-color-link) }","",{version:3,sources:["webpack://./src/ui/theme/theme.css"],names:[],mappings:"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",sourcesContent:["/***************/\n/** RESET CSS **/\n/***************/\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for\n   people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n   scroll-behavior: auto;\n  }\n  \n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/*********/\n/* Theme */\n/*********/\n\nhtml {\n    font-family: sans-serif;\n    font-size: 16px;\n}\n\n/* Focus */\n* {\n    -webkit-tap-highlight-color: transparent;\n    accent-color: var(--theme-color-accent);\n}\n*::-moz-focus-inner {\n  border: 0;\n}\n*:focus {\n    outline: 2px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n    z-index: 999999;\n}\n\nh1,\nh2 {\n    border: 0.0625em solid currentColor;\n    border-image: linear-gradient(to right, currentColor, transparent) 0 0 1 0;\n    margin: 0.5rem 0 1rem 0;\n}\n\nh1 {\n    font-size: 1.2rem;\n}\n\nh2 {\n    font-size: 1.1rem;\n}\n\nhr {\n    border: none;\n    height: 1px;\n    width: 100%;\n    margin: 1rem 0;\n    background-image: linear-gradient(\n        to left,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.theme-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 2rem;\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0;\n    z-index: 1;\n}\n\n.theme-header > * {\n    flex: 1 1 auto;\n    margin: 0 0.5rem;\n}\n\n.theme-header > div {\n    text-align: center;\n}\n\n.theme-header > div:first-child {\n    text-align: left;\n}\n\n.theme-header > svg,\n.theme-header > img {\n    height: 1.5rem;\n    flex: 0 0 auto;\n}\n\nprogress[value] {\n    box-sizing: border-box;\n    margin: 1rem 0;\n    appearance: none;\n    border: none;\n    height: 0.5rem;\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n    position: relative;\n    overflow: hidden;\n}\n\nprogress[value]::-webkit-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n}\n\nprogress[value]::-webkit-progress-value {\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n}\n\nprogress[value]::-moz-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n}\n\nfieldset {\n    margin: 1rem 0;\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n}\n\nfieldset > legend {\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section-opacity-50);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n    font-size: 80%;\n    padding: 0.25em 1em;\n    border-radius: 100vw;\n}\n\n.theme-flashing-text {\n    animation: theme-flashing-text-anim 1s infinite;\n}\n\n@keyframes theme-flashing-text-anim {\n    0% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n    50% {\n        text-shadow: 0 0 0.2em var(--theme-color-accent);\n    }\n    100% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n}\n\n*:focus {\n    outline: 3px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n}\n*:focus:not(:focus-visible) {\n    outline: none;\n}\n\n.theme-color-primary {\n    background-color: var(--theme-color-primary);\n    color: var(--theme-color-on-primary);\n}\n.theme-color-primary-dark {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n}\n.theme-color-primary-light {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n.theme-color-accent {\n    background-color: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n.theme-color-accent-dark {\n    background-color: var(--theme-color-accent-dark);\n    color: var(--theme-color-on-accent-dark);\n}\n.theme-color-accent-light {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n.theme-color-screen {\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen);\n}\n.theme-color-frame {\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n.theme-color-section {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n}\n.theme-color-input {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n}\n.theme-color-error {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.theme-shadow-card {\n    box-shadow: var(--theme-shadow-card);\n}\n.theme-shadow-button {\n    box-shadow: var(--theme-shadow-button);\n}\n.theme-shadow-header {\n    box-shadow: var(--theme-shadow-header);\n}\n.theme-shadow-button-pressed {\n    box-shadow: var(--theme-shadow-button-pressed);\n}\n.theme-shadow-dialog {\n    box-shadow: var(--theme-shadow-dialog);\n}\n\na, a:visited { color: var(--theme-color-link) }"],sourceRoot:""}]);const s=i},2865:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,'.ui-view-CheckboxView {\n    padding: 0;\n    border: none;\n    background: transparent;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    cursor: pointer;\n    color: inherit;\n    margin: 0.25rem;\n}\n\n.ui-view-CheckboxView[disabled] {\n    opacity: 0.5;\n    font-style: italic;\n    cursor: default;\n    pointer-events: none;\n    font-style: italic;\n}\n\n.ui-view-CheckboxView.wide {\n    display: flex;\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-CheckboxView > div.label {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-grow: 1;\n    text-align: left;\n    transition: opacity 0.2s;\n    cursor: pointer;\n    padding: 0 0.75em;\n    order: 1;\n}\n\n.ui-view-CheckboxView.reverse > div.label {\n    order: -1;\n}\n\n.ui-view-CheckboxView > div.pin {\n    position: relative;\n    width: 34px;\n    height: 20px;\n    overflow: visible;\n    flex-grow: 0;\n    margin: 0.125rem;\n    order: 0;\n}\n\n.ui-view-CheckboxView > div.pin > div.bar {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-primary-light);\n    filter: grayscale(100%);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.bar {\n    filter: none;\n}\n\n.ui-view-CheckboxView > div.pin > div.btn {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin: 0;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    transform: translateX(0);\n    transition: transform 0.2s, opacity 0.2s;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-section);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.btn {\n    background-color: var(--theme-color-primary-dark);\n    transform: translateX(14px);\n}\n\n.ui-view-CheckboxView > header.hide {\n    display: none;\n}\n',"",{version:3,sources:["webpack://./src/ui/view/checkbox/checkbox-view.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,2BAA2B;IAC3B,uBAAuB;IACvB,eAAe;IACf,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,oBAAoB;IACpB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;IACvB,YAAY;IACZ,gBAAgB;IAChB,wBAAwB;IACxB,eAAe;IACf,iBAAiB;IACjB,QAAQ;AACZ;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,gBAAgB;IAChB,QAAQ;AACZ;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,sCAAsC;IACtC,kDAAkD;IAClD,uBAAuB;AAC3B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,SAAS;IACT,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,wBAAwB;IACxB,wCAAwC;IACxC,sCAAsC;IACtC,4CAA4C;AAChD;;AAEA;IACI,iDAAiD;IACjD,2BAA2B;AAC/B;;AAEA;IACI,aAAa;AACjB",sourcesContent:['.ui-view-CheckboxView {\n    padding: 0;\n    border: none;\n    background: transparent;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    cursor: pointer;\n    color: inherit;\n    margin: 0.25rem;\n}\n\n.ui-view-CheckboxView[disabled] {\n    opacity: 0.5;\n    font-style: italic;\n    cursor: default;\n    pointer-events: none;\n    font-style: italic;\n}\n\n.ui-view-CheckboxView.wide {\n    display: flex;\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-CheckboxView > div.label {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-grow: 1;\n    text-align: left;\n    transition: opacity 0.2s;\n    cursor: pointer;\n    padding: 0 0.75em;\n    order: 1;\n}\n\n.ui-view-CheckboxView.reverse > div.label {\n    order: -1;\n}\n\n.ui-view-CheckboxView > div.pin {\n    position: relative;\n    width: 34px;\n    height: 20px;\n    overflow: visible;\n    flex-grow: 0;\n    margin: 0.125rem;\n    order: 0;\n}\n\n.ui-view-CheckboxView > div.pin > div.bar {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-primary-light);\n    filter: grayscale(100%);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.bar {\n    filter: none;\n}\n\n.ui-view-CheckboxView > div.pin > div.btn {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin: 0;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    transform: translateX(0);\n    transition: transform 0.2s, opacity 0.2s;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-section);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.btn {\n    background-color: var(--theme-color-primary-dark);\n    transform: translateX(14px);\n}\n\n.ui-view-CheckboxView > header.hide {\n    display: none;\n}\n'],sourceRoot:""}]);const s=i},7071:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".ui-view-IconView {\n    display: inline-block;\n    padding: 0;\n    transition: all 0.3s;\n    flex: 0 0 auto;\n}\n\n.ui-view-IconView.clickable {\n    cursor: pointer;\n}\n\n.ui-view-IconView.clickable:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.ui-view-IconView > svg {\n    height: 100%;\n}\n\n.ui-view-IconView.animate {\n    animation: ui-view-IconView-anim 1s linear infinite;\n}\n\n@keyframes ui-view-IconView-anim {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(-360deg); } \n}\n","",{version:3,sources:["webpack://./src/ui/view/icon/icon-view.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,UAAU;IACV,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,qBAAqB;AACzB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,mDAAmD;AACvD;;AAEA;EACE;IACE,uBAAuB,EAAE;EAC3B;IACE,0BAA0B,EAAE;AAChC",sourcesContent:[".ui-view-IconView {\n    display: inline-block;\n    padding: 0;\n    transition: all 0.3s;\n    flex: 0 0 auto;\n}\n\n.ui-view-IconView.clickable {\n    cursor: pointer;\n}\n\n.ui-view-IconView.clickable:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.ui-view-IconView > svg {\n    height: 100%;\n}\n\n.ui-view-IconView.animate {\n    animation: ui-view-IconView-anim 1s linear infinite;\n}\n\n@keyframes ui-view-IconView-anim {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(-360deg); } \n}\n"],sourceRoot:""}]);const s=i},7148:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".ui-view-input-IntegerView {}\n","",{version:3,sources:["webpack://./src/ui/view/input/integer/integer-view.css"],names:[],mappings:"AAAA,4BAA4B",sourcesContent:[".ui-view-input-IntegerView {}\n"],sourceRoot:""}]);const s=i},944:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".ui-view-input-TextView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-input-TextView input {\n    line-height: 2rem;\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n}\n\n.ui-view-input-TextView.invalid input,\n.ui-view-input-TextView.invalid input:focus {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.ui-view-input-TextView input:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n\n.ui-view-input-TextView input[disabled] {\n    box-shadow: none;\n    outline: 1px solid var(--theme-color-input-opacity-50);\n    background-color: inherit;\n    color: inherit;\n}\n\n.ui-view-input-TextView.wide {\n    display: flex;\n    width: 100%;\n    box-sizing: content-box;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-input-TextView.wide * {\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.ui-view-input-TextView .hide {\n    opacity: 0;\n}\n","",{version:3,sources:["webpack://./src/ui/view/input/text/text-view.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,0CAA0C;IAC1C,kCAAkC;IAClC,YAAY;IACZ,sCAAsC;IACtC,iBAAiB;AACrB;;AAEA;;IAEI,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C;;AAEA;IACI,gBAAgB;IAChB,sDAAsD;IACtD,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,uBAAuB;IACvB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,sBAAsB;AAC1B;;AAEA;IACI,UAAU;AACd",sourcesContent:[".ui-view-input-TextView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-input-TextView input {\n    line-height: 2rem;\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n}\n\n.ui-view-input-TextView.invalid input,\n.ui-view-input-TextView.invalid input:focus {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.ui-view-input-TextView input:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n\n.ui-view-input-TextView input[disabled] {\n    box-shadow: none;\n    outline: 1px solid var(--theme-color-input-opacity-50);\n    background-color: inherit;\n    color: inherit;\n}\n\n.ui-view-input-TextView.wide {\n    display: flex;\n    width: 100%;\n    box-sizing: content-box;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-input-TextView.wide * {\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.ui-view-input-TextView .hide {\n    opacity: 0;\n}\n"],sourceRoot:""}]);const s=i},1009:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".ui-view-LabelView {\n    opacity: .5;\n    font-size: .8rem;\n    line-height: 1.5rem;\n    margin: 0;\n    padding: 0 .5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.ui-view-LabelView.error {\n    color: var(--theme-color-error);\n}\n\n.ui-view-LabelView.hide {\n    visibility: hidden;\n}","",{version:3,sources:["webpack://./src/ui/view/label/label-view.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gBAAgB;IAChB,mBAAmB;IACnB,SAAS;IACT,gBAAgB;IAChB,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[".ui-view-LabelView {\n    opacity: .5;\n    font-size: .8rem;\n    line-height: 1.5rem;\n    margin: 0;\n    padding: 0 .5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.ui-view-LabelView.error {\n    color: var(--theme-color-error);\n}\n\n.ui-view-LabelView.hide {\n    visibility: hidden;\n}"],sourceRoot:""}]);const s=i},657:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".ui-view-SimpleComboView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-SimpleComboView.wide {\n    display: flex;\n    width: 100%;\n}\n\n.ui-view-SimpleComboView select {\n    width: 100%;\n    line-height: 2rem;\n    height: 2rem;\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n    appearance: none;\n    position: relative;\n    z-index: 0;\n}\n\n.ui-view-SimpleComboView div.container {\n    position: relative;\n    padding: 0;\n    margin: 0;\n}\n\n.ui-view-SimpleComboView div.container > div.dropdown-button {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 1.5rem;\n    display: grid;\n    place-items: center;\n    pointer-events: none;\n    border-left: 1px solid var(--theme-color-on-primary-opacity-25);\n    z-index: 1;\n}\n\n.ui-view-SimpleComboView select:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n","",{version:3,sources:["webpack://./src/ui/view/simple-combo/simple-combo-view.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,WAAW;AACf;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,sCAAsC;IACtC,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,QAAQ;IACR,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,oBAAoB;IACpB,+DAA+D;IAC/D,UAAU;AACd;;AAEA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C",sourcesContent:[".ui-view-SimpleComboView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-SimpleComboView.wide {\n    display: flex;\n    width: 100%;\n}\n\n.ui-view-SimpleComboView select {\n    width: 100%;\n    line-height: 2rem;\n    height: 2rem;\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n    appearance: none;\n    position: relative;\n    z-index: 0;\n}\n\n.ui-view-SimpleComboView div.container {\n    position: relative;\n    padding: 0;\n    margin: 0;\n}\n\n.ui-view-SimpleComboView div.container > div.dropdown-button {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 1.5rem;\n    display: grid;\n    place-items: center;\n    pointer-events: none;\n    border-left: 1px solid var(--theme-color-on-primary-opacity-25);\n    z-index: 1;\n}\n\n.ui-view-SimpleComboView select:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n"],sourceRoot:""}]);const s=i},1404:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".ui-view-SliderView {\n    min-width: 2rem;\n    margin: 0 1rem;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\n.ui-view-SliderView.wide {\n    width: calc(100% - 2rem);\n}\n\n","",{version:3,sources:["webpack://./src/ui/view/slider/slider.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,cAAc;IACd,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;AACxB;;AAEA;IACI,wBAAwB;AAC5B",sourcesContent:[".ui-view-SliderView {\n    min-width: 2rem;\n    margin: 0 1rem;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\n.ui-view-SliderView.wide {\n    width: calc(100% - 2rem);\n}\n\n"],sourceRoot:""}]);const s=i},7539:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".ui-view-TabstripView {\n    --tabstrip-bg: var(--theme-color-section);\n    --tabstrip-fg: var(--theme-color-on-section);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.ui-view-TabstripView > header {\n    flex: 0 0 auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-end;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    color: inherit;\n}\n\n.ui-view-TabstripView > header > * {\n    flex: 1 1 auto;\n}\n\n.ui-view-TabstripView > header > button,\n.ui-view-TabstripView > header > button:hover {\n    flex: 0 0 auto;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.5rem 0.5rem 0 0;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: none;\n    transition: filter 0.2s;\n    filter: brightness(100%);\n    margin: 0;\n    background: transparent;\n    color: currentColor;\n}\n\n.ui-view-TabstripView > header > button:active {\n    filter: brightness(150%);\n}\n\n.ui-view-TabstripView > header > button.selected {\n    background-color: var(--tabstrip-bg);\n    color: var(--tabstrip-fg);\n    pointer-events: none;\n    cursor: default;\n}\n\n.ui-view-TabstripView > main {\n    flex: 1 1 auto;\n    background-color: var(--tabstrip-bg);\n    color: var(--tabstrip-fg);\n    padding: 0.5rem;\n    overflow: auto;\n}\n\n.ui-view-TabstripView > main > div {\n    display: none;\n}\n\n.ui-view-TabstripView > main > div.selected {\n    display: block;\n}\n","",{version:3,sources:["webpack://./src/ui/view/tabstrip/tabstrip-view.css"],names:[],mappings:"AAAA;IACI,yCAAyC;IACzC,4CAA4C;IAC5C,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;AACV;;AAEA;IACI,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,qBAAqB;IACrB,SAAS;IACT,UAAU;IACV,6BAA6B;IAC7B,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;;IAEI,cAAc;IACd,sBAAsB;IACtB,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,gCAAgC;IAChC,wBAAwB;IACxB,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,uBAAuB;IACvB,wBAAwB;IACxB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,oCAAoC;IACpC,yBAAyB;IACzB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,oCAAoC;IACpC,yBAAyB;IACzB,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB",sourcesContent:[".ui-view-TabstripView {\n    --tabstrip-bg: var(--theme-color-section);\n    --tabstrip-fg: var(--theme-color-on-section);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.ui-view-TabstripView > header {\n    flex: 0 0 auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-end;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    color: inherit;\n}\n\n.ui-view-TabstripView > header > * {\n    flex: 1 1 auto;\n}\n\n.ui-view-TabstripView > header > button,\n.ui-view-TabstripView > header > button:hover {\n    flex: 0 0 auto;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.5rem 0.5rem 0 0;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: none;\n    transition: filter 0.2s;\n    filter: brightness(100%);\n    margin: 0;\n    background: transparent;\n    color: currentColor;\n}\n\n.ui-view-TabstripView > header > button:active {\n    filter: brightness(150%);\n}\n\n.ui-view-TabstripView > header > button.selected {\n    background-color: var(--tabstrip-bg);\n    color: var(--tabstrip-fg);\n    pointer-events: none;\n    cursor: default;\n}\n\n.ui-view-TabstripView > main {\n    flex: 1 1 auto;\n    background-color: var(--tabstrip-bg);\n    color: var(--tabstrip-fg);\n    padding: 0.5rem;\n    overflow: auto;\n}\n\n.ui-view-TabstripView > main > div {\n    display: none;\n}\n\n.ui-view-TabstripView > main > div.selected {\n    display: block;\n}\n"],sourceRoot:""}]);const s=i},4854:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,'div.view-CodeEditorView {\n    position: relative;\n    margin: 0;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 1rem;\n    color: #fffb;\n    background-color: #333;\n    padding: 1em;\n    line-height: 1.2;\n}\n\ndiv.view-CodeEditorView pre .comment {\n    color: #fff7;\n}\n\ndiv.view-CodeEditorView pre .number {\n    color: #fff;\n    font-weight: bolder;\n}\n\ndiv.view-CodeEditorView pre .type {\n    color: #cf9;\n}\n\ndiv.view-CodeEditorView pre .keyword {\n    color: #07f;\n}\n\ndiv.view-CodeEditorView pre .global {\n    color: #f70;\n}\n\ndiv.view-CodeEditorView pre .function {\n    color: #ed0;\n    font-weight: bold;\n}',"",{version:3,sources:["webpack://./src/view/code-editor/code-editor-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,SAAS;IACT,sEAAsE;IACtE,eAAe;IACf,YAAY;IACZ,sBAAsB;IACtB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;IACX,iBAAiB;AACrB",sourcesContent:['div.view-CodeEditorView {\n    position: relative;\n    margin: 0;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 1rem;\n    color: #fffb;\n    background-color: #333;\n    padding: 1em;\n    line-height: 1.2;\n}\n\ndiv.view-CodeEditorView pre .comment {\n    color: #fff7;\n}\n\ndiv.view-CodeEditorView pre .number {\n    color: #fff;\n    font-weight: bolder;\n}\n\ndiv.view-CodeEditorView pre .type {\n    color: #cf9;\n}\n\ndiv.view-CodeEditorView pre .keyword {\n    color: #07f;\n}\n\ndiv.view-CodeEditorView pre .global {\n    color: #f70;\n}\n\ndiv.view-CodeEditorView pre .function {\n    color: #ed0;\n    font-weight: bold;\n}'],sourceRoot:""}]);const s=i},4868:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".view-CodeView {\n    overflow: auto;\n    border-radius: .5rem;\n    margin: 2px;\n    max-width: calc(100vw - 1em);\n    margin: 1em 0;\n}\n\n.view-CodeView pre {\n    display: none;\n    margin: 0;\n    font-size: 80%;\n}\n\n.view-CodeView.expanded pre {\n    display: block;\n    white-space: pre-wrap;\n}\n\n.view-CodeView pre code {\n    background: #eee;\n}\n\n.view-CodeView > header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 .5em;\n    height: 2em;\n}\n\n.view-CodeView > header > div.label {\n    flex: 1 1 auto;\n    cursor: pointer;\n}","",{version:3,sources:["webpack://./src/view/code/code-view.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,oBAAoB;IACpB,WAAW;IACX,4BAA4B;IAC5B,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;IACf,WAAW;AACf;;AAEA;IACI,cAAc;IACd,eAAe;AACnB",sourcesContent:[".view-CodeView {\n    overflow: auto;\n    border-radius: .5rem;\n    margin: 2px;\n    max-width: calc(100vw - 1em);\n    margin: 1em 0;\n}\n\n.view-CodeView pre {\n    display: none;\n    margin: 0;\n    font-size: 80%;\n}\n\n.view-CodeView.expanded pre {\n    display: block;\n    white-space: pre-wrap;\n}\n\n.view-CodeView pre code {\n    background: #eee;\n}\n\n.view-CodeView > header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 .5em;\n    height: 2em;\n}\n\n.view-CodeView > header > div.label {\n    flex: 1 1 auto;\n    cursor: pointer;\n}"],sourceRoot:""}]);const s=i},2800:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".view-FallbackView {}\n","",{version:3,sources:["webpack://./src/view/fallback/fallback-view.css"],names:[],mappings:"AAAA,oBAAoB",sourcesContent:[".view-FallbackView {}\n"],sourceRoot:""}]);const s=i},5324:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".view-markdown-CodeView code {\n    color: var(--theme-color-on-accent-light);\n    background-color: var(--theme-color-accent-light);\n}\n","",{version:3,sources:["webpack://./src/view/markdown/code/code-view.css"],names:[],mappings:"AAAA;IACI,yCAAyC;IACzC,iDAAiD;AACrD",sourcesContent:[".view-markdown-CodeView code {\n    color: var(--theme-color-on-accent-light);\n    background-color: var(--theme-color-accent-light);\n}\n"],sourceRoot:""}]);const s=i},4051:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".view-MarkdownView {\n    padding: 1em;\n    margin: 0.5em 0;\n}\n\n.view-MarkdownView table {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border-collapse: collapse;\n}\n\n.view-MarkdownView table th {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n\n.view-MarkdownView table th,\n.view-MarkdownView table td {\n    border: 1px solid var(--theme-color-on-frame);\n    padding: 0.25em 0.5em;\n    text-align: center;\n}\n\n.view-MarkdownView code {\n    color: var(--theme-color-on-accent-light);\n    background-color: var(--theme-color-accent-light);\n}\n\n.view-MarkdownView blockquote {\n    color: var(--theme-color-on-section);\n    background-color: var(--theme-color-section);\n    padding: 1em;\n    font-style: italic;\n}","",{version:3,sources:["webpack://./src/view/markdown/markdown-view.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,4CAA4C;IAC5C,oCAAoC;IACpC,yBAAyB;AAC7B;;AAEA;IACI,kDAAkD;IAClD,0CAA0C;AAC9C;;AAEA;;IAEI,6CAA6C;IAC7C,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,yCAAyC;IACzC,iDAAiD;AACrD;;AAEA;IACI,oCAAoC;IACpC,4CAA4C;IAC5C,YAAY;IACZ,kBAAkB;AACtB",sourcesContent:[".view-MarkdownView {\n    padding: 1em;\n    margin: 0.5em 0;\n}\n\n.view-MarkdownView table {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border-collapse: collapse;\n}\n\n.view-MarkdownView table th {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n\n.view-MarkdownView table th,\n.view-MarkdownView table td {\n    border: 1px solid var(--theme-color-on-frame);\n    padding: 0.25em 0.5em;\n    text-align: center;\n}\n\n.view-MarkdownView code {\n    color: var(--theme-color-on-accent-light);\n    background-color: var(--theme-color-accent-light);\n}\n\n.view-MarkdownView blockquote {\n    color: var(--theme-color-on-section);\n    background-color: var(--theme-color-section);\n    padding: 1em;\n    font-style: italic;\n}"],sourceRoot:""}]);const s=i},2779:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".view-SceneView {\n    margin: 0.5em;\n}\n\n.view-SceneView > footer{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n}   \n\n.view-SceneView > canvas {\n    width: calc(100% - 1em);\n    max-width: calc(100vw - 1rem);\n    width: 100%;\n    height: 480px;\n    max-height: 90vmin;\n}\n\n.view-SceneView.small > canvas {\n    height: 240px;\n}\n\n.view-SceneView > canvas.fullscreen,\n.view-SceneView.small > canvas.fullscreen {\n    z-index: 999999;\n    position: fixed;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    max-width: none;\n    max-height: none;\n}\n","",{version:3,sources:["webpack://./src/view/scene/scene-view.css"],names:[],mappings:"AAAA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,6BAA6B;IAC7B,WAAW;IACX,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,eAAe;IACf,eAAe;IACf,OAAO;IACP,MAAM;IACN,SAAS;IACT,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,SAAS;IACT,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[".view-SceneView {\n    margin: 0.5em;\n}\n\n.view-SceneView > footer{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n}   \n\n.view-SceneView > canvas {\n    width: calc(100% - 1em);\n    max-width: calc(100vw - 1rem);\n    width: 100%;\n    height: 480px;\n    max-height: 90vmin;\n}\n\n.view-SceneView.small > canvas {\n    height: 240px;\n}\n\n.view-SceneView > canvas.fullscreen,\n.view-SceneView.small > canvas.fullscreen {\n    z-index: 999999;\n    position: fixed;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    max-width: none;\n    max-height: none;\n}\n"],sourceRoot:""}]);const s=i},9551:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),a=n(3645),i=n.n(a)()(o());i.push([e.id,".view-ShaderCodeEditorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.view-ShaderCodeEditorView > .code-editor {\n    flex: 1 1 auto;\n    overflow: auto;\n}\n\n.view-ShaderCodeEditorView > header {\n    padding: .25em 1em;\n    border-radius: .5em .5em 0 0;\n}\n\n.view-ShaderCodeEditorView > header,\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    flex: 0 0 auto;\n}\n\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    font-size: 80%;\n    padding: 1em;\n    max-height: 40vh;\n    overflow: auto;\n    margin: 0;\n    white-space: pre-wrap;\n}","",{version:3,sources:["webpack://./src/view/shader-code-editor/shader-code-editor-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;AACV;;AAEA;IACI,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,4BAA4B;AAChC;;AAEA;;IAEI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,cAAc;IACd,SAAS;IACT,qBAAqB;AACzB",sourcesContent:[".view-ShaderCodeEditorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.view-ShaderCodeEditorView > .code-editor {\n    flex: 1 1 auto;\n    overflow: auto;\n}\n\n.view-ShaderCodeEditorView > header {\n    padding: .25em 1em;\n    border-radius: .5em .5em 0 0;\n}\n\n.view-ShaderCodeEditorView > header,\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    flex: 0 0 auto;\n}\n\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    font-size: 80%;\n    padding: 1em;\n    max-height: 40vh;\n    overflow: auto;\n    margin: 0;\n    white-space: pre-wrap;\n}"],sourceRoot:""}]);const s=i},6305:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(6164),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9263:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(4958),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9317:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(3788),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},7016:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(8977),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},6943:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(9697),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},8614:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(8226),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},1865:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(100),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},935:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(5921),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},4619:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(677),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2533:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(3697),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9266:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(6750),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},4370:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(9163),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},3003:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(9722),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},5192:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(2865),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},160:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(7071),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},8291:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(7148),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},4342:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(944),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},6825:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(1009),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2384:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(657),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},357:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(1404),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},743:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(7539),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},117:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(4854),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},6850:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(4868),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},5075:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(2800),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},3605:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(5324),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2661:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(4051),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},7176:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(2779),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2357:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),a=n(7795),i=n.n(a),s=n(569),c=n.n(s),l=n(3565),u=n.n(l),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(9551),h={};h.styleTagTransform=p(),h.setAttributes=u(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},3397:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=s(n(8260)),l=s(n(7937)),u=a(n(7294)),f=n(9383);n(6305);var d=u.default.lazy((function(){return Promise.resolve().then((function(){return a(n(6047))}))})),A=u.default.lazy((function(){return Promise.resolve().then((function(){return a(n(6317))}))})),p=u.default.lazy((function(){return Promise.resolve().then((function(){return a(n(3604))}))})),m=u.default.lazy((function(){return Promise.resolve().then((function(){return a(n(7436))}))})),h=u.default.lazy((function(){return Promise.resolve().then((function(){return a(n(8346))}))})),v=u.default.lazy((function(){return Promise.resolve().then((function(){return a(n(1352))}))})),g=u.default.lazy((function(){return Promise.resolve().then((function(){return a(n(2545))}))})),b={"#test":u.default.createElement(d,null),"#article/webgl2context":u.default.createElement(p,null),"#article/attributes":u.default.createElement(m,null),"#article/basic-perspective":u.default.createElement(v,null),"#article/instances":u.default.createElement(h,null),"#tool/painter":u.default.createElement(g,null)};t.default=function(){var e=(0,f.useHash)(),t=i(u.default.useState(!0),2),n=t[0],r=(t[1],b[e]),o=!r||n?"show":"hide";return console.log("🚀 [app] page, navClassName = ",r,o),u.default.createElement("div",{className:"App"},u.default.createElement("div",{className:"body"},u.default.createElement(u.Suspense,{fallback:u.default.createElement(c.default,null)},null!=r?r:u.default.createElement(A,null))),u.default.createElement("nav",{className:"".concat(o," theme-shadow-header theme-color-primary-dark"),onClick:function(){return window.location.hash="#"}},u.default.createElement(l.default,{name:"menu"}),u.default.createElement("div",null,"WebGL2 Experiments"),u.default.createElement("div",null)))}},373:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(3397);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5796:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o,a=r(n(373)),i=r(n(7294)),s=r(n(3935)),c=r(n(1311));n(9317),n(9263),c.default.apply({colors:{black:"#000",white:"#fff",error:"#f30",input:"#fff",section:"#eee",frame:"#ddd",screen:"#aaa",primary:c.default.shade("#9cd"),accent:c.default.shade("#f80")}}),console.log("VERSION",i.default.version),s.default.render(i.default.createElement(i.default.StrictMode,null,i.default.createElement(a.default,null)),document.getElementById("root")),(o=document.getElementById("tgd-logo"))&&(o.classList.add("vanish"),window.setTimeout((function(){var e=o.parentNode;e&&e.removeChild(o)}),900))},6805:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(n(7294)),l=s(n(9681)),u=s(n(8450)),f=s(n(7105)),d=s(n(8604)),A=s(n(5260)),p=s(n(5856)),m=s(n(4017)),h=s(n(9615)),v=s(n(9723));function g(e){var t=["custom","BasicPerspective"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(7016),t.default=function(e){var t=c.useRef({slope:0,scale:200}),n=i(c.useState(t.current.slope),2),r=n[0],o=n[1],a=i(c.useState(t.current.scale),2),s=a[0],b=a[1];c.useEffect((function(){t.current.slope=r,t.current.scale=s}),[r,s]);var C=c.useCallback(function(e){return function(t){var n=document.createElement("canvas");n.width=1600,n.height=1600;var r=n.getContext("2d");if(!r)throw Error("Unable to get Canvas 2D context!");t.canvas.addEventListener("click",(function(o){var i=t.canvas.getBoundingClientRect(),s=i.left,c=i.top,l=i.width,u=i.height,f=2*(o.clientX-s)/l-1,d=1-2*(o.clientY-c)/u;console.log("🚀 [basic-perspective] Y = ",d);var A=t.drawingBufferWidth/t.drawingBufferHeight,p=.01*e.current.scale,m=.01*e.current.slope;console.log("🚀 [basic-perspective] r = ",A),console.log("🚀 [basic-perspective] s = ",p),console.log("🚀 [basic-perspective] p = ",m);var h=0+d/(p*A*(1-m*d)),v=0+f/p+f*A*m*(h-0);console.log("🚀 [basic-perspective] y = ",h);var g=n.width*(1+v)*.5,b=n.height*(1-h)*.5;console.log("🚀 [basic-perspective] canvasY = ",b),r.drawImage(a,0,0),r.lineWidth=16,r.strokeStyle="#f907",r.beginPath(),r.moveTo(0,b),r.lineTo(n.width,b),r.moveTo(g,0),r.lineTo(g,n.height),r.stroke(),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)})),r.fillStyle="orange",r.fillText("Hello World!",1e3,600);var o=t.createTexture();if(!o)throw Error("Unable to create a texture!");t.bindTexture(t.TEXTURE_2D,o),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR);var a=new Image;a.src=d.default,a.onload=function(){console.log("🚀 [basic-perspective] img = ",a),r.drawImage(a,0,0),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)};var i=new p.default(t,4);return i.pokeVertStaticData(-1,-1,0,1),i.pokeVertStaticData(1,-1,1,1),i.pokeVertStaticData(-1,1,0,0),i.pokeVertStaticData(1,1,1,0),i.pushVertStaticArray(),t.clearColor(0,.6777,1,1),new Promise((function(n){n((function(n){return i.paint(n,(function(n,r){t.clear(t.COLOR_BUFFER_BIT),n.$uniTex(o),n.$uniScale(.01*e.current.scale),n.$uniRatio(t.drawingBufferWidth/t.drawingBufferHeight),n.$uniCenter(0,0),n.$uniSlope(.01*e.current.slope)}))}))}))}}(t),[t]);return c.createElement("article",{className:g(e)},c.createElement(h.default,{label:"Pente : ".concat(r," %"),wide:!0,min:0,max:100,steps:1,value:r,onChange:o}),c.createElement(h.default,{label:"Échelle : ".concat(s," %"),wide:!0,min:50,max:400,steps:1,value:s,onChange:b}),c.createElement(m.default,{className:"full-width",play:!0,onInit:C}),c.createElement(A.default,null,u.default),c.createElement(l.default,{className:"left",label:"Vertex Shader",lang:"glsl",value:v.default}),c.createElement(l.default,{className:"right",label:"Fragment Shader",lang:"glsl",value:f.default}))}},1352:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(6805);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5856:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(t,n){var r=this;this.gl=t,this.vertCount=n,this.vertStaticCursor=0,this.paint=function(e,t){var n=r,o=n.gl,a=n.prg;o.useProgram(a),t&&t(r,e),o.bindVertexArray(r.vertArray),o.drawArrays(o.TRIANGLE_STRIP,0,r.vertCount),o.bindVertexArray(null)};var o=t.createProgram();if(!o)throw Error("Unable to create a WebGL Program!");e.createShader(t,o,t.VERTEX_SHADER,e.VERT),e.createShader(t,o,t.FRAGMENT_SHADER,e.FRAG),t.linkProgram(o),this.prg=o,this._$uniRatio=t.getUniformLocation(o,"uniRatio"),this._$uniCenter=t.getUniformLocation(o,"uniCenter"),this._$uniSlope=t.getUniformLocation(o,"uniSlope"),this._$uniTex=t.getUniformLocation(o,"uniTex"),this._$uniScale=t.getUniformLocation(o,"uniScale");var a=t.createVertexArray();if(!a)throw Error("Unable to create Vertex Array Object!");this.vertArray=a,t.bindVertexArray(a);var i=Float32Array.BYTES_PER_ELEMENT,s=4*i,c=t.createBuffer();if(!c)throw Error("Unable to create WebGL Buffer (vertStatic)!");this.vertStaticBuff=c,t.bindBuffer(t.ARRAY_BUFFER,c),this.vertStaticData=new Float32Array(4*n),t.bufferData(t.ARRAY_BUFFER,this.vertStaticData,t.STATIC_DRAW);var l=t.getAttribLocation(o,"attPoint");t.enableVertexAttribArray(l),t.vertexAttribPointer(l,2,t.FLOAT,!1,s,0*i),t.vertexAttribDivisor(l,0);var u=t.getAttribLocation(o,"attUV");t.enableVertexAttribArray(u),t.vertexAttribPointer(u,2,t.FLOAT,!1,s,2*i),t.vertexAttribDivisor(u,0),t.bindVertexArray(null)}return e.prototype.pushVertStaticArray=function(){var e=this.gl,t=this.vertStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.vertStaticData,e.STATIC_DRAW)},e.prototype.pushVertStaticSubArray=function(e,t){var n=this.gl,r=this.vertStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.vertStaticData.subarray(4*e,4*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*4,o)},e.prototype.pokeVertStaticData=function(e,t,n,r){var o=this.vertStaticCursor;if(o<0||o>=this.vertCount)throw Error("[pokeVertStaticData] Cursor out of range: vertStaticCursor = ".concat(o));var a=this.vertStaticData,i=4*o;a[i++]=e,a[i++]=t,a[i++]=n,a[i++]=r,this.vertStaticCursor++},e.prototype.destroy=function(){var e=this,t=e.gl,n=e.prg,r=e.vertStaticBuff;t.deleteBuffer(r),t.deleteProgram(n),t.deleteVertexArray(this.vertArray)},e.prototype.$uniRatio=function(e){this.gl.uniform1f(this._$uniRatio,e)},e.prototype.$uniCenter=function(e,t){this.gl.uniform2f(this._$uniCenter,e,t)},e.prototype.$uniSlope=function(e){this.gl.uniform1f(this._$uniSlope,e)},e.prototype.$uniTex=function(e){var t=this.gl;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e),t.uniform1i(this._$uniTex,0)},e.prototype.$uniScale=function(e){this.gl.uniform1f(this._$uniScale,e)},e.createShader=function(e,t,n,r){var o=e.createShader(n);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(t,o)},e.VERT="#version 300 es\n\nuniform vec2 uniCenter;\nuniform float uniScale;\nuniform float uniSlope;\nuniform float uniRatio;\n\nin vec2 attPoint;\nin vec2 attUV;\n\nout vec2 varUV;\n\nvoid main() {\n  vec2 point = (attPoint - uniCenter) * uniScale;\n  varUV = attUV;\n  point.y *= uniRatio;\n  float w = uniSlope * point.y + 1.0;\n  float z = 0.5;\n  gl_Position = vec4(point, z, w);\n}",e.FRAG="#version 300 es\n\nprecision mediump float;\n\nuniform sampler2D uniTex;\n\nin vec2 varUV;\n\nout vec4 FragColor;\n\nvoid main() {\n    FragColor = texture(uniTex, varUV);\n}\n",e}();t.default=n},8346:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(5889);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5889:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(n(7294)),l=s(n(5260)),u=s(n(1785)),f=s(n(4017)),d=s(n(9615)),A=s(n(945));function p(e){var t=["custom","BasicPerspective"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}t.default=function(e){var t=i(c.useState(1),2),n=t[0],r=t[1],o=c.useRef(n);c.useEffect((function(){o.current=n}),[n]);var a=c.useCallback(function(e){return function(t){var n=new u.default(t,12,42),r=.1,o=.55;n.pokeInstEvery7StaticData(r,o,1),n.pokeInstEvery7StaticData(r,1,o),n.pokeInstEvery7StaticData(o,r,1),n.pokeInstEvery7StaticData(1,r,o),n.pokeInstEvery7StaticData(o,1,r),n.pokeInstEvery7StaticData(1,o,r),n.pushInstEvery7StaticArray();for(var a=0;a<42;a++)n.pokeInstStaticData(360*a/42);return n.pushInstStaticArray(),n.pokeVertStaticData(0,.3,0),n.pokeVertStaticData(90,.4,1),n.pokeVertStaticData(-90,.4,1),n.pokeVertStaticData(0,.5,2),n.pokeVertStaticData(120,.25,.1),n.pokeVertStaticData(180,0,1),n.pokeVertStaticData(0,.5,2),n.pokeVertStaticData(-120,.25,.1),n.pokeVertStaticData(180,0,1),n.pokeVertStaticData(0,.4,1),n.pokeVertStaticData(60,.4,2),n.pokeVertStaticData(-60,.4,2),n.pushVertStaticArray(),t.clearColor(0,0,0,1),new Promise((function(r){r((function(r){n.instCount=e.current,n.paint(r,(function(e,n){t.clear(t.COLOR_BUFFER_BIT),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),e.$uniOpacity(1),e.$uniAngleStep(.002*n),e.$uniTrianglesScale(1+2*Math.abs(Math.sin(74545e-8*r)));var o=t.drawingBufferWidth,a=t.drawingBufferHeight;o>a?e.$uniScreenScale(a/o,1):e.$uniScreenScale(1,o/a)}))}))}))}}(o),[o]);return c.createElement("article",{className:p(e)},c.createElement(d.default,{label:"Nombre d'instances : ".concat(n),wide:!0,min:1,max:42,steps:1,value:n,onChange:r}),c.createElement(f.default,{play:!0,onInit:a}),c.createElement(l.default,null,A.default))}},1785:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(t,n,r){var o=this;this.gl=t,this.vertCount=n,this.instCount=r,this.vertStaticCursor=0,this.instEvery7StaticCursor=0,this.instStaticCursor=0,this.paint=function(e,t){var n=o,r=n.gl,a=n.prg;r.useProgram(a),t&&t(o,e),r.bindVertexArray(o.vertArray),r.drawArraysInstanced(r.TRIANGLES,0,o.vertCount,o.instCount),r.bindVertexArray(null)};var a=t.createProgram();if(!a)throw Error("Unable to create a WebGL Program!");e.createShader(t,a,t.VERTEX_SHADER,e.VERT),e.createShader(t,a,t.FRAGMENT_SHADER,e.FRAG),t.linkProgram(a),this.prg=a,this._$uniTrianglesScale=t.getUniformLocation(a,"uniTrianglesScale"),this._$uniAngleStep=t.getUniformLocation(a,"uniAngleStep"),this._$uniScreenScale=t.getUniformLocation(a,"uniScreenScale"),this._$uniOpacity=t.getUniformLocation(a,"uniOpacity");var i=t.createVertexArray();if(!i)throw Error("Unable to create Vertex Array Object!");this.vertArray=i,t.bindVertexArray(i);var s=Float32Array.BYTES_PER_ELEMENT,c=3*s,l=t.createBuffer();if(!l)throw Error("Unable to create WebGL Buffer (vertStatic)!");this.vertStaticBuff=l,t.bindBuffer(t.ARRAY_BUFFER,l),this.vertStaticData=new Float32Array(3*n),t.bufferData(t.ARRAY_BUFFER,this.vertStaticData,t.STATIC_DRAW);var u=t.getAttribLocation(a,"attVertexPolarCoords");t.enableVertexAttribArray(u),t.vertexAttribPointer(u,3,t.FLOAT,!1,c,0*s),t.vertexAttribDivisor(u,0);var f=3*s,d=t.createBuffer();if(!d)throw Error("Unable to create WebGL Buffer (instEvery7Static)!");this.instEvery7StaticBuff=d,t.bindBuffer(t.ARRAY_BUFFER,d),this.instEvery7StaticData=new Float32Array(3*Math.floor(r/7)),t.bufferData(t.ARRAY_BUFFER,this.instEvery7StaticData,t.STATIC_DRAW);var A=t.getAttribLocation(a,"attInstanceColor");t.enableVertexAttribArray(A),t.vertexAttribPointer(A,3,t.FLOAT,!1,f,0*s),t.vertexAttribDivisor(A,7);var p=1*s,m=t.createBuffer();if(!m)throw Error("Unable to create WebGL Buffer (instStatic)!");this.instStaticBuff=m,t.bindBuffer(t.ARRAY_BUFFER,m),this.instStaticData=new Float32Array(1*r),t.bufferData(t.ARRAY_BUFFER,this.instStaticData,t.STATIC_DRAW);var h=t.getAttribLocation(a,"attInstanceAngle");t.enableVertexAttribArray(h),t.vertexAttribPointer(h,1,t.FLOAT,!1,p,0*s),t.vertexAttribDivisor(h,1),t.bindVertexArray(null)}return e.prototype.pushVertStaticArray=function(){var e=this.gl,t=this.vertStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.vertStaticData,e.STATIC_DRAW)},e.prototype.pushVertStaticSubArray=function(e,t){var n=this.gl,r=this.vertStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.vertStaticData.subarray(3*e,3*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*3,o)},e.prototype.pushInstEvery7StaticArray=function(){var e=this.gl,t=this.instEvery7StaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.instEvery7StaticData,e.STATIC_DRAW)},e.prototype.pushInstEvery7StaticSubArray=function(e,t){var n=this.gl,r=this.instEvery7StaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.instEvery7StaticData.subarray(3*e,3*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*3,o)},e.prototype.pushInstStaticArray=function(){var e=this.gl,t=this.instStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.instStaticData,e.STATIC_DRAW)},e.prototype.pushInstStaticSubArray=function(e,t){var n=this.gl,r=this.instStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.instStaticData.subarray(1*e,1*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*1,o)},e.prototype.pokeVertStaticData=function(e,t,n){var r=this.vertStaticCursor;if(r<0||r>=this.vertCount)throw Error("[pokeVertStaticData] Cursor out of range: vertStaticCursor = ".concat(r));var o=this.vertStaticData,a=3*r;o[a++]=e,o[a++]=t,o[a++]=n,this.vertStaticCursor++},e.prototype.pokeInstEvery7StaticData=function(e,t,n){var r=this.instEvery7StaticCursor;if(r<0||r>=Math.floor(this.instCount/7))throw Error("[pokeInstEvery7StaticData] Cursor out of range: instEvery7StaticCursor = ".concat(r));var o=this.instEvery7StaticData,a=3*r;o[a++]=e,o[a++]=t,o[a++]=n,this.instEvery7StaticCursor++},e.prototype.pokeInstStaticData=function(e){var t=this.instStaticCursor;if(t<0||t>=this.instCount)throw Error("[pokeInstStaticData] Cursor out of range: instStaticCursor = ".concat(t));var n=1*t;this.instStaticData[n++]=e,this.instStaticCursor++},e.prototype.destroy=function(){var e=this,t=e.gl,n=e.prg,r=e.vertStaticBuff,o=e.instEvery7StaticBuff,a=e.instStaticBuff;t.deleteBuffer(r),t.deleteBuffer(o),t.deleteBuffer(a),t.deleteProgram(n),t.deleteVertexArray(this.vertArray)},e.prototype.$uniTrianglesScale=function(e){this.gl.uniform1f(this._$uniTrianglesScale,e)},e.prototype.$uniAngleStep=function(e){this.gl.uniform1f(this._$uniAngleStep,e)},e.prototype.$uniScreenScale=function(e,t){this.gl.uniform2f(this._$uniScreenScale,e,t)},e.prototype.$uniOpacity=function(e){this.gl.uniform1f(this._$uniOpacity,e)},e.createShader=function(e,t,n,r){var o=e.createShader(n);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(t,o)},e.VERT="#version 300 es\nuniform vec2 uniScreenScale;\nuniform float uniAngleStep;\nuniform float uniTrianglesScale;\nin vec3 attVertexPolarCoords;\nin vec3 attInstanceColor;\nin float attInstanceAngle;\nout vec3 varColor;\nconst float RAD_PER_DEG=0.017453292519943295;\nvoid main(){varColor=attInstanceColor*vec3(attVertexPolarCoords.z);\nfloat instAng=uniAngleStep*float(1+gl_InstanceID)*RAD_PER_DEG;\nfloat instDis=0.75-float(gl_InstanceID)*0.0138888888889;\nfloat vertAng=instAng+(attVertexPolarCoords.x+attInstanceAngle)*RAD_PER_DEG;\nfloat vertDis=attVertexPolarCoords.y*instDis*uniTrianglesScale;\nfloat x=vertDis*cos(vertAng);\nfloat y=vertDis*sin(vertAng);\nfloat cx=instDis*cos(instAng);\nfloat cy=instDis*sin(instAng);\ngl_Position=vec4(uniScreenScale*vec2(cx+x,cy+y),0.0,1.0);}",e.FRAG="#version 300 es\nprecision mediump float;\nuniform float uniOpacity;\nin vec3 varColor;\nout vec4 FragColor;\nvoid main(){FragColor=vec4(varColor,uniOpacity);}",e}();t.default=n},4750:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function s(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,s)}c((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=a(n(7294)),u=c(n(363)),f=c(n(5260)),d=c(n(5855)),A=c(n(4017)),p=c(n(4515));function m(e){var t=["custom","pages-articles-AttributesView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function h(e){return i(this,void 0,void 0,(function(){var t;return s(this,(function(n){return(t=new d.default(e)).createVertDataArray(6),t.pokeVertData(0,-.8,-.6),t.pokeVertData(1,.2,-.6),t.pokeVertData(2,-.3,.6),t.pokeVertData(3,.8,.6),t.pokeVertData(4,-.2,.6),t.pokeVertData(5,.3,-.6),t.pushVertData(),e.clearColor(0,.4,.86667,1),[2,function(n){e.clear(e.COLOR_BUFFER_BIT),t.paint(n)}]}))}))}n(6943),t.default=function(e){return l.createElement("article",{className:m(e)},l.createElement(A.default,{className:"margin-left",onInit:h}),l.createElement(f.default,{ts:{code:u.default}},p.default))}},7436:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4750);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5855:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(t){var n=this;this.gl=t,this.vertData=new Float32Array,this.vertCount=0,this.paint=function(e,t){var r=n,o=r.gl,a=r.prg;o.useProgram(a),t&&t(n,e),o.bindVertexArray(n.vertArray),o.drawArrays(o.TRIANGLES,0,n.vertCount)};var r=t.createProgram();if(!r)throw Error("Unable to create a WebGL Program!");e.createShader(t,r,t.VERTEX_SHADER,e.VERT),e.createShader(t,r,t.FRAGMENT_SHADER,e.FRAG),t.linkProgram(r),this.prg=r;var o=t.createBuffer();if(!o)throw Error("Unable to create WebGL Buffer!");this.vertBuff=o;var a=t.createVertexArray();if(!a)throw Error("Unable to create Vertex Array Object!");this.vertArray=a,t.bindVertexArray(a);var i=Float32Array.BYTES_PER_ELEMENT,s=e.ATTRIBS_COUNT*i;t.bindBuffer(t.ARRAY_BUFFER,this.vertBuff);var c=t.getAttribLocation(r,"attPos");t.enableVertexAttribArray(c),t.vertexAttribPointer(c,2,t.FLOAT,!1,s,0*i)}return e.prototype.createVertDataArray=function(e){this.vertCount=e,this.vertData=new Float32Array(2*e)},e.prototype.pushVertData=function(){var e=this.gl;e.bindBuffer(e.ARRAY_BUFFER,this.vertBuff),e.bufferData(e.ARRAY_BUFFER,this.vertData,e.STATIC_DRAW)},e.prototype.pokeVertData=function(t,n,r){var o=t*e.ATTRIBS_COUNT,a=this.vertData;a[o++]=n,a[o++]=r},e.prototype.destroy=function(){var e=this,t=e.gl,n=e.prg,r=e.vertBuff;t.deleteBuffer(r),t.deleteProgram(n),t.deleteVertexArray(this.vertArray)},e.createShader=function(e,t,n,r){var o=e.createShader(n);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(t,o)},e.ATTRIBS_COUNT=2,e.VERT="#version 300 es\nin vec2 attPos;\nvoid main(){gl_Position=vec4(attPos,0.0,1.0);}",e.FRAG="#version 300 es\nprecision mediump float;\nout vec4 FragColor;\nvoid main(){FragColor=vec4(1.0,0.5,0.0,1.0);}",e}();t.default=n},3604:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4921);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},4921:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function s(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,s)}c((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=a(n(7294)),u=c(n(9681)),f=c(n(2580)),d=c(n(5528)),A=c(n(5260)),p=c(n(4017)),m=c(n(5519));function h(e){var t=["custom","pages-articles-Webgl2contextView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function v(e){return i(this,void 0,void 0,(function(){return s(this,(function(t){return[2,function(t){var n=Math.abs(Math.cos(5115e-7*t)),r=Math.abs(Math.cos(8172e-7*t)),o=Math.abs(Math.cos(6131e-7*t));e.clearColor(n,r,o,1),e.clear(e.COLOR_BUFFER_BIT)}]}))}))}n(8614),t.default=function(e){return l.createElement("article",{className:h(e)},l.createElement(p.default,{className:"small margin-left",onInit:v}),l.createElement(A.default,{ts:{code:f.default}},m.default),l.createElement(u.default,{expanded:!1,lang:"html",label:"Le code complet dans une page HTML",value:d.default}))}},6317:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(6328);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},6328:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(7294)),c=i(n(5260)),l=i(n(7e3));function u(e){var t=["custom","pages-tools-Welcome"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(1865),t.default=function(e){return s.createElement("article",{className:u(e)},s.createElement(c.default,null,l.default))}},1306:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=(this&&this.__awaiter,this&&this.__generator,this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}});Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(7294)),c=i(n(9681)),l=n(2905);function u(e){var t=["custom","pages-tools-painter-CodeGeneratorView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(935),t.default=function(e){var t=(0,l.makePainterClassCode)(e.options);return s.createElement("div",{className:u(e)},s.createElement(c.default,{label:"Code du Painter (".concat(t.length," octets)"),value:t,lang:"typescript"}))}},5266:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.makeAttributesGroups=t.computeAttributesTotalLength=t.makeBindAttributesCode=t.makeAttributesLocationsCode=void 0;var o=n(5395),a=n(8021);function i(e){var t,n,o=0;try{for(var a=r(e),i=a.next();!i.done;i=a.next()){var s=i.value;o+=s.length*s.size}}catch(e){t={error:e}}finally{try{i&&!i.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}return o}function s(e){var t,n,o=new Map;try{for(var i=r(e.attributes),s=i.next();!s.done;s=i.next()){var l=s.value,u=(0,a.getDivisorForAttibute)(l.name,e),f=(0,a.getDynamicModeForAttibute)(l.name,e),d="".concat(u).concat(f);o.has(d)||o.set(d,{attributes:[],baseName:c(u,f),dynamic:f,divisor:u});var A=o.get(d);A&&A.attributes.push(l)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}return Array.from(o.values())}function c(e,t){var n=t?"Dynamic":"Static";return 1===e?"inst".concat(n):e>1?"instEvery".concat(e).concat(n):"vert".concat(n)}function l(e){var t=e.divisor;switch(t){case 0:return"vertCount";case 1:return"instCount";default:return"Math.floor(instCount / ".concat(t,")")}}t.makeAttributesLocationsCode=function(e){return e.attributes.map((function(e){return"private readonly _".concat(e.name,": number")})).join("\n")},t.makeBindAttributesCode=function(e){var t,n,c,u,f=["const vertArray = gl.createVertexArray()",'if (!vertArray) throw Error("Unable to create Vertex Array Object!")',"this.vertArray = vertArray","gl.bindVertexArray(vertArray)","const BPE = Float32Array.BYTES_PER_ELEMENT"],d=s(e);try{for(var A=r(d),p=A.next();!p.done;p=A.next()){var m=p.value,h=m.attributes,v=i(h),g=m.baseName,b=(0,o.capitalize)(g);f.push("const stride".concat(b," = ").concat(v," * BPE"),"const ".concat(g,"Buff = gl.createBuffer()"),"if (!".concat(g,'Buff) throw Error("Unable to create WebGL Buffer (').concat(g,')!")'),"this.".concat(g,"Buff = ").concat(g,"Buff"),"gl.bindBuffer(gl.ARRAY_BUFFER, ".concat(g,"Buff)"),"this.".concat(g,"Data = new Float32Array(").concat(v," * ").concat(l(m),")"),"gl.bufferData(gl.ARRAY_BUFFER, this.".concat(g,"Data, gl.").concat(m.dynamic?"DYNAMIC":"STATIC","_DRAW)"));var C=0;try{for(var y=(c=void 0,r(h)),w=y.next();!w.done;w=y.next()){var _=w.value;f.push("const _".concat(_.name,' = gl.getAttribLocation(prg, "').concat(_.name,'")'),"gl.enableVertexAttribArray(_".concat(_.name,")"),"gl.vertexAttribPointer(_".concat(_.name,", ").concat(_.size,", gl.FLOAT, false, stride").concat(b,", ").concat(C," * BPE)"),"gl.vertexAttribDivisor(_".concat(_.name,", ").concat((0,a.getDivisorForAttibute)(_.name,e),")")),C+=_.size*_.length}}catch(e){c={error:e}}finally{try{w&&!w.done&&(u=y.return)&&u.call(y)}finally{if(c)throw c.error}}}}catch(e){t={error:e}}finally{try{p&&!p.done&&(n=A.return)&&n.call(A)}finally{if(t)throw t.error}}return e.drawElements&&f.push("const elemBuff = gl.createBuffer()",'if (!elemBuff) throw Error("Unable to create WebGL Buffer (elem)!")',"this.elemBuff = elemBuff","gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elemBuff)"),f.push("gl.bindVertexArray(null)"),f.join("\n")},t.computeAttributesTotalLength=i,t.makeAttributesGroups=s},4812:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.makeBuffersCode=void 0;var o=n(5266);t.makeBuffersCode=function(e){var t,n,a=[],i=(0,o.makeAttributesGroups)(e);try{for(var s=r(i),c=s.next();!c.done;c=s.next()){var l=c.value;a.push(l.baseName)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(n=s.return)&&n.call(s)}finally{if(t)throw t.error}}return e.drawElements&&a.push("elem"),a.map((function(e){return"private readonly ".concat(e,"Buff: WebGLBuffer")})).join("\n")}},2905:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.compressGLSL=t.makePainterClassCode=void 0;var o=n(5395),a=n(8021),i=n(3184),s=n(5266),c=n(4812),l=n(5343),u=n(5400),f=n(8099),d=n(9809),A=n(8514),p=n(3685);function m(e){var t=e;return t=h(t,/\/\/[^\n\r]*\n/g,""),t=h(t,/\/\*.+?\*\/|\/\/.*(?=[\n\r])/g,""),t=h(t=t.split(/[ \t]*\n[ \t\n\r]*/).join("\n"),/\s*\+\s*/g,"+"),t=h(t,/\s*\*\s*/g,"*"),t=h(t,/\s*\/\s*/g,"/"),t=h(t,/\s*-\s*/g,"-"),t=h(t,/\s*=\s*/g,"="),t=h(t,/\s*,\s*/g,","),t=h(t,/\s*\(\s*/g,"("),t=h(t,/\s*\)\s*/g,")"),t=h(t,/\s*\{\s*/g,"{"),h(t,/\s*\}\s*/g,"}")}function h(e,t,n){return e.split(t).join(n)}t.makePainterClassCode=function(e){var t=new Intl.DateTimeFormat("fr");return"/**\n * Code généré automatiquement le ".concat(t.format(new Date),"\n */\nexport default class ").concat(e.className," {\n").concat((0,i.indent)((0,c.makeBuffersCode)(e)),"\n").concat((0,i.indent)("private readonly vertArray: WebGLVertexArrayObject"),"\n").concat((0,i.indent)((0,A.makeUniformsLocationsCode)(e)),"\n").concat((0,i.indent)(function(e){var t,n,i=[],c=(0,s.makeAttributesGroups)(e);try{for(var l=r(c),u=l.next();!u.done;u=l.next()){var f=u.value;i.push("private readonly ".concat(f.baseName,"Data: Float32Array"),"/**"," * Détermine quel".concat(f.divisor>0?" vertex":"le instance"," la fonction")," * `poke".concat((0,o.capitalize)(f.baseName),"Data()` met à jour.")," * Il s'incrémente à chaque appel de `poke".concat((0,o.capitalize)(f.baseName),"Data()`")," */","public ".concat(f.baseName,"Cursor = 0"))}}catch(e){t={error:e}}finally{try{u&&!u.done&&(n=l.return)&&n.call(l)}finally{if(t)throw t.error}}return e.drawElements&&i.push("private readonly elemData: ".concat((0,a.getArrayTypeForElement)(e))),i.join("\n")}(e)),"\n    private readonly prg: WebGLProgram\n\n").concat((0,i.indent)((0,l.makeConstructorCode)(e)),"\n\n").concat((0,i.indent)((0,p.makeCreateDataArrayFunctionCode)(e)),"\n\n").concat((0,i.indent)((0,p.makePushData)(e)),"\n\n").concat((0,i.indent)((0,p.makePokeDataFunctionCode)(e)),"\n\n").concat((0,i.indent)((0,p.makeSwapDataFunctionCode)(e)),"\n\n").concat((0,i.indent)((0,f.makeDestroyFunctionCode)(e)),"\n\n").concat((0,i.indent)((0,d.makePaintFunctionCode)(e)),"\n\n").concat((0,i.indent)((0,A.makeUniformsCode)(e)),"\n\n").concat((0,i.indent)((0,u.makeCreateShaderFunctionCode)(e)),"\n\n    static readonly VERT = `").concat(e.minifyShaderCode?m(e.vertCode):e.vertCode,"`\n    static readonly FRAG = `").concat(e.minifyShaderCode?m(e.fragCode):e.fragCode,"`\n}\n")},t.compressGLSL=m},3184:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.indent=void 0,t.indent=function(e,t){void 0===t&&(t=4);var n=Array(t).fill(" ").join("");return e.split("\n").map((function(e){return"".concat(n).concat(e)})).join("\n")}},5343:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeConstructorCode=void 0;var r=n(8021),o=n(3184),a=n(5266);t.makeConstructorCode=function(e){var t=e.attributes.filter((function(t){return(0,r.getDivisorForAttibute)(t.name,e)>0})).length>0;return"constructor(\n    public readonly gl: WebGL2RenderingContext,\n    public vertCount: number".concat(t?",\n    public instCount: number":"",'\n) {\n    const prg = gl.createProgram()\n    if (!prg) throw Error("Unable to create a WebGL Program!")\n    ').concat(e.className,".createShader(gl, prg, gl.VERTEX_SHADER, ").concat(e.className,".VERT)\n    ").concat(e.className,".createShader(gl, prg, gl.FRAGMENT_SHADER, ").concat(e.className,".FRAG)\n    gl.linkProgram(prg)\n    this.prg = prg\n    ").concat(function(e){return e.uniforms.map((function(e){return"this._$".concat(e.name,' = gl.getUniformLocation(prg, "').concat(e.name,'") as WebGLUniformLocation')})).join("\n    ")}(e),"\n").concat((0,o.indent)((0,a.makeBindAttributesCode)(e)),"\n}")}},5400:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeCreateShaderFunctionCode=void 0,t.makeCreateShaderFunctionCode=function(e){return'private static createShader(gl: WebGL2RenderingContext, prg: WebGLProgram, type: number, code: string) {\n    const shader = gl.createShader(type)\n    if (!shader) throw Error("Unable to create WebGL Shader!")\n\n    gl.shaderSource(shader, code)\n    gl.compileShader(shader)\n    gl.attachShader(prg, shader)\n}'}},3685:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.makePushData=t.makeSwapDataFunctionCode=t.makePokeDataFunctionCode=t.makeCreateDataArrayFunctionCode=void 0;var o=n(5395),a=n(5266),i=n(8021);function s(e,t){for(var n=[],r=0;r<e;r++)n.push(t);return n}t.makeCreateDataArrayFunctionCode=function(e){var t=[];return e.drawElements&&t.push("public setElemData(elemData: ".concat((0,i.getArrayTypeForElement)(e),"): void {\n    this.vertCount = elemData.length\n    const { gl, vertCount } = this\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.elemBuff)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, elemData, gl.STATIC_DRAW)\n}")),t.join("\n")},t.makePokeDataFunctionCode=function(e){var t,n,i,s,c=[],l=(0,a.makeAttributesGroups)(e);try{for(var u=r(l),f=u.next();!f.done;f=u.next()){var d=f.value,A=d.attributes,p=d.baseName,m=(0,a.computeAttributesTotalLength)(A),h=[];try{for(var v=(i=void 0,r(A)),g=v.next();!g.done;g=v.next()){var b=g.value,C=b.name,y=b.size;if(1===y)h.push(C);else if(2===y)h.push("".concat(C,"_X"),"".concat(C,"_Y"));else if(3===y)h.push("".concat(C,"_X"),"".concat(C,"_Y"),"".concat(C,"_Z"));else{if(4!==y)throw Error("Unexpected size ".concat(y,' for attribute "').concat(C,'"!'));h.push("".concat(C,"_X"),"".concat(C,"_Y"),"".concat(C,"_Z"),"".concat(C,"_W"))}}}catch(e){i={error:e}}finally{try{g&&!g.done&&(s=v.return)&&s.call(v)}finally{if(i)throw i.error}}c.push("public poke".concat((0,o.capitalize)(p),"Data(\n    ").concat(h.map((function(e){return"".concat(e,": number")})).join(",\n    "),"\n) {\n    const vertIndex = this.").concat(p,"Cursor\n    if (vertIndex < 0 || vertIndex >= ").concat(0===d.divisor?"this.vertCount":1===d.divisor?"this.instCount":"Math.floor(this.instCount / ".concat(d.divisor,")"),") throw Error(`[poke").concat((0,o.capitalize)(p),"Data] Cursor out of range: ").concat(p,"Cursor = ${vertIndex}`)\n    const data = this.").concat(p,"Data\n    let index = vertIndex * ").concat(m,"\n    ").concat(h.map((function(e){return"data[index++] = ".concat(e)})).join(",\n    "),"\n    this.").concat(p,"Cursor++\n}"))}}catch(e){t={error:e}}finally{try{f&&!f.done&&(n=u.return)&&n.call(u)}finally{if(t)throw t.error}}return c.join("\n")},t.makeSwapDataFunctionCode=function(e){var t,n,i=[],c=(0,a.makeAttributesGroups)(e);try{for(var l=r(c),u=l.next();!u.done;u=l.next()){var f=u.value;if(f.dynamic){var d=f.attributes,A=(0,a.computeAttributesTotalLength)(d);i.push("public static swap".concat((0,o.capitalize)(f.baseName),"Data(\n    data: Float32Array,\n    indexA: number,\n    indexB: number        \n) {\n    let ptrA = indexA * ").concat(A,"\n    let ptrB = indexB * ").concat(A,"\n    let tmp: number = 0\n    ").concat(s(A,"tmp = data[ptrA]\n    data[ptrA++] = data[ptrB]\n    data[ptrB++] = tmp").join("\n    "),"\n}"))}}}catch(e){t={error:e}}finally{try{u&&!u.done&&(n=l.return)&&n.call(l)}finally{if(t)throw t.error}}return i.join("\n")},t.makePushData=function(e){return(0,a.makeAttributesGroups)(e).map((function(e){var t=(0,a.computeAttributesTotalLength)(e.attributes);return"public push".concat((0,o.capitalize)(e.baseName),"Array() {\n    const { gl, ").concat(e.baseName,"Buff } = this\n    gl.bindBuffer(gl.ARRAY_BUFFER, ").concat(e.baseName,"Buff)\n    gl.bufferData(gl.ARRAY_BUFFER, this.").concat(e.baseName,"Data, ").concat(e.dynamic?"gl.DYNAMIC_DRAW":"gl.STATIC_DRAW",")\n}\n\n/**\n * @param start First vertex index to push\n * @param end First vertex index to NOT push.\n */\npublic push").concat((0,o.capitalize)(e.baseName),"SubArray(start: number, end: number) {\n    const { gl, ").concat(e.baseName,"Buff } = this\n    gl.bindBuffer(gl.ARRAY_BUFFER, ").concat(e.baseName,"Buff)\n    const subData = this.").concat(e.baseName,"Data.subarray(start * ").concat(t,", end * ").concat(t,")\n    gl.bufferSubData(\n        gl.ARRAY_BUFFER, \n        start * Float32Array.BYTES_PER_ELEMENT * ").concat(t,",\n        subData\n    )\n}")})).join("\n\n")}},8099:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeDestroyFunctionCode=void 0;var r=n(5266);t.makeDestroyFunctionCode=function(e){var t=(0,r.makeAttributesGroups)(e).map((function(e){return"".concat(e.baseName,"Buff")}));return e.drawElements&&t.push("elemBuff"),"public destroy() {\n    const { gl, prg, ".concat(t.map((function(e){return"".concat(e)})).join(", ")," } = this\n    ").concat(t.map((function(e){return"gl.deleteBuffer(".concat(e,")")})).join("\n    "),"\n    gl.deleteProgram(prg)\n    gl.deleteVertexArray(this.vertArray)\n}")}},9809:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makePaintFunctionCode=void 0;var r=n(5266);function o(e){return(0,r.makeAttributesGroups)(e).filter((function(e){return e.divisor>0})).length>0}t.makePaintFunctionCode=function(e){var t="/**\n * Fonction à appeler dans un `requestAnimationFrame`.\n * @param time Temps en millisecondes\n * @param onPaint Fonction à utiliser pour:\n * - mettre à jour des uniforms\n * - activer des fonctionnalité de WebGL (depth test, compisiting, ...)\n * - ...\n */\npublic readonly paint = (\n    time: number,\n    onPaint?: (painter: ".concat(e.className,", time: number) => void\n) => {\n    const { gl, prg } = this\n    gl.useProgram(prg)\n    if (onPaint) onPaint(this, time)\n    gl.bindVertexArray(this.vertArray)\n");return e.drawElements?(o(e),t+="    gl.drawElements(gl.".concat(e.primitive,", this.elemCount, gl.").concat(e.elementsSize,", 0)")):o(e)?t+="    gl.drawArraysInstanced(gl.".concat(e.primitive,", 0, this.vertCount, this.instCount)"):t+="    gl.drawArrays(gl.".concat(e.primitive,", 0, this.vertCount)"),t+"\n    gl.bindVertexArray(null)\n}"}},8514:(e,t)=>{"use strict";function n(e,t){var n="xyzw".substring(0,t).split("");return"$".concat(e.name,"(").concat(n.map((function(e){return"".concat(e,": number")})).join(", "),") {\n    this.gl.uniform").concat(n.length,"f(this._$").concat(e.name,", ").concat(n.join(", "),")\n}")}Object.defineProperty(t,"__esModule",{value:!0}),t.makeUniformsLocationsCode=t.makeUniformsCode=void 0,t.makeUniformsCode=function(e){return e.uniforms.map((function(e){return function(e){return 1===e.size?function(e){switch(e.type){case"FLOAT":return function(e){return"$".concat(e.name,"(value: number) {\n    this.gl.uniform1f(this._$").concat(e.name,", value)\n}")}(e);case"FLOAT_VEC2":return n(e,2);case"FLOAT_VEC3":return n(e,3);case"FLOAT_VEC4":return n(e,4);case"SAMPLER_2D":return function(e){var t=e.name,n=e.slot;return"$".concat(t,"(texture: WebGLTexture) {\n    const { gl } = this\n    gl.activeTexture(gl.TEXTURE").concat(n,")\n    gl.bindTexture(gl.TEXTURE_2D, texture)\n    gl.uniform1i(this._$").concat(e.name,", ").concat(n,")\n}")}(e);default:return'/* @TODO: Uniform "'.concat(e.name,'" of type ').concat(e.type," */")}}(e):'/* @TODO: Uniform "'.concat(e.name,'" of type ').concat(e.type,"[").concat(e.size,"] */")}(e)})).join("\n\n")},t.makeUniformsLocationsCode=function(e){return e.uniforms.map((function(e){return"private readonly _$".concat(e.name,": WebGLUniformLocation")})).join("\n")}},6826:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(1306);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},7073:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isCodeOptions=void 0;var r=n(3724);t.isCodeOptions=function(e){try{if((0,r.assertObject)(e),(0,r.assertString)(e.vertCode,"data.vertCode"),(0,r.assertString)(e.fragCode,"data.fragCode"),(0,r.assertString)(e.className,"data.className"),(0,r.assertString)(e.primitive,"data.primitive"),(0,r.assertBoolean)(e.minifyShaderCode,"data.minifyShaderCode"),(0,r.assertBoolean)(e.drawElements,"data.drawElements"),(0,r.assertArray)(e.uniforms,"data.uniforms"),(0,r.assertArray)(e.attributes,"data.attributes"),(0,r.assertObject)(e.attributesDivisors,"data.attributesDivisors"),(0,r.assertObject)(e.attributesDynamicModes,"data.attributesDynamicModes"),(0,r.assertString)(e.elementsSize,"data.elementsSize"),!["UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT"].includes(e.elementsSize))throw Error("Invalid data.elementsSize!");return!0}catch(e){return console.error(e),!1}}},9034:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),l=s(n(8168)),u=s(n(9681)),f=s(n(3693)),d=s(n(1779));n(4619);var A=n(8021),p={POINTS:"POINTS",LINE_STRIP:"LINE_STRIP",LINE_LOOP:"LINE_LOOP",LINES:"LINES",TRIANGLE_STRIP:"TRIANGLE_STRIP",TRIANGLE_FAN:"TRIANGLE_FAN",TRIANGLES:"TRIANGLES"};function m(e){var t=["custom","pages-tools-painter-CodeOptionsView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function h(e){switch(e.type){case"SAMPLER_2D":return"const texture: WebGLTexture = gl.createTexture()\n...\npainter.$".concat(e.name,"(texture)");case"FLOAT":return"painter.$".concat(e.name,"(").concat(100*Math.random(),")");case"FLOAT_VEC2":return"painter.$".concat(e.name,"(").concat(100*Math.random(),", ").concat(100*Math.random(),")");case"FLOAT_VEC3":return"painter.$".concat(e.name,"(").concat(100*Math.random(),", ").concat(100*Math.random(),", ").concat(100*Math.random(),")");case"FLOAT_VEC4":return"painter.$".concat(e.name,"(").concat(100*Math.random(),", ").concat(100*Math.random(),", ").concat(100*Math.random(),", ").concat(100*Math.random(),")");default:return"// Pas encore supporté : ".concat(e.type)}}t.default=function(e){var t=e.value,n=function(n){e.onChange(r(r({},t),n))};return c.createElement("div",{className:m(e)},c.createElement(f.default,{options:p,value:t.primitive,onChange:function(e){return n({primitive:e})}}),c.createElement(l.default,{label:"drawElements",value:t.drawElements,onChange:function(e){return n({drawElements:e})}}),t.drawElements&&c.createElement(f.default,{options:{UNSIGNED_BYTE:"Byte (256)",UNSIGNED_SHORT:"Short (65'535)",UNSIGNED_INT:"Int (4'294'967'297)"},value:t.elementsSize,onChange:function(e){return n({elementsSize:e})}}),c.createElement(l.default,{label:"Minifier",value:t.minifyShaderCode,onChange:function(e){return n({minifyShaderCode:e})}}),c.createElement("h1",null,"Attributes"),c.createElement("div",{className:"grid-3"},c.createElement("div",{className:"hint",title:"Les attributes dynamiques sont susceptibles d'être mis à jour souvent"},"Dynamique"),c.createElement("div",{className:"hint"},"Nom"),c.createElement("div",{className:"hint"},"Diviseur"),t.attributes.map((function(e){return c.createElement(c.Fragment,null,c.createElement("div",{key:"".concat(e.name,"-1")},c.createElement(l.default,{value:(0,A.getDynamicModeForAttibute)(e.name,t),onChange:function(o){(0,A.setDynamicModeForAttibute)(e.name,t,o),n(r({},t))}})),c.createElement("div",{key:"".concat(e.name,"-2")},c.createElement("b",null,e.name)),c.createElement("div",{key:"".concat(e.name,"-3"),title:e.type},c.createElement(d.default,{className:"small-input",value:(0,A.getDivisorForAttibute)(e.name,t),onChange:function(o){(0,A.setDivisorForAttibute)(e.name,t,o),n(r({},t))}})))}))),c.createElement("h1",null,"Uniforms"),c.createElement("div",null,t.uniforms.map((function(e){return c.createElement(u.default,{key:"".concat(e.name),label:"".concat(e.type," ").concat(e.name),expanded:!1,lang:"typescript",value:h(e)})}))))}},8922:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(9034);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},8021:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getArrayTypeForElement=t.setDynamicModeForAttibute=t.getDynamicModeForAttibute=t.setDivisorForAttibute=t.getDivisorForAttibute=void 0,t.getDivisorForAttibute=function(e,t){var n;return Math.max(0,Math.floor(null!==(n=t.attributesDivisors[e])&&void 0!==n?n:0))},t.setDivisorForAttibute=function(e,t,n){t.attributesDivisors[e]=n},t.getDynamicModeForAttibute=function(e,t){var n;return null!==(n=t.attributesDynamicModes[e])&&void 0!==n&&n},t.setDynamicModeForAttibute=function(e,t,n){t.attributesDynamicModes[e]=n},t.getArrayTypeForElement=function(e){var t=e.elementsSize;return t.endsWith("BYTE")?"Uint8Array":t.endsWith("SHORT")?"Uint16Array":"Uint32Array"}},2545:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(7051);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},7051:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return a(t,e),t},s=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(7294)),u=c(n(6826)),f=c(n(8922)),d=c(n(1094)),A=c(n(514)),p=n(7073),m=n(99);n(2533);var h={attributes:[],attributesDivisors:{},attributesDynamicModes:{},className:"Painter",drawElements:!1,elementsSize:"UNSIGNED_SHORT",fragCode:"",minifyShaderCode:!0,primitive:"TRIANGLES",uniforms:[],vertCode:""};t.default=function(){var e=s(l.useState("main"),2),t=e[0],n=(e[1],s((0,m.usePersistentState)("code-options",t,h,p.isCodeOptions),2)),o=n[0],a=n[1],i=s(l.useState(null),2),c=i[0],v=i[1];return l.useEffect((function(){c&&a(r(r({},o),{vertCode:c.vertCode,fragCode:c.fragCode,attributes:c.attributes,uniforms:c.uniforms}))}),[c]),l.createElement("div",{className:"pages-tools-painter-PainterTools"},l.createElement(A.default,{className:"tab-strip",headers:["Shaders","Résultat"]},l.createElement("div",null,l.createElement(d.default,{project:t,onAnalyse:v}),l.createElement(f.default,{value:o,onChange:a})),l.createElement("div",null,l.createElement(u.default,{project:t,options:o}))))}},1094:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(3338);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},3338:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(n(7294)),l=s(n(6560)),u=n(8833),f=n(3724),d=n(99);function A(e){var t=["custom","pages-tools-painter-ProgramCodeEditorView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function p(e){return e.startsWith("#version 300 es\n")?e:"#version 300 es\n\n".concat(e)}n(9266),t.default=function(e){var t=i((0,d.usePersistentState)("vert-code",e.project,"",f.isString),2),n=t[0],r=t[1],o=i(c.useState(""),2),a=o[0],s=o[1],m=i((0,d.usePersistentState)("frag-code",e.project,"",f.isString),2),h=m[0],v=m[1],g=i(c.useState(""),2),b=g[0],C=g[1];return c.useEffect((function(){var t=(0,u.analyseProgram)({vert:p(n),frag:p(h)});s(t.vertError),C(t.fragError),t.vertError||t.fragError||e.onAnalyse(t)}),[n,h]),c.createElement("div",{className:A(e)},c.createElement(l.default,{label:"Vertex Shader",error:a,value:p(n),onChange:r}),c.createElement(l.default,{label:"Fragment Shader",error:b,value:p(h),onChange:v}))}},6047:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4983);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},4834:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(t,n,r){var o=this;this.gl=t,this.vertCount=n,this.instCount=r,this.vertStaticCursor=0,this.instEvery7StaticCursor=0,this.instStaticCursor=0,this.paint=function(e,t){var n=o,r=n.gl,a=n.prg;r.useProgram(a),t&&t(o,e),r.bindVertexArray(o.vertArray),r.drawArraysInstanced(r.TRIANGLES,0,o.vertCount,o.instCount),r.bindVertexArray(null)};var a=t.createProgram();if(!a)throw Error("Unable to create a WebGL Program!");e.createShader(t,a,t.VERTEX_SHADER,e.VERT),e.createShader(t,a,t.FRAGMENT_SHADER,e.FRAG),t.linkProgram(a),this.prg=a,this._$uniTrianglesScale=t.getUniformLocation(a,"uniTrianglesScale"),this._$uniAngleStep=t.getUniformLocation(a,"uniAngleStep"),this._$uniScreenScale=t.getUniformLocation(a,"uniScreenScale"),this._$uniOpacity=t.getUniformLocation(a,"uniOpacity");var i=t.createVertexArray();if(!i)throw Error("Unable to create Vertex Array Object!");this.vertArray=i,t.bindVertexArray(i);var s=Float32Array.BYTES_PER_ELEMENT,c=3*s,l=t.createBuffer();if(!l)throw Error("Unable to create WebGL Buffer (vertStatic)!");this.vertStaticBuff=l,t.bindBuffer(t.ARRAY_BUFFER,l),this.vertStaticData=new Float32Array(3*n),t.bufferData(t.ARRAY_BUFFER,this.vertStaticData,t.STATIC_DRAW);var u=t.getAttribLocation(a,"attVertexPolarCoords");t.enableVertexAttribArray(u),t.vertexAttribPointer(u,3,t.FLOAT,!1,c,0*s),t.vertexAttribDivisor(u,0);var f=3*s,d=t.createBuffer();if(!d)throw Error("Unable to create WebGL Buffer (instEvery7Static)!");this.instEvery7StaticBuff=d,t.bindBuffer(t.ARRAY_BUFFER,d),this.instEvery7StaticData=new Float32Array(3*Math.floor(r/7)),t.bufferData(t.ARRAY_BUFFER,this.instEvery7StaticData,t.STATIC_DRAW);var A=t.getAttribLocation(a,"attInstanceColor");t.enableVertexAttribArray(A),t.vertexAttribPointer(A,3,t.FLOAT,!1,f,0*s),t.vertexAttribDivisor(A,7);var p=1*s,m=t.createBuffer();if(!m)throw Error("Unable to create WebGL Buffer (instStatic)!");this.instStaticBuff=m,t.bindBuffer(t.ARRAY_BUFFER,m),this.instStaticData=new Float32Array(1*r),t.bufferData(t.ARRAY_BUFFER,this.instStaticData,t.STATIC_DRAW);var h=t.getAttribLocation(a,"attInstanceAngle");t.enableVertexAttribArray(h),t.vertexAttribPointer(h,1,t.FLOAT,!1,p,0*s),t.vertexAttribDivisor(h,1),t.bindVertexArray(null)}return e.prototype.pushVertStaticArray=function(){var e=this.gl,t=this.vertStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.vertStaticData,e.STATIC_DRAW)},e.prototype.pushVertStaticSubArray=function(e,t){var n=this.gl,r=this.vertStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.vertStaticData.subarray(3*e,3*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*3,o)},e.prototype.pushInstEvery7StaticArray=function(){var e=this.gl,t=this.instEvery7StaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.instEvery7StaticData,e.STATIC_DRAW)},e.prototype.pushInstEvery7StaticSubArray=function(e,t){var n=this.gl,r=this.instEvery7StaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.instEvery7StaticData.subarray(3*e,3*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*3,o)},e.prototype.pushInstStaticArray=function(){var e=this.gl,t=this.instStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.instStaticData,e.STATIC_DRAW)},e.prototype.pushInstStaticSubArray=function(e,t){var n=this.gl,r=this.instStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.instStaticData.subarray(1*e,1*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*1,o)},e.prototype.pokeVertStaticData=function(e,t,n){var r=this.vertStaticCursor;if(r<0||r>=this.vertCount)throw Error("[pokeVertStaticData] Cursor out of range: vertStaticCursor = ".concat(r));var o=this.vertStaticData,a=3*r;o[a++]=e,o[a++]=t,o[a++]=n,this.vertStaticCursor++},e.prototype.pokeInstEvery7StaticData=function(e,t,n){var r=this.instEvery7StaticCursor;if(r<0||r>=Math.floor(this.instCount/7))throw Error("[pokeInstEvery7StaticData] Cursor out of range: instEvery7StaticCursor = ".concat(r));var o=this.instEvery7StaticData,a=3*r;o[a++]=e,o[a++]=t,o[a++]=n,this.instEvery7StaticCursor++},e.prototype.pokeInstStaticData=function(e){var t=this.instStaticCursor;if(t<0||t>=this.instCount)throw Error("[pokeInstStaticData] Cursor out of range: instStaticCursor = ".concat(t));var n=1*t;this.instStaticData[n++]=e,this.instStaticCursor++},e.prototype.destroy=function(){var e=this,t=e.gl,n=e.prg,r=e.vertStaticBuff,o=e.instEvery7StaticBuff,a=e.instStaticBuff;t.deleteBuffer(r),t.deleteBuffer(o),t.deleteBuffer(a),t.deleteProgram(n),t.deleteVertexArray(this.vertArray)},e.prototype.$uniTrianglesScale=function(e){this.gl.uniform1f(this._$uniTrianglesScale,e)},e.prototype.$uniAngleStep=function(e){this.gl.uniform1f(this._$uniAngleStep,e)},e.prototype.$uniScreenScale=function(e,t){this.gl.uniform2f(this._$uniScreenScale,e,t)},e.prototype.$uniOpacity=function(e){this.gl.uniform1f(this._$uniOpacity,e)},e.createShader=function(e,t,n,r){var o=e.createShader(n);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(t,o)},e.VERT="#version 300 es\nuniform vec2 uniScreenScale;\nuniform float uniAngleStep;\nuniform float uniTrianglesScale;\nin vec3 attVertexPolarCoords;\nin vec3 attInstanceColor;\nin float attInstanceAngle;\nout vec3 varColor;\nconst float RAD_PER_DEG=0.017453292519943295;\nvoid main(){varColor=attInstanceColor*vec3(attVertexPolarCoords.z);\nfloat instAng=uniAngleStep*float(1+gl_InstanceID)*RAD_PER_DEG;\nfloat instDis=0.75-float(gl_InstanceID)*0.0138888888889;\nfloat vertAng=instAng+(attVertexPolarCoords.x+attInstanceAngle)*RAD_PER_DEG;\nfloat vertDis=attVertexPolarCoords.y*instDis*uniTrianglesScale;\nfloat x=vertDis*cos(vertAng);\nfloat y=vertDis*sin(vertAng);\nfloat cx=instDis*cos(instAng);\nfloat cy=instDis*sin(instAng);\ngl_Position=vec4(uniScreenScale*vec2(cx+x,cy+y),0.0,1.0);}",e.FRAG="#version 300 es\nprecision mediump float;\nuniform float uniOpacity;\nin vec3 varColor;\nout vec4 FragColor;\nvoid main(){FragColor=vec4(varColor,uniOpacity);}",e}();t.default=n},4983:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(7294)),c=i(n(4834)),l=i(n(4017));function u(e){var t=["custom","Test"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function f(e){var t=new c.default(e,12,42),n=.1,r=.55;t.pokeInstEvery7StaticData(n,r,1),t.pokeInstEvery7StaticData(n,1,r),t.pokeInstEvery7StaticData(r,n,1),t.pokeInstEvery7StaticData(1,n,r),t.pokeInstEvery7StaticData(r,1,n),t.pokeInstEvery7StaticData(1,r,n),t.pushInstEvery7StaticArray();for(var o=0;o<42;o++)t.pokeInstStaticData(360*o/42);return t.pushInstStaticArray(),t.pokeVertStaticData(0,.3,0),t.pokeVertStaticData(90,.4,1),t.pokeVertStaticData(-90,.4,1),t.pokeVertStaticData(0,.5,2),t.pokeVertStaticData(120,.25,.1),t.pokeVertStaticData(180,0,1),t.pokeVertStaticData(0,.5,2),t.pokeVertStaticData(-120,.25,.1),t.pokeVertStaticData(180,0,1),t.pokeVertStaticData(0,.4,1),t.pokeVertStaticData(60,.4,2),t.pokeVertStaticData(-60,.4,2),t.pushVertStaticArray(),e.clearColor(0,0,0,1),t.instCount=1,new Promise((function(n){n((function(n){t.paint(n,(function(t,r){e.clear(e.COLOR_BUFFER_BIT),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA),t.$uniOpacity(1),t.$uniAngleStep(.002*r),t.$uniTrianglesScale(1+2*Math.abs(Math.sin(74545e-8*n)));var o=e.drawingBufferWidth,a=e.drawingBufferHeight;o>a?t.$uniScreenScale(a/o,1):t.$uniScreenScale(1,o/a)}))}))}))}n(4370),t.default=function(e){return s.createElement("div",{className:u(e)},s.createElement(l.default,{onInit:f,play:!0}))}},9114:function(e,t){"use strict";var n=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},r=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,a=t.length;o<a;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var o=0;return function(){for(var a=[],i=0;i<arguments.length;i++)a[i]=arguments[i];o&&window.clearTimeout(o),o=window.setTimeout((function(){o=0,e.apply(void 0,r([],n(a),!1))}),t)}}},3749:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(9114)),a=n(5139),i=r(n(6569)),s=r(n(4459));t.default={Debouncer:o.default,sleep:a.sleep,Throttler:i.default,UpdateTasks:s.default}},5139:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sleep=void 0,t.sleep=function(e){return new Promise((function(t){return window.setTimeout(t,e)}))}},6569:function(e,t){"use strict";var n=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},r=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,a=t.length;o<a;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var o=0,a=0,i=function(){},s=[],c=function(){o=0,i.apply(void 0,r([],n(s),!1))};return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];i=e,s=n;var l=Date.now(),u=l-a;a=l,u>t?c():0===o&&(o=window.setTimeout(c,t-u))}}},4459:function(e,t){"use strict";var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function s(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,s)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(){this.actionRunning=!1}return e.prototype.exec=function(e){this.curTask?this.nxtTask=e:this.curTask=e,this.actionRunning||this.action()},e.prototype.action=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:this.actionRunning=!0,t.label=1;case 1:t.trys.push([1,,8,9]),t.label=2;case 2:if(!this.curTask)return[3,7];t.label=3;case 3:return t.trys.push([3,5,,6]),[4,this.curTask()];case 4:return t.sent(),[3,6];case 5:return e=t.sent(),console.error("[UpdateTasks]",e),[3,6];case 6:return this.curTask=this.nxtTask,[3,2];case 7:return[3,9];case 8:return this.actionRunning=!1,[7];case 9:return[2]}}))}))},e}();t.default=o},8549:function(e,t){"use strict";var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function s(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,s)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.copyToClipboard=void 0,t.copyToClipboard=function(e){return n(this,void 0,void 0,(function(){var t;return r(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,navigator.clipboard.writeText(e)];case 1:return n.sent(),[3,3];case 2:return t=n.sent(),console.error("Unable to copy to the clipboard:",t),[3,3];case 3:return[2]}}))}))}},7541:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getExceptionMessage=void 0;var o=r(n(1142));t.getExceptionMessage=function(e){return e instanceof Error?e.message:"string"==typeof e?e:o.default.stringify(e,null,"  ")}},6535:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getGrammarForLanguage=void 0,t.getGrammarForLanguage=function(e){return n};var n={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/g,lookbehind:!0,greedy:!0},{pattern:/"(^|[^\\:])\/\/.*"/g,lookbehind:!0,greedy:!0}],number:{pattern:/(^|[^\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?|\d+(?:_\d+)*n|(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?)(?![\w$])/,lookbehind:!0},type:r(["bvec2","bvec3","bvec4","dmat2","dmat2x2","dmat2x3","dmat2x4","dmat3","dmat3x2","dmat3x3","dmat3x4","dmat4","dmat4x2","dmat4x3","dmat4x4","dvec2","dvec3","dvec4","float","fvec2","fvec3","fvec4","isampler1D","isampler1DArray","isampler2D","isampler2DArray","isampler2DMS","isampler2DMSArray","isampler2DRect","isampler3D","isamplerBuffer","isamplerCube","isamplerCubeArray","ivec2","ivec3","ivec4","mat2","mat2x2","mat2x3","mat2x4","mat3","mat3x2","mat3x3","mat3x4","mat4","mat4x2","mat4x3","mat4x4","sample","sampler1D","sampler1DArray","sampler1DArrayShadow","sampler1DShadow","sampler2D","sampler2DArray","sampler2DArrayShadow","sampler2DMS","sampler2DMSArray","sampler2DRect","sampler2DRectShadow","sampler2DShadow","sampler3D","samplerBuffer","samplerCube","samplerCubeArray","samplerCubeArrayShadow","samplerCubeShadow","usampler1D","usampler1DArray","usampler2D","usampler2DArray","usampler2DMS","usampler2DMSArray","usampler2DRect","usampler3D","usamplerBuffer","usamplerCube","usamplerCubeArray","uvec2","uvec3","uvec4","vec2","vec3","vec4","void"]),keyword:r(["centroid","const","discard","else","flat","highp","if","in","inout","invariant","layout","lowp","mediump","noperspective","out","patch","precision","smooth","subroutine","uniform","active","asm","cast","class","common","enum","extern","external","filter","fixed","goto","half","hvec2","hvec3","hvec4","iimage1D","iimage1DArray","iimage2D","iimage2DArray","iimage3D","iimageBuffer","iimageCube","image1D","image1DArray","image1DArrayShadow","image1DShadow","image2D","image2DArray","image2DArrayShadow","image2DShadow","image3D","imageBuffer","imageCube","inline","input","interface","long","namespace","noinline","output","packed","partition","public","row_major","sampler3DRect","short","sizeof","static","superp","template","this","typedef","uimage1D","uimage1DArray","uimage2D","uimage2DArray","uimage3D","uimageBuffer","uimageCube","union","unsigned","using","volatile"]),global:r(["gl_DepthRange","gl_DepthRange.diff","gl_DepthRange.far","gl_DepthRange.near","gl_FragCoord","gl_FragDepth","gl_FrontFacing","gl_InstanceID","gl_PointCoord","gl_PointSize","gl_Position","gl_VertexID"]),function:r(["abs","acos","acosh","all","any","asin","asinh","atan","atanh","ceil","clamp","cos","cosh","cross","degrees","determinant","dFdx","dFdy","distance","dot","equal","exp","exp2","faceforward","floatBitsToInt","floatBitsToUint","floor","fract","fwidth","greaterThan","greaterThanEqual","intBitsToFloat","inverse","inversesqrt","isinf","isnan","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","modf","normalize","not","notEqual","outerProduct","packHalf2x16","packSnorm2x16","packUnorm2x16","pow","radians","reflect","refract","round","roundEven","sign","sin","sinh","smoothstep","sqrt","step","tan","tanh","texelFetch","texelFetchOffset","texture","textureGrad","textureGradOffset","textureLod","textureLodOffset","textureOffset","textureProj","textureProjGrad","textureProjGradOffset","textureProjLod","textureProjLodOffset","textureProjOffset","textureSize","transpose","trunc","uintBitsToFloat","unpackHalf2x16","unpackSnorm2x16","unpackUnorm2x16"])};function r(e){return new RegExp("(?:[^a-zA-Z0-9_])(".concat(e.join("|"),")(?=[^a-zA-Z0-9_])"))}},99:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=n(6618);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a(i).default}}),o(n(6618),t)},6618:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function s(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,s)}c((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},c=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.usePersistentState=void 0;var u=a(n(7294)),f=l(n(1142)),d=new(function(){function e(){}return e.prototype.get=function(e,t,n){return i(this,void 0,void 0,(function(){var r,o;return s(this,(function(a){if(console.log("[DB]",e,t,">GET>"),null===(r=window.localStorage.getItem(A(e,t))))return[2,n];try{return o=f.default.parse(r),console.log(o),[2,o]}catch(e){return console.log(r),console.error(e),[2,n]}return[2]}))}))},e.prototype.set=function(e,t,n){return i(this,void 0,void 0,(function(){return s(this,(function(r){return console.log("[DB]",e,t,"<SET<"),console.log(n),window.localStorage.setItem(A(e,t),f.default.stringify(n)),[2]}))}))},e}());function A(e,t){return"wgl2:".concat(e,"\t").concat(t)}t.usePersistentState=function(e,t,n,r){var o=c(u.useState(n),2),a=o[0],i=o[1];return u.useEffect((function(){d.get(e,t,n).then((function(e){i(r(e)?e:n)}))}),[n]),[a,function(n){i(n),d.set(e,t,n)}]},t.default=d},5395:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.capitalize=void 0,t.capitalize=function(e){return"".concat(e.charAt(0).toUpperCase()).concat(e.substring(1))}},3724:function(e,t){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};function r(e){return void 0===e}function o(e){return!Array.isArray(e)&&null!==e&&"object"==typeof e}function a(e){return"string"==typeof e}function i(e){return"string"==typeof e||void 0===e}function s(e){return"number"==typeof e}function c(e,t){if(void 0===t&&(t="data"),!s(e))throw Error("".concat(t," was expected to be a number but we got ").concat(typeof e,"!"))}function l(e){return"boolean"==typeof e}function u(e){var t,r;if(!Array.isArray(e))return!1;try{for(var o=n(e),i=o.next();!i.done;i=o.next())if(!a(i.value))return!1}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return!0}function f(e){var t,r;if(!Array.isArray(e))return!1;try{for(var o=n(e),a=o.next();!a.done;a=o.next())if(!s(a.value))return!1}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return!0}function d(e){return Array.isArray(e)}function A(e,t){if(void 0===t&&(t="data"),!d(e))throw Error("".concat(t," was expected to be an array but we got ").concat(typeof e,"!"))}Object.defineProperty(t,"__esModule",{value:!0}),t.isEMail=t.assertArray=t.ensureArray=t.isArray=t.ensureNumberArray=t.assertNumberArray=t.assertStringArray=t.isNumberArray=t.isStringArray=t.isArrayBuffer=t.assertBoolean=t.isBoolean=t.ensureNumber=t.assertNumberOrUndefined=t.assertNumber=t.isNumber=t.assertStringOrIUndefined=t.isStringOrIUndefined=t.ensureString=t.assertStringOrNumber=t.assertString=t.isString=t.assertObject=t.isObject=t.isUndefined=void 0,t.isUndefined=r,t.isObject=o,t.assertObject=function(e,t){if(void 0===t&&(t="data"),!o(e))throw Error("".concat(t," was expected to be an object but we got ").concat(typeof e,"!"))},t.isString=a,t.assertString=function(e,t){if(void 0===t&&(t="data"),!a(e))throw Error("".concat(t," was expected to be a string but we got ").concat(typeof e,"!"))},t.assertStringOrNumber=function(e,t){if(void 0===t&&(t=""),!a(e)&&!s(e))throw Error("".concat(t," was expected to be a string or a number but we got ").concat(typeof e,"!"))},t.ensureString=function(e,t){return a(e)?e:t},t.isStringOrIUndefined=i,t.assertStringOrIUndefined=function(e,t){if(void 0===t&&(t="data"),!i(e))throw Error("".concat(t," was expected to ba a string or undefined but we got ").concat(typeof e,"!"))},t.isNumber=s,t.assertNumber=c,t.assertNumberOrUndefined=function(e,t){if(void 0===t&&(t="data"),!s(e)&&!r(e))throw Error("".concat(t," was expected to be a number but we got ").concat(typeof e,"!"))},t.ensureNumber=function(e,t){return s(e)?e:t},t.isBoolean=l,t.assertBoolean=function(e,t){if(void 0===t&&(t="data"),!l(e))throw Error("".concat(t," was expected to be a boolean but we got ").concat(typeof e,"!"))},t.isArrayBuffer=function(e){return!!e&&e instanceof ArrayBuffer},t.isStringArray=u,t.isNumberArray=f,t.assertStringArray=function(e,t){if(void 0===t&&(t="data"),!u(e))throw Error("".concat(t," was expected to be an array of strings but we got ").concat(typeof e,"!"))},t.assertNumberArray=function(e,t){void 0===t&&(t="data"),A(e,t);for(var n=0;n<e.length;n++)c(e[n],"".concat(t,"[").concat(n,"]"))},t.ensureNumberArray=function(e,t){return void 0===t&&(t=[]),f(e)?e:t},t.isArray=d,t.ensureArray=function(e,t){return void 0===t&&(t=[]),d(e)?e:t},t.assertArray=A;var p=/^[^@ \t\n\r]+@(?:[A-Z0-9-]+\.)+[A-Z]{2,6}$/gi;t.isEMail=function(e){return!!a(e)&&("admin"===e||"test"===e||(p.lastIndex=-1,p.test(e)))}},8725:function(e,t){"use strict";var n=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=1e-6,a=255,i=1/6,s=1/15,c=1/99,l=1/a,u=function(){function e(t){void 0===t&&(t="#000000"),this.R=0,this.G=0,this.B=0,this.H=0,this.S=0,this.L=0,this.A=1,e.isValid(t)&&this.parse(t)}return e.fromColorOrString=function(t){return t?t instanceof e?t:new e(t):e.newBlack()},e.fromArrayRGB=function(t){if(!Array.isArray(t))return console.error("Invalid param rgb: ",t),e.fromRGB(0,0,0);for(;t.length<3;)t.push(0);var r=n(t,3),o=r[0],a=r[1],i=r[2];return e.fromRGB(o,a,i)},e.fromArrayRGBA=function(t){if(!Array.isArray(t))return console.error("Invalid param rgba: ",t),e.fromRGB(0,0,0);for(;t.length<4;)t.push(1);var r=n(t,4),o=r[0],a=r[1],i=r[2],s=r[3];return e.fromRGBA(o,a,i,s)},e.fromHSL=function(t,n,r){var o=new e;return o.H=t,o.S=n,o.L=r,o.hsl2rgb(),o},e.fromHSLA=function(t,n,r,o){var a=new e;return a.H=t,a.S=n,a.L=r,a.hsl2rgb(),a.A=o,a},e.isValid=function(e){if("string"!=typeof e)return!1;if("#"!==e.charAt(0))return!1;switch(e.length){case"#RGB".length:case"#RGBA".length:case"#RRGGBB".length:case"#RRGGBBAA".length:return!0;default:return!1}},e.contrast=function(t,n){var r=e.fromColorOrString(t),o=e.fromColorOrString(n),a=e.mix(r,o,o.A),i=r.luminance(),s=a.luminance(),c=.05;return i>s?(i+c)/(s+c):(s+c)/(i+c)},e.bestContrast=function(t){for(var n,o,a=[],i=1;i<arguments.length;i++)a[i-1]=arguments[i];var s=e.fromColorOrString(t),c=0,l=-1,u=0;try{for(var f=r(a),d=f.next();!d.done;d=f.next()){var A=d.value,p=e.contrast(s,A);p>c&&(c=p,l=u),u++}}catch(e){n={error:e}}finally{try{d&&!d.done&&(o=f.return)&&o.call(f)}finally{if(n)throw n.error}}return a[l]},e.luminance=function(t){return void 0===t?0:e.fromColorOrString(t).luminance()},e.luminanceStep=function(t){if(!e.isValid(t))return-1;var n=e.luminance(t),r=.05;return(n+r)/r>1.05/(n+r)?1:0},e.isDarkColor=function(t){return 0===e.luminanceStep(t)},e.isLightColor=function(t){return 1===e.luminanceStep(t)},e.makeDarker=function(t,n){if(void 0===n&&(n=.5),n<=0)return new e("#000");var r=e.fromColorOrString(t);return n>=1?r:e.fromHSLA(r.H,r.S,r.L,r.A*n)},e.makeHueRotated=function(t,n){void 0===n&&(n=.5);var r=e.fromColorOrString(t);return r.rgb2hsl(),r.H+=n-Math.floor(n),r.H>1&&r.H--,r.hsl2rgb(),r},e.makeTransparent=function(t,n){var r=e.fromColorOrString(t);return r.A=p(n),r},e.mix=function(t,n,r){void 0===r&&(r=.5);var o=e.fromColorOrString(t),a=e.fromColorOrString(n),i=1-r;return e.fromRGBA(r*a.R+i*o.R,r*a.G+i*o.G,r*a.B+i*o.B,r*a.A+i*o.A)},e.newBlack=function(){return e.fromRGB(0,0,0)},e.newWhite=function(){return e.fromRGB(1,1,1)},e.fromRGB=function(t,n,r){var o=new e;return o.R=t,o.G=n,o.B=r,o.A=1,o},e.fromRGBA=function(t,n,r,o){var a=new e;return a.R=t,a.G=n,a.B=r,a.A=o,a},e.normalize=function(t){return new e(t).stringify()},e.interpolate=function(t,n){if(n<1)return[];for(var r=t.map((function(t){return"string"==typeof t?new e(t):t})),o=[],a=1;a<=n;a++){var i=a/(n+1);o.push(e.ramp(r,i))}return o},e.ramp=function(t,n){if(void 0===n&&(n=.5),0===t.length)return e.newBlack();if(1===t.length)return t[0];var r=t.length-1,o=Math.floor(n*r),a=t[o];if(o===r)return a;var i=t[o+1],s=n*r-o;return e.mix(a,i,s)},e.prototype.copy=function(){var t=new e;return t.R=this.R,t.G=this.G,t.B=this.B,t.A=this.A,t.H=this.H,t.S=this.S,t.L=this.L,t},e.prototype.hsl2rgb=function(){var e=6*this.H,t=this.S,n=this.L,r=(1-Math.abs(n+n-1))*t,o=r*(1-Math.abs(e%2-1)),a=0,i=0,s=0;e<3?e<1?(a=r,i=o,s=0):e<2?(a=o,i=r,s=0):(a=0,i=r,s=o):e<4?(a=0,i=o,s=r):e<5?(a=o,i=0,s=r):(a=r,i=0,s=o);var c=n-.5*r;this.R=a+c,this.G=i+c,this.B=s+c},e.prototype.luminance=function(){var e=this,t=e.R,n=e.G,r=e.B,o=.03928,a=.07739938080495357,i=.055,s=.9478672985781991;return.2126*(t<o?t*a:Math.pow((t+i)*s,2.4))+.7152*(n<o?t*a:Math.pow((n+i)*s,2.4))+.0722*(r<o?t*a:Math.pow((r+i)*s,2.4))},e.prototype.luminanceStep=function(){return this.luminance()<.62?0:1},e.prototype.parse=function(e){void 0===e&&(e="#000000");var t=e.trim().toUpperCase();return!!(this.parseHexa.call(this,t)||this.parseRGB.call(this,t)||this.parseRGBA.call(this,t)||this.parseHSL.call(this,t))},e.prototype.rgb2hsl=function(){var e=this.R,t=this.G,n=this.B,r=Math.min(e,t,n),a=Math.max(e,t,n),s=a-r;this.L=.5*(a+r),s<o?(this.H=0,this.S=0):(this.S=s/(1-Math.abs(this.L+this.L-1)),this.H=a===e?t>=n?i*((t-n)/s):i*((n-t)/s):a===t?i*(2+(n-e)/s):i*(4+(e-t)/s))},e.prototype.stringify=function(){var e=m(this.R*a)+m(this.G*a)+m(this.B*a);this.A<1&&(e+=m(this.A*a));for(var t=!0,n=0;n<e.length;n+=2)if(e.charAt(n)!==e.charAt(n+1)){t=!1;break}return t&&(e=6===e.length?e.charAt(0)+e.charAt(2)+e.charAt(4):e.charAt(0)+e.charAt(2)+e.charAt(4)+e.charAt(6)),"#".concat(e)},e.prototype.toArrayRGB=function(){return[this.R,this.G,this.B]},e.prototype.toArrayRGBA=function(){return[this.R,this.G,this.B,this.A]},e.prototype.parseHexa=function(e){if("#"!==e.charAt(0))return!1;var t=0,n=0,r=0,o=1;switch(e.length){case"#fff".length:t=parseInt(e.charAt(1),16)*s,n=parseInt(e.charAt(2),16)*s,r=parseInt(e.charAt(3),16)*s;break;case"#fff7".length:t=parseInt(e.charAt(1),16)*s,n=parseInt(e.charAt(2),16)*s,r=parseInt(e.charAt(3),16)*s,o=parseInt(e.charAt(4),16)*s;break;case"#ffffff".length:t=parseInt(e.substr(1,2),16)*l,n=parseInt(e.substr(3,2),16)*l,r=parseInt(e.substr(5,2),16)*l;break;case"#ffffff77".length:t=parseInt(e.substr(1,2),16)*l,n=parseInt(e.substr(3,2),16)*l,r=parseInt(e.substr(5,2),16)*l,o=parseInt(e.substr(7,2),16)*l}return isNaN(t)||isNaN(n)||isNaN(r)||isNaN(o)?this.R=this.G=this.B=this.A=0:(this.R=t,this.G=n,this.B=r,this.A=o),!0},e.prototype.parseHSL=function(e){var t=A.exec(e);return!!t&&(this.H=p(.002785515320334262*parseInt(t[1],10)),this.S=p(parseInt(t[2],10)*c),this.L=p(parseInt(t[3],10)*c),this.A=1,this.hsl2rgb(),!0)},e.prototype.parseRGB=function(e){var t=f.exec(e);return!!t&&(this.R=p(parseInt(t[1],10)*l),this.G=p(parseInt(t[2],10)*l),this.B=p(parseInt(t[3],10)*l),this.A=1,!0)},e.prototype.parseRGBA=function(e){var t=d.exec(e);return!!t&&(this.R=p(parseInt(t[1],10)*l),this.G=p(parseInt(t[2],10)*l),this.B=p(parseInt(t[3],10)*l),this.A=p(parseFloat(t[4])),!0)},e}();t.default=u;var f=/^RGB[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/,d=/^RGBA[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/,A=/^HSL[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;function p(e){return Math.min(1,Math.max(0,e))}function m(e){var t=Math.min(Math.max(Math.floor(e+o),0),a).toString(16);return t.length<"FF".length&&(t="0".concat(t)),t}},7857:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(8725);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},8499:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(9790)),i=o(n(7294)),s=i.default.createElement("svg",{viewBox:"0 0 24 24",preserveAspectRatio:"meet xMidYMid"},i.default.createElement("path",{fill:"currentColor",d:"M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z"})),c=new(function(){function e(){this.icons=new Map}return e.prototype.register=function(e,t){this.icons.set(e,t)},e.prototype.registerFromPath=function(e,t){this.icons.set(e,i.default.createElement("svg",{viewBox:"0 0 24 24",preserveAspectRatio:"meet xMidYMid"},i.default.createElement("path",{fill:"currentColor",d:t})))},e.prototype.registerMany=function(e){var t,n;try{for(var o=r(Object.keys(e)),a=o.next();!a.done;a=o.next()){var i=a.value,s=e[i];this.registerFromPath(i,s)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}},e.prototype.make=function(e){var t;return null!==(t=this.icons.get(e))&&void 0!==t?t:s},e}());t.default=c,c.registerMany(a.default)},1078:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(8499);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},7377:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.useDebouncedEffect=void 0;var i=a(n(7294));t.useDebouncedEffect=function(e,t,n){var r=i.useRef(-1);i.useEffect((function(){window.clearTimeout(r.current),r.current=window.setTimeout(e,t)}),n)}},9383:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i};Object.defineProperty(t,"__esModule",{value:!0}),t.useHash=void 0;var s=a(n(7294));t.useHash=function(){var e=i(s.useState(window.location.hash),2),t=e[0],n=e[1];return s.useEffect((function(){var e=function(e){console.log("🚀 [hash] evt.newURL = ",e.newURL),n(window.location.hash)};return window.addEventListener("hashchange",e),function(){return window.removeEventListener("hashchange",e)}}),[]),t}},5525:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useTogglePopup=t.useResizeObserver=t.useLocalStorageState=t.useDebouncedEffect=void 0;var r=n(7377);Object.defineProperty(t,"useDebouncedEffect",{enumerable:!0,get:function(){return r.useDebouncedEffect}});var o=n(7066);Object.defineProperty(t,"useLocalStorageState",{enumerable:!0,get:function(){return o.useLocalStorageState}});var a=n(4514);Object.defineProperty(t,"useResizeObserver",{enumerable:!0,get:function(){return a.useResizeObserver}});var i=n(1788);Object.defineProperty(t,"useTogglePopup",{enumerable:!0,get:function(){return i.useTogglePopup}})},7066:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.useLocalStorageState=void 0;var c=s(n(1142)),l=a(n(7294));t.useLocalStorageState=function(e,t,n){var r=i(l.useState(function(e,t,n){var r=window.localStorage.getItem(e);if(!r)return n?n(t):t;try{var o=c.default.parse(r);if(typeof o!=typeof t)throw Error("Incompatible types!");return n?n(o):o}catch(r){return console.error('Unexpected value in local storage "'.concat(e,'":'),r),n?n(t):t}}(t,e,n)),2),o=r[0],a=r[1];return[o,function(e){a(e),window.localStorage.setItem(t,c.default.stringify(e))}]}},4514:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.useResizeObserver=void 0;var c=a(n(7294)),l=s(n(3749));function u(e){return e?[e.clientWidth,e.clientHeight]:[0,0]}t.useResizeObserver=function(e,t){var n=i(c.useState(u(e)),2),r=n[0],o=n[1],a=c.useMemo((function(){var e=function(e,t){return o([e,t])};return"number"==typeof t&&t>0?l.default.Debouncer(e,t):e}),[t]);return c.useEffect((function(){if(o(u(e)),e){var t=new ResizeObserver((function(){var t=e.getBoundingClientRect(),n=t.width,r=t.height;a(n,r)}));return t.observe(e),function(){return t.unobserve(e)}}}),[e,a]),r}},1788:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i};Object.defineProperty(t,"__esModule",{value:!0}),t.useTogglePopup=void 0;var s=a(n(7294)),c=Math.random();function l(e,t){if(!e)return!1;var n=e.type,r=e.id,o=e.value;return"toggle-popup"===n&&r===t&&"boolean"==typeof o}function u(e,t){return{type:"toggle-popup",id:e,value:t}}function f(){window.history.back()}t.useTogglePopup=function(){var e=s.useRef(-1),t=s.useRef(null),n=i(s.useState(!1),2),r=n[0],o=n[1];return s.useEffect((function(){e.current=c++;var n=function(n){var r=n.state,a=t.current;if(t.current=r,l(r,e.current)){var i=r.value;o(i),i||(l(a,e.current)?!0===a.value&&f():window.history.forward())}};return window.addEventListener("popstate",n,!1),function(){return window.removeEventListener("popstate",n,!1)}}),[]),[r,function(n){if(n!==r)if(n){var a=e.current;window.history.pushState(u(a,!1),document.title,null);var i=u(a,!0);window.history.pushState(i,document.title,null),t.current=i,o(!0)}else f()}]}},4977:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.target=null!=e?e:window.document.body}return e.prototype.set=function(e,t){this.target.style.setProperty(this.sanitizeName(e),t)},e.prototype.get=function(e){return this.target.style.getPropertyValue(this.sanitizeName(e))},e.prototype.sanitizeName=function(e){return e.startsWith("--")?e:"--".concat(e)},e}();t.default=n},1311:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(352);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},352:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(7857)),i=o(n(4977));n(3003);var s="theme",c="-color",l="-opacity-",u={apply:function(e,t){f=e;var n=new i.default(t);(function(e,t){var n=a.default.fromColorOrString(e.colors.white),r=a.default.fromColorOrString(e.colors.black);if(d(t,"primary",e.colors.primary.base,n,r),d(t,"primary-light",e.colors.primary.light,n,r),d(t,"primary-dark",e.colors.primary.dark,n,r),d(t,"accent",e.colors.accent.base,n,r),d(t,"accent-light",e.colors.accent.light,n,r),d(t,"accent-dark",e.colors.accent.dark,n,r),d(t,"error",e.colors.error,n,r),d(t,"screen",e.colors.screen,n,r),d(t,"frame",e.colors.frame,n,r),d(t,"section",e.colors.section,n,r),d(t,"input",e.colors.input,n,r),d(t,"white",e.colors.white,n,r),d(t,"black",e.colors.black,n,r),e.colors.link)t.set(p("link"),e.colors.link);else{var o=u.shade(e.colors.accent.base,.6),i=u.shade(e.colors.accent.base,.6);t.set(p("link"),a.default.bestContrast(e.colors.frame,e.colors.primary.dark,e.colors.primary.base,e.colors.primary.light,i.light,i.dark,e.colors.accent.dark,e.colors.accent.base,e.colors.accent.light,o.light,o.dark))}})(e,n),function(e,t){var n,o,a={card:1,button:2,header:4,"button-pressed":8,dialog:24};try{for(var i=r(Object.keys(a)),c=i.next();!c.done;c=i.next()){var l=c.value,u=.0625*a[l];t.set("".concat(s).concat("-shadow","-").concat(l),"0 ".concat(u,"rem ").concat(2*u,"rem ").concat("#000a"))}}catch(e){n={error:e}}finally{try{c&&!c.done&&(o=i.return)&&o.call(i)}finally{if(n)throw n.error}}}(0,n)},shade:function(e,t){void 0===t&&(t=.5);var n="string"==typeof e?new a.default(e):e;n.rgb2hsl();var r=n.H,o=n.S,i=n.L,s=n.A;return{base:n.stringify(),dark:a.default.fromHSLA(r,o,i*(1-t),s).stringify(),light:a.default.fromHSLA(r,o,i+(1-i)*t,s).stringify()}},get current(){return f},get defaultDarkTheme(){return{colors:{black:"#000",white:"#fff",error:"#f20",screen:"#ddd",frame:"#e9ebef",section:"#eff2f5",input:"#fff",primary:{dark:"#050A56",base:"#0083CB",light:"#00D4FE"},accent:{dark:"#802d00",base:"#cb4800",light:"#ff8c4d"},link:"#802d00"}}},get defaultLightTheme(){return{colors:{black:"#111e",white:"#eeee",error:"#f20",screen:"#bbb",frame:"#ccc",section:"#ddd",input:"#eee",primary:{dark:"#1f2859",base:"#3e50b4",light:"#5871ff"},accent:{dark:"#59501f",base:"#b4a23e",light:"#ffe658"}}}}};t.default=u;var f=u.defaultDarkTheme;function d(e,t,n,r,o){var i=a.default.fromColorOrString(n);e.set(p(t),i.stringify());for(var s=5;s<100;s+=5)i.A=.01*s,e.set(p(t,s),i.stringify());var c=a.default.bestContrast(i,r,o);for(e.set(m(t),c.stringify()),s=5;s<100;s+=5){var l=c.copy();l.A=.01*s*c.A,e.set(m(t,s),l.stringify())}}var A={"accent-dark":"-accent-dark","accent-light":"-accent-light","primary-dark":"-primary-dark","primary-light":"-primary-light",accent:"-accent",black:"-black",error:"-error",frame:"-frame",input:"-input",primary:"-primary",screen:"-screen",section:"-section",white:"-white",link:"-link"};function p(e,t){void 0===t&&(t=0);var n=A[e];return"".concat(s).concat(c).concat(n).concat(t>0?"".concat(l).concat(t):"")}function m(e,t){void 0===t&&(t=0);var n=A[e];return"".concat(s).concat(c).concat("-on").concat(n).concat(t>0?"".concat(l).concat(t):"")}},7763:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var i=a(n(7294));function s(e){var t=e.className,n=e.value,r=e.enabled,o=e.wide,a=e.reverse,i=["custom","ui-view-CheckboxView"];return"string"==typeof t&&i.push(t),!0===n&&i.push("ok"),!1===r&&i.push("disabled"),!0===o&&i.push("wide"),!0===a&&i.push("reverse"),i.join(" ")}n(5192),t.default=function(e){var t=e.value,n=e.label,r=e.enabled,o=e.onChange;return i.createElement("button",{className:s(e),disabled:!1===r||void 0,onClick:function(){return o(!t)}},i.createElement("div",{className:"pin"},i.createElement("div",{className:"bar"}," "),i.createElement("div",{className:"btn"}," ")),i.createElement("div",{className:"label"},n))}},8168:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(7763);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},402:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(7294)),c=i(n(1078));function l(e){var t=["custom","ui-view-IconView"];return"string"==typeof e.className&&t.push(e.className),!0===e.animate&&t.push("animate"),e.onClick&&t.push("clickable"),t.join(" ")}n(160),t.default=function(e){var t,n=null!==(t=e.size)&&void 0!==t?t:"1.5rem";return s.createElement("div",{title:e.title,className:l(e),tabIndex:0,onClick:function(){return e.onClick&&e.onClick()},style:{width:n,height:n}},c.default.make(e.name))}},7937:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(402);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},1779:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(700);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},700:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(7294)),c=i(n(4338));n(8291),t.default=function(e){var t=e.value,n=e.label,r=e.size,o=e.enabled,a=e.wide,i=e.width,f=e.onChange,d=e.onEnterPressed;return s.createElement(c.default,{className:u(e),value:"".concat(t),label:n,size:r,enabled:o,wide:a,width:i,validator:function(t){if(l.lastIndex=-1,!l.test(t))return!1;var n=parseFloat(t);return!("number"==typeof e.min&&n<e.min||"number"==typeof e.max&&n>e.max)},onChange:function(e){return f&&f(parseFloat(e))},onEnterPressed:function(e){return d&&d(parseFloat(e))}})};var l=/^[+-]?[0-9]+$/gi;function u(e){var t=["custom","ui-view-input-FloatView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}},4338:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(3080);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},3080:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),n(4342);var c=a(n(7294)),l=n(3724),u=s(n(7857)),f=s(n(3665)),d="ui-view-input-TextView",A=1;function p(e,t){var n=["custom",d];return"string"==typeof e.className&&n.push(e.className),!0===e.wide&&n.push("wide"),!1===t&&n.push("invalid"),n.join(" ")}function m(e,t){if(!t)return!0;if("function"==typeof t)try{return t(e)}catch(e){return!1}return t.lastIndex=-1,t.test(e)}t.default=function(e){var t=e.name,n=e.value,r=e.label,o=e.error,a=e.size,s=e.type,h=e.focus,v=e.width,g=e.enabled,b=e.placeholder,C=e.validator,y=e.suggestions,w=e.backgroundColor,_=e.onChange,B=e.onValidation,E=e.onEnterPressed,I=c.useRef(null),S=i(c.useState(""),2),x=S[0],V=S[1],M=i(c.useState(n),2),k=M[0],D=M[1],O=i(c.useState(m(n)),2),L=O[0],P=O[1];c.useEffect((function(){return V("".concat(d,"-").concat(A++))}),[]),c.useEffect((function(){return function(){I.current&&(h?window.setTimeout((function(){var e;return null===(e=I.current)||void 0===e?void 0:e.focus()})):window.setTimeout((function(){var e;return null===(e=I.current)||void 0===e?void 0:e.blur()})))}}),[h,I.current]),c.useEffect((function(){D(n)}),[n]);var j="".concat(x,":datalist"),R={};if((0,l.isString)(v)&&(R.width=v),(0,l.isString)(w)){var T=new u.default(w),U=u.default.bestContrast(T,"#000","#fff");R.backgroundColor=T.stringify(),R.color=U,R.fontWeight="bolder"}return c.createElement("div",{className:p(e,L)},c.createElement(f.default,{value:null!=o?o:r,target:x,error:!!o}),y&&c.createElement("datalist",{id:j},y.map((function(e){return c.createElement("option",{key:e,value:e})}))),c.createElement("input",{id:x,ref:I,name:t,size:a,list:j,value:k,type:s,style:R,placeholder:b,disabled:!1===g||void 0,onChange:function(e){var t=e.target.value,n=m(t,C);B&&B(n),P(n),D(t),n&&"function"==typeof _&&_(t)},onKeyDownCapture:function(e){L&&"function"==typeof E&&"Enter"===e.key&&E(k)}}),c.createElement(f.default,{className:"hide",value:r,target:x}))}},3665:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(5323);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5323:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var i=a(n(7294));function s(e){var t=["custom","ui-view-LabelView"];return"string"==typeof e.className&&t.push(e.className),!0===e.error&&t.push("error"),!1===e.visible&&t.push("hide"),t.join(" ")}n(6825),t.default=function(e){var t=e.value,n=e.target;return void 0===t?null:i.createElement("label",{htmlFor:n,className:s(e)},t)}},3693:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(6754);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},6754:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(n(7294)),l=n(3724),u=s(n(3665));function f(e){var t=["custom","ui-view-SimpleComboView"];return"string"==typeof e.className&&t.push(e.className),!0===e.wide&&t.push("wide"),t.join(" ")}n(2384),t.default=function(e){var t=e.label,n=e.options,r=e.onChange,o=i(c.useState(e.value),2),a=o[0],s=o[1];return c.createElement("div",{className:f(e)},c.createElement(u.default,{value:t}),c.createElement("div",{className:"container theme-shadow-button"},c.createElement("select",{className:"theme-color-input",value:a,onChange:function(e){var t=e.target.value;s(t),r(t)}},Object.keys(n).map((function(e){return function(e,t){return(0,l.isString)(t)?c.createElement("option",{key:e,value:e},t):c.createElement("optgroup",{key:"grp/".concat(e),label:e},Object.keys(t).map((function(e){return c.createElement("option",{key:e,value:e},t[e])})))}(e,n[e])}))),c.createElement("div",{className:"dropdown-button theme-color-primary"},"▼")),c.createElement(u.default,{value:t,visible:!1}))}},9615:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(2891);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},2891:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(n(7294)),l=s(n(3665));function u(e){var t=["custom","ui-view-SliderView"];return"string"==typeof e.className&&t.push(e.className),!0===e.wide&&t.push("wide"),t.join(" ")}function f(e){return c.createElement("div",null,"ERROR! min = ",e.min," "," > "," max = ",e.max)}function d(e,t,n){return void 0===t&&(t=0),void 0===n&&(n=1),Math.max(Math.min(e,n),t)}n(357),t.default=function(e){var t,n,r,o=e.onChange,a=null!==(t=e.min)&&void 0!==t?t:0,s=null!==(n=e.max)&&void 0!==n?n:100,A=Math.max(1e-6,null!==(r=e.steps)&&void 0!==r?r:1),p=i(c.useState(d(e.value,a,s)),2),m=p[0],h=p[1];c.useEffect((function(){return h(d(e.value,a,s))}),[e.value]),c.useEffect((function(){o(m)}),[m]);var v=c.useRef(null);return function(e,t,n,r,o,a,i){c.useEffect((function(){var s=e.current;if(s){var c=function(e,t,n,r,o,a){return function(i){var s=0;switch(i.key){case"ArrowLeft":s=-e;break;case"ArrowRight":s=e;break;case"ArrowUp":s=10*e;break;case"ArrowDown":s=10*-e;break;case"Home":s=t-n;break;case"End":s=r-n;break;case".":s=.5*(t+r)-n;break;default:return}var c=d(n+s,t,r);c!==n&&(o(c),a(c))}}(o,n,t,r,a,i);return s.addEventListener("keydown",c,!0),function(){return s.removeEventListener("keydown",c,!0)}}}),[e,t,n,r,o])}(v,m,a,s,A,h,o),a>=s?c.createElement(f,{min:a,max:s}):("".concat(100*(m-a)/(s-a),"%"),c.createElement("div",{className:u(e),tabIndex:0},c.createElement(l.default,{value:e.label}),c.createElement("input",{type:"range",ref:v,min:a,max:s,value:m,onChange:function(e){return h(parseFloat(e.target.value))}})))}},514:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(2801);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},2801:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(7294));function c(e){var t=["custom","ui-view-TabstripView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(743),t.default=function(e){var t=e.headers,n=(e.children,e.value),r=e.onChange,o=i(s.useState((null!=n?n:0)%t.length),2),a=o[0],l=o[1],u=e.children[a];return s.createElement("div",{className:c(e)},s.createElement("header",null,t.map((function(e,t){return s.createElement("button",{key:t,className:a===t?"selected":"",onClick:function(){return l(e=t),void(r&&r(e));var e}},e)})),s.createElement("div",{className:"space"})),s.createElement("main",null,s.createElement("div",{className:"selected"},u)))}},4740:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(7294)),c=i(n(460)),l=i(n(5660)),u=n(6535);function f(e){var t=["custom","view-CodeEditorView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(117),t.default=function(e){return s.createElement("div",{className:f(e)},s.createElement(c.default,{value:e.value,onValueChange:e.onChange,highlight:function(t){return l.default.highlight(t,(0,u.getGrammarForLanguage)(e.language),e.language)}}))}},9860:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4740);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},1318:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,a=t.length;o<a;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))},c=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=a(n(7294)),f=l(n(1942)),d=l(n(3390)),A=l(n(4610)),p=l(n(7937)),m=l(n(8987)),h=n(8549),v=n(5423);function g(e,t){var n=["custom","view-CodeView","theme-shadow-button"];return"string"==typeof e.className&&n.push(e.className),t&&n.push("expanded"),n.join(" ")}n(6850),n(3479),d.default.registerLanguage("typescript",m.default),d.default.registerLanguage("glsl",f.default),d.default.registerLanguage("html",A.default),t.default=function(e){var t,n,r=i(u.useState(null===(t=e.expanded)||void 0===t||t),2),o=r[0],a=r[1],l=i(u.useState(!1),2),f=l[0],A=l[1],m=function(){return a(!o)},y=u.useRef(null);u.useEffect((function(){y.current&&d.default.highlightElement(y.current)}),[e.value,y,f]);var w=function(e,t,n){return t&&"typescript"===n?(0,v.transpileModule)(e,{compilerOptions:{module:v.ModuleKind.ES2020,experimentalDecorators:!0}}).outputText:e}(function(e,t){var n,r,o=[],a=[],l=function(e){if(e.startsWith(b)){var t=e.substring(b.length).trim();return a.includes(t)||a.push(t),"continue"}if(e.startsWith(C)){var n=e.substring(C.length).trim();return a=a.filter((function(e){return e!=n})),"continue"}o.push({line:e,regions:s([],i(a),!1)})};try{for(var u=c(e.split("\n")),f=u.next();!f.done;f=u.next())l(f.value)}catch(e){n={error:e}}finally{try{f&&!f.done&&(r=u.return)&&r.call(u)}finally{if(n)throw n.error}}return t?o.filter((function(e){return e.regions.includes(t)})).map((function(e){return e.line})).join("\n"):o.map((function(e){return e.line})).join("\n")}(e.value,e.region),f,e.lang);return u.createElement("div",{className:g(e,o)},u.createElement("header",{className:"theme-color-primary-dark"},u.createElement(p.default,{name:"chevron-".concat(o?"down":"right"),onClick:m}),u.createElement("div",{className:"label",onClick:m},null!==(n=e.label)&&void 0!==n?n:""),u.createElement(p.default,{name:f?"ts":"js",onClick:function(){return A(!f)}}),u.createElement("div",{style:{width:"1em"}}),u.createElement(p.default,{name:"copy",onClick:function(){return(0,h.copyToClipboard)(w)}})),u.createElement("pre",null,u.createElement("code",{ref:y,className:"language-".concat(e.lang)},w)))};var b="//#region",C="//#endregion"},9681:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(1318);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},4446:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var i=a(n(7294));function s(e){var t=["custom","view-FallbackView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(5075),t.default=function(e){return i.createElement("div",{className:s(e)},"Chargement en  cours...")}},8260:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4446);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},3301:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(n(7294)),l=s(n(9681));function u(e){var t=["custom","view-markdown-CodeView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(3605),t.default=function(e){var t=i(function(e){var t,n,r=e.children.trim(),o=(null!==(t=e.ts)&&void 0!==t?t:{})[r];if(o)return[o,"typescript"];var a=(null!==(n=e.glsl)&&void 0!==n?n:{})[r];return a?[a,"glsl"]:[r,null]}(e),2),n=t[0],r=t[1];return r?c.createElement(l.default,{className:u(e),lang:r,region:e.region,label:e.label,value:n}):c.createElement("div",{className:"theme-color-error"},"Error!",c.createElement("br",null),'Code "',n,'" does not exist.')}},5035:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(3301);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5260:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(6085);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},6085:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(7294)),c=i(n(5035)),l=i(n(9732));function u(e){var t=["custom","view-MarkdownView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(2661),t.default=function(e){return s.createElement("div",{className:u(e)},s.createElement(l.default,{options:{overrides:{Code:function(t){return s.createElement(c.default,{children:"".concat(t.children),label:t.label,region:t.region,glsl:e.glsl,ts:e.ts})}}}},e.children))}},4017:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=n(889);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return a(i).default}}),o(n(889),t)},889:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(n(7294)),l=s(n(8168));function u(e){var t=["custom","view-SceneView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(7176),t.default=function(e){var t,n=c.useRef(null!==(t=e.play)&&void 0!==t&&t),r=i(c.useState(n.current),2),o=r[0],a=r[1],s=i(c.useState(!1),2),f=s[0],d=s[1];c.useEffect((function(){n.current=o}),[o]);var A=c.useCallback((function(t){if(t){var r=t.getContext("webgl2");r?e.onInit(r).then((function(e){var t=0,o=0,a=0,i=0,s=r.canvas,c=!0,l=function(u){window.requestAnimationFrame(l);var f=Math.ceil(s.clientWidth),d=Math.ceil(s.clientHeight);f===t&&d===o||(t=f,o=d,s.width=f,s.height=d,r.viewport(0,0,f,d),e(a+i)),c&&e(u+i),c!==n.current&&((c=n.current)?i+=a-u:a=u)};window.requestAnimationFrame(l)})).catch(console.error):console.error("Unable to create a WebGL2 Context!")}}),[]);return c.createElement("div",{className:u(e)},c.createElement("canvas",{className:f?"fullscreen":"theme-shadow-button",ref:A,onDoubleClick:function(){return d(!f)}}),c.createElement("footer",null,c.createElement("p",null,"Double-clic pour passer en plein écran (et revenir)"),c.createElement(l.default,{label:"Animer",value:o,onChange:a})))}},6560:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(1143);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},1143:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(n(7294)),l=s(n(9860)),u=n(5525);function f(e){var t=["custom","view-ShaderCodeEditorView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(2357),t.default=function(e){var t,n=i(c.useState(e.value),2),r=n[0],o=n[1];return(0,u.useDebouncedEffect)((function(){r!==e.value&&e.onChange(r)}),null!==(t=e.debouncing)&&void 0!==t?t:1e3,[r]),c.useEffect((function(){return o(e.value)}),[e.value]),c.createElement("div",{className:f(e)},c.createElement("header",{className:"theme-color-primary-dark"},e.label),c.createElement(l.default,{className:"code-editor",language:"glsl",value:r,onChange:o}),e.error&&c.createElement("pre",{className:"theme-color-error"},e.error))}},2979:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return i};Object.defineProperty(t,"__esModule",{value:!0}),t.analyseProgram=void 0;var a=n(699),i=n(7541),s=n(9457);function c(e,t,n){var r,o=t.createShader(e);if(!o)throw Error("Unable to create a WebGL shader of type ".concat(e,"!"));if(t.shaderSource(o,n),t.compileShader(o),!t.getShaderParameter(o,t.COMPILE_STATUS))throw Error(null!==(r=t.getShaderInfoLog(o))&&void 0!==r?r:"Unknow error while compiling the shader!");return o}t.analyseProgram=function(e){var t={vertCode:e.vert,fragCode:e.frag,vertError:null,fragError:null,uniforms:[],attributes:[]};try{var n=function(){var e=document.createElement("canvas").getContext("webgl2");if(!e)throw Error("Unable to create WebGL2 context!");return e}(),r=function(e){var t=e.createProgram();if(!t)throw Error("Unable to create WebGL Program!");return t}(n);if(function(e,t,n){try{var r=c(e.VERTEX_SHADER,e,n);e.attachShader(t,r)}catch(e){throw Error("<VERT>".concat(u(n,e)))}}(n,r,e.vert),function(e,t,n){try{var r=c(e.FRAGMENT_SHADER,e,n);e.attachShader(t,r)}catch(e){throw Error("<FRAG>".concat(u(n,e)))}}(n,r,e.frag),n.linkProgram(r),!n.getProgramParameter(r,n.LINK_STATUS)){var o=n.getProgramInfoLog(r);throw new Error("Could link WebGL2 program.\n"+o)}t.uniforms=(0,s.listUniforms)(n,r),t.attributes=(0,a.listAttributes)(n,r),console.log("🚀 [analyse-program] analyse.attributes = ",t.attributes)}catch(e){var l=(0,i.getExceptionMessage)(e);l.startsWith("<VERT>")?t.vertError=l.substring("<VERT>".length):l.startsWith("<FRAG>")?t.fragError=l.substring("<FRAG>".length):(t.vertError=l,t.fragError=l)}return t};var l=/^(ERROR|WARNING): [0-9]+:([0-9]+)/gu;function u(e,t){var n,a,i,s,c=e.split("\n"),u=t instanceof Error?t.message:JSON.stringify(t),f=new Set,d=new Set;try{for(var A=r(u.split("\n")),p=A.next();!p.done;p=A.next()){var m=p.value;l.lastIndex=-1;var h=l.exec(m);if(h){var v=o(h,3),g=(v[0],v[1],v[2]),b=parseInt(g);if(!isNaN(b)){d.add(b);for(var C=-2;C<=2;C++){var y=b+C;y<1||y>c.length||f.add(y)}}}}}catch(e){n={error:e}}finally{try{p&&!p.done&&(a=A.return)&&a.call(A)}finally{if(n)throw n.error}}var w=[],_=Array.from(f).sort(),B=0;try{for(var E=r(_),I=E.next();!I.done;I=E.next()){(g=I.value)-B>1&&w.push(""),B=g;for(var S=d.has(g)?">":" ",x="".concat(g);x.length<7;)x=" ".concat(x);m=c[g-1],w.push("".concat(S).concat(x," | ").concat(m))}}catch(e){i={error:e}}finally{try{I&&!I.done&&(s=E.return)&&s.call(E)}finally{if(i)throw i.error}}return"".concat(u,"\n").concat(w.join("\n"))}},699:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.listAttributes=void 0;var r=n(6844);function o(e,t){switch(t.type){case e.FLOAT:return 1;case e.FLOAT_VEC2:return 2;case e.FLOAT_VEC3:return 3;case e.FLOAT_VEC4:return 4;default:return 0}}t.listAttributes=function(e,t){for(var n=[],a=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),i=0;i<a;i++){var s=e.getActiveAttrib(t,i);if(s&&!["gl_InstanceID"].includes(s.name)){var c=o(e,s);if(0===c)throw Error("Don't know how to deal with type \"".concat((0,r.lookupConstantName)(e,s.type),'" for attribute "').concat(s.name,'"!'));n.push({name:s.name,size:c,length:s.size,type:(0,r.lookupConstantName)(e,s.type),index:e.getAttribLocation(t,s.name)})}}return n.sort((function(e,t){return e.index-t.index})),console.log("🚀 attributes = ",n),n}},8833:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(2979),t)},9457:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.listUniforms=void 0;var r=n(6844);t.listUniforms=function(e,t){for(var n=[],o=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),a=0,i=0;i<o;i++){var s=e.getActiveUniform(t,i);s&&null!==e.getUniformLocation(t,s.name)&&(n.push({name:s.name,size:s.size,type:(0,r.lookupConstantName)(e,s.type),slot:a}),s.type===e.SAMPLER_2D&&(a+=s.size))}return console.log("🚀 [hooks] uniforms = ",n),n}},6844:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.lookupConstantName=void 0,t.lookupConstantName=function(e,t){for(var n in e)if(e[n]===t)return n;return"".concat(t,"?")}},3411:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=3411,e.exports=t},9790:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r={add:"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z","arrow-down":"M9,4H15V12H19.84L12,19.84L4.16,12H9V4Z","arrow-left":"M20,9V15H12V19.84L4.16,12L12,4.16V9H20Z","arrow-right":"M4,15V9H12V4.16L19.84,12L12,19.84V15H4Z","arrow-up":"M15,20H9V12H4.16L12,4.16L19.84,12H15V20Z",back:"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z",book:"M21,5C19.89,4.65 18.67,4.5 17.5,4.5C15.55,4.5 13.45,4.9 12,6C10.55,4.9 8.45,4.5 6.5,4.5C4.55,4.5 2.45,4.9 1,6V20.65C1,20.9 1.25,21.15 1.5,21.15C1.6,21.15 1.65,21.1 1.75,21.1C3.1,20.45 5.05,20 6.5,20C8.45,20 10.55,20.4 12,21.5C13.35,20.65 15.8,20 17.5,20C19.15,20 20.85,20.3 22.25,21.05C22.35,21.1 22.4,21.1 22.5,21.1C22.75,21.1 23,20.85 23,20.6V6C22.4,5.55 21.75,5.25 21,5M21,18.5C19.9,18.15 18.7,18 17.5,18C15.8,18 13.35,18.65 12,19.5V8C13.35,7.15 15.8,6.5 17.5,6.5C18.7,6.5 19.9,6.65 21,7V18.5Z",bug:"M14,12H10V10H14M14,16H10V14H14M20,8H17.19C16.74,7.22 16.12,6.55 15.37,6.04L17,4.41L15.59,3L13.42,5.17C12.96,5.06 12.5,5 12,5C11.5,5 11.04,5.06 10.59,5.17L8.41,3L7,4.41L8.62,6.04C7.88,6.55 7.26,7.22 6.81,8H4V10H6.09C6.04,10.33 6,10.66 6,11V12H4V14H6V15C6,15.34 6.04,15.67 6.09,16H4V18H6.81C7.85,19.79 9.78,21 12,21C14.22,21 16.15,19.79 17.19,18H20V16H17.91C17.96,15.67 18,15.34 18,15V14H20V12H18V11C18,10.66 17.96,10.33 17.91,10H20V8Z",center:"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M19,19H15V21H19A2,2 0 0,0 21,19V15H19M19,3H15V5H19V9H21V5A2,2 0 0,0 19,3M5,5H9V3H5A2,2 0 0,0 3,5V9H5M5,15H3V19A2,2 0 0,0 5,21H9V19H5V15Z","chevron-down":"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z","chevron-right":"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z",close:"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z",copy:"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z",cut:"M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z",delete:"M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8.46,11.88L9.87,10.47L12,12.59L14.12,10.47L15.53,11.88L13.41,14L15.53,16.12L14.12,17.53L12,15.41L9.88,17.53L8.47,16.12L10.59,14L8.46,11.88M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z",edit:"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z",export:"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z","external-link":"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z",filter:"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z",fly:"M5,7H9A2,2,0,0,1,11,9V15A2,2,0,0,1,9,17H5V15H9V13H6V11H9V9H5V7M13,7H16A3,3,0,0,1,19,10V14A3,3,0,0,1,16,17H13V7M16,15A1,1,0,0,0,17,14V10A1,1,0,0,0,16,9H15V15H16Z",focus:"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M19,19H15V21H19A2,2 0 0,0 21,19V15H19M19,3H15V5H19V9H21V5A2,2 0 0,0 19,3M5,5H9V3H5A2,2 0 0,0 3,5V9H5M5,15H3V19A2,2 0 0,0 5,21H9V19H5V15Z","format-bold":"M13.5,15.5H10V12.5H13.5A1.5,1.5 0 0,1 15,14A1.5,1.5 0 0,1 13.5,15.5M10,6.5H13A1.5,1.5 0 0,1 14.5,8A1.5,1.5 0 0,1 13,9.5H10M15.6,10.79C16.57,10.11 17.25,9 17.25,8C17.25,5.74 15.5,4 13.25,4H7V18H14.04C16.14,18 17.75,16.3 17.75,14.21C17.75,12.69 16.89,11.39 15.6,10.79Z","format-bullets":"M7,5H21V7H7V5M7,13V11H21V13H7M4,4.5A1.5,1.5 0 0,1 5.5,6A1.5,1.5 0 0,1 4,7.5A1.5,1.5 0 0,1 2.5,6A1.5,1.5 0 0,1 4,4.5M4,10.5A1.5,1.5 0 0,1 5.5,12A1.5,1.5 0 0,1 4,13.5A1.5,1.5 0 0,1 2.5,12A1.5,1.5 0 0,1 4,10.5M7,19V17H21V19H7M4,16.5A1.5,1.5 0 0,1 5.5,18A1.5,1.5 0 0,1 4,19.5A1.5,1.5 0 0,1 2.5,18A1.5,1.5 0 0,1 4,16.5Z","format-italic":"M10,4V7H12.21L8.79,15H6V18H14V15H11.79L15.21,7H18V4H10Z",fullscreen:"M12 5.5L10 8H14L12 5.5M18 10V14L20.5 12L18 10M6 10L3.5 12L6 14V10M14 16H10L12 18.5L14 16M21 3H3C1.9 3 1 3.9 1 5V19C1 20.1 1.9 21 3 21H21C22.1 21 23 20.1 23 19V5C23 3.9 22.1 3 21 3M21 19H3V5H21V19Z",gear:"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z","gps-off":"M3.05,13H1V11H3.05C3.5,6.83 6.83,3.5 11,3.05V1H13V3.05C17.17,3.5 20.5,6.83 20.95,11H23V13H20.95C20.5,17.17 17.17,20.5 13,20.95V23H11V20.95C6.83,20.5 3.5,17.17 3.05,13M12,5A7,7 0 0,0 5,12A7,7 0 0,0 12,19A7,7 0 0,0 19,12A7,7 0 0,0 12,5Z","gps-on":"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M3.05,13H1V11H3.05C3.5,6.83 6.83,3.5 11,3.05V1H13V3.05C17.17,3.5 20.5,6.83 20.95,11H23V13H20.95C20.5,17.17 17.17,20.5 13,20.95V23H11V20.95C6.83,20.5 3.5,17.17 3.05,13M12,5A7,7 0 0,0 5,12A7,7 0 0,0 12,19A7,7 0 0,0 19,12A7,7 0 0,0 12,5Z",help:"M19.79,15.41C20.74,13.24 20.74,10.75 19.79,8.59L17.05,9.83C17.65,11.21 17.65,12.78 17.06,14.17L19.79,15.41M15.42,4.21C13.25,3.26 10.76,3.26 8.59,4.21L9.83,6.94C11.22,6.35 12.79,6.35 14.18,6.95L15.42,4.21M4.21,8.58C3.26,10.76 3.26,13.24 4.21,15.42L6.95,14.17C6.35,12.79 6.35,11.21 6.95,9.82L4.21,8.58M8.59,19.79C10.76,20.74 13.25,20.74 15.42,19.78L14.18,17.05C12.8,17.65 11.22,17.65 9.84,17.06L8.59,19.79M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,8A4,4 0 0,0 8,12A4,4 0 0,0 12,16A4,4 0 0,0 16,12A4,4 0 0,0 12,8Z",hide:"M11.83,9L15,12.16C15,12.11 15,12.05 15,12A3,3 0 0,0 12,9C11.94,9 11.89,9 11.83,9M7.53,9.8L9.08,11.35C9.03,11.56 9,11.77 9,12A3,3 0 0,0 12,15C12.22,15 12.44,14.97 12.65,14.92L14.2,16.47C13.53,16.8 12.79,17 12,17A5,5 0 0,1 7,12C7,11.21 7.2,10.47 7.53,9.8M2,4.27L4.28,6.55L4.73,7C3.08,8.3 1.78,10 1,12C2.73,16.39 7,19.5 12,19.5C13.55,19.5 15.03,19.2 16.38,18.66L16.81,19.08L19.73,22L21,20.73L3.27,3M12,7A5,5 0 0,1 17,12C17,12.64 16.87,13.26 16.64,13.82L19.57,16.75C21.07,15.5 22.27,13.86 23,12C21.27,7.61 17,4.5 12,4.5C10.6,4.5 9.26,4.75 8,5.2L10.17,7.35C10.74,7.13 11.35,7 12,7Z",import:"M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z",invert:"M21,9L17,5V8H10V10H17V13M7,11L3,15L7,19V16H14V14H7V11Z",js:"M3,3H21V21H3V3M7.73,18.04C8.13,18.89 8.92,19.59 10.27,19.59C11.77,19.59 12.8,18.79 12.8,17.04V11.26H11.1V17C11.1,17.86 10.75,18.08 10.2,18.08C9.62,18.08 9.38,17.68 9.11,17.21L7.73,18.04M13.71,17.86C14.21,18.84 15.22,19.59 16.8,19.59C18.4,19.59 19.6,18.76 19.6,17.23C19.6,15.82 18.79,15.19 17.35,14.57L16.93,14.39C16.2,14.08 15.89,13.87 15.89,13.37C15.89,12.96 16.2,12.64 16.7,12.64C17.18,12.64 17.5,12.85 17.79,13.37L19.1,12.5C18.55,11.54 17.77,11.17 16.7,11.17C15.19,11.17 14.22,12.13 14.22,13.4C14.22,14.78 15.03,15.43 16.25,15.95L16.67,16.13C17.45,16.47 17.91,16.68 17.91,17.26C17.91,17.74 17.46,18.09 16.76,18.09C15.93,18.09 15.45,17.66 15.09,17.06L13.71,17.86Z",link:"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z",logout:"M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z",map:"M15,19L9,16.89V5L15,7.11M20.5,3C20.44,3 20.39,3 20.34,3L15,5.1L9,3L3.36,4.9C3.15,4.97 3,5.15 3,5.38V20.5A0.5,0.5 0 0,0 3.5,21C3.55,21 3.61,21 3.66,20.97L9,18.9L15,21L20.64,19.1C20.85,19 21,18.85 21,18.62V3.5A0.5,0.5 0 0,0 20.5,3Z",menu:"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z","minus-o":"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7",more:"M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z",ok:"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z",orientation:"M9,1H3A2,2 0 0,0 1,3V16A2,2 0 0,0 3,18H9A2,2 0 0,0 11,16V3A2,2 0 0,0 9,1M9,15H3V3H9V15M21,13H13V15H21V21H9V20H6V21A2,2 0 0,0 8,23H21A2,2 0 0,0 23,21V15A2,2 0 0,0 21,13M23,10L19,8L20.91,7.09C19.74,4.31 17,2.5 14,2.5V1A9,9 0 0,1 23,10Z",pack:"M21,16.5C21,16.88 20.79,17.21 20.47,17.38L12.57,21.82C12.41,21.94 12.21,22 12,22C11.79,22 11.59,21.94 11.43,21.82L3.53,17.38C3.21,17.21 3,16.88 3,16.5V7.5C3,7.12 3.21,6.79 3.53,6.62L11.43,2.18C11.59,2.06 11.79,2 12,2C12.21,2 12.41,2.06 12.57,2.18L20.47,6.62C20.79,6.79 21,7.12 21,7.5V16.5M12,4.15L10.11,5.22L16,8.61L17.96,7.5L12,4.15M6.04,7.5L12,10.85L13.96,9.75L8.08,6.35L6.04,7.5M5,15.91L11,19.29V12.58L5,9.21V15.91M19,15.91V9.21L13,12.58V19.29L19,15.91Z",pause:"M14,19H18V5H14M6,19H10V5H6V19Z",play:"M8,5.14V19.14L19,12.14L8,5.14Z","plus-o":"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z",poster:"M13,9H18.5L13,3.5V9M6,2H14L20,8V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V4C4,2.89 4.89,2 6,2M6,20H15L18,20V12L14,16L12,14L6,20M8,9A2,2 0 0,0 6,11A2,2 0 0,0 8,13A2,2 0 0,0 10,11A2,2 0 0,0 8,9Z",profil:"M1.1,22.9L10.1,1.1,15.8,15.8,17.6,10.1,22.9,22.9Z",quote:"M9 22C8.4 22 8 21.6 8 21V18H4C2.9 18 2 17.1 2 16V4C2 2.9 2.9 2 4 2H20C21.1 2 22 2.9 22 4V16C22 17.1 21.1 18 20 18H13.9L10.2 21.7C10 21.9 9.8 22 9.5 22H9M10 16V19.1L13.1 16H20V4H4V16H10M16.3 6L14.9 9H17V13H13V8.8L14.3 6H16.3M10.3 6L8.9 9H11V13H7V8.8L8.3 6H10.3Z",qrcode:"M3,11H5V13H3V11M11,5H13V9H11V5M9,11H13V15H11V13H9V11M15,11H17V13H19V11H21V13H19V15H21V19H19V21H17V19H13V21H11V17H15V15H17V13H15V11M19,19V15H17V19H19M15,3H21V9H15V3M17,5V7H19V5H17M3,3H9V9H3V3M5,5V7H7V5H5M3,15H9V21H3V15M5,17V19H7V17H5Z",random:"M19.78,3H11.22C10.55,3 10,3.55 10,4.22V8H16V14H19.78C20.45,14 21,13.45 21,12.78V4.22C21,3.55 20.45,3 19.78,3M12.44,6.67C11.76,6.67 11.21,6.12 11.21,5.44C11.21,4.76 11.76,4.21 12.44,4.21A1.23,1.23 0 0,1 13.67,5.44C13.67,6.12 13.12,6.67 12.44,6.67M18.56,12.78C17.88,12.79 17.33,12.24 17.32,11.56C17.31,10.88 17.86,10.33 18.54,10.32C19.22,10.31 19.77,10.86 19.78,11.56C19.77,12.23 19.23,12.77 18.56,12.78M18.56,6.67C17.88,6.68 17.33,6.13 17.32,5.45C17.31,4.77 17.86,4.22 18.54,4.21C19.22,4.2 19.77,4.75 19.78,5.44C19.78,6.12 19.24,6.66 18.56,6.67M4.22,10H12.78A1.22,1.22 0 0,1 14,11.22V19.78C14,20.45 13.45,21 12.78,21H4.22C3.55,21 3,20.45 3,19.78V11.22C3,10.55 3.55,10 4.22,10M8.5,14.28C7.83,14.28 7.28,14.83 7.28,15.5C7.28,16.17 7.83,16.72 8.5,16.72C9.17,16.72 9.72,16.17 9.72,15.5A1.22,1.22 0 0,0 8.5,14.28M5.44,11.22C4.77,11.22 4.22,11.77 4.22,12.44A1.22,1.22 0 0,0 5.44,13.66C6.11,13.66 6.66,13.11 6.66,12.44V12.44C6.66,11.77 6.11,11.22 5.44,11.22M11.55,17.33C10.88,17.33 10.33,17.88 10.33,18.55C10.33,19.22 10.88,19.77 11.55,19.77A1.22,1.22 0 0,0 12.77,18.55H12.77C12.77,17.88 12.23,17.34 11.56,17.33H11.55Z",redo:"M18.4,10.6C16.55,9 14.15,8 11.5,8C6.85,8 2.92,11.03 1.54,15.22L3.9,16C4.95,12.81 7.95,10.5 11.5,10.5C13.45,10.5 15.23,11.22 16.62,12.38L13,16H22V7L18.4,10.6Z",refresh:"M19,8L15,12H18A6,6 0 0,1 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20A8,8 0 0,0 20,12H23M6,12A6,6 0 0,1 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4A8,8 0 0,0 4,12H1L5,16L9,12",search:"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z",share:"M18,16.08C17.24,16.08 16.56,16.38 16.04,16.85L8.91,12.7C8.96,12.47 9,12.24 9,12C9,11.76 8.96,11.53 8.91,11.3L15.96,7.19C16.5,7.69 17.21,8 18,8A3,3 0 0,0 21,5A3,3 0 0,0 18,2A3,3 0 0,0 15,5C15,5.24 15.04,5.47 15.09,5.7L8.04,9.81C7.5,9.31 6.79,9 6,9A3,3 0 0,0 3,12A3,3 0 0,0 6,15C6.79,15 7.5,14.69 8.04,14.19L15.16,18.34C15.11,18.55 15.08,18.77 15.08,19C15.08,20.61 16.39,21.91 18,21.91C19.61,21.91 20.92,20.61 20.92,19A2.92,2.92 0 0,0 18,16.08Z",show:"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z",snapshot:"M20,4H16.83L15,2H9L7.17,4H4A2,2 0 0,0 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6A2,2 0 0,0 20,4M20,18H4V6H8.05L9.88,4H14.12L15.95,6H20V18M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15Z","tp/password":"M12,8A1,1,0,0,1,13,9A1,1,0,0,1,12,10A1,1,0,0,1,11,9A1,1,0,0,1,12,8M21,11C21,16.6,17.2,21.7,12,23C6.8,21.7,3,16.6,3,11V5L12,1L21,5V11M12,6A3,3,0,0,0,9,9C9,10.3,9.8,11.4,11,11.8V18H13V16H15V14H13V11.8C14.2,11.4,15,10.3,15,9A3,3,0,0,0,12,6Z",translate:"M12.87,15.07L10.33,12.56L10.36,12.53C12.1,10.59 13.34,8.36 14.07,6H17V4H10V2H8V4H1V6H12.17C11.5,7.92 10.44,9.75 9,11.35C8.07,10.32 7.3,9.19 6.69,8H4.69C5.42,9.63 6.42,11.17 7.67,12.56L2.58,17.58L4,19L9,14L12.11,17.11L12.87,15.07M18.5,10H16.5L12,22H14L15.12,19H19.87L21,22H23L18.5,10M15.88,17L17.5,12.67L19.12,17H15.88Z",ts:"M3,3H21V21H3V3M13.71,17.86C14.21,18.84 15.22,19.59 16.8,19.59C18.4,19.59 19.6,18.76 19.6,17.23C19.6,15.82 18.79,15.19 17.35,14.57L16.93,14.39C16.2,14.08 15.89,13.87 15.89,13.37C15.89,12.96 16.2,12.64 16.7,12.64C17.18,12.64 17.5,12.85 17.79,13.37L19.1,12.5C18.55,11.54 17.77,11.17 16.7,11.17C15.19,11.17 14.22,12.13 14.22,13.4C14.22,14.78 15.03,15.43 16.25,15.95L16.67,16.13C17.45,16.47 17.91,16.68 17.91,17.26C17.91,17.74 17.46,18.09 16.76,18.09C15.93,18.09 15.45,17.66 15.09,17.06L13.71,17.86M13,11.25H8V12.75H9.5V20H11.25V12.75H13V11.25Z",undo:"M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z",user:"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z",wait:"M6,2H18V8H18V8L14,12L18,16V16H18V22H6V16H6V16L10,12L6,8V8H6V2M16,16.5L12,12.5L8,16.5V20H16V16.5M12,11.5L16,7.5V4H8V7.5L12,11.5M10,6H14V6.75L12,8.75L10,6.75V6Z",warning:"M13 14H11V9H13M13 18H11V16H13M1 21H23L12 2L1 21Z","zoom-in":"M15.5,14L20.5,19L19,20.5L14,15.5V14.71L13.73,14.43C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.43,13.73L14.71,14H15.5M9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14M12,10H10V12H9V10H7V9H9V7H10V9H12V10Z","zoom-out":"M15.5,14H14.71L14.43,13.73C15.41,12.59 16,11.11 16,9.5A6.5,6.5 0 0,0 9.5,3A6.5,6.5 0 0,0 3,9.5A6.5,6.5 0 0,0 9.5,16C11.11,16 12.59,15.41 13.73,14.43L14,14.71V15.5L19,20.5L20.5,19L15.5,14M9.5,14C7,14 5,12 5,9.5C5,7 7,5 9.5,5C12,5 14,7 14,9.5C14,12 12,14 9.5,14M7,9H12V10H7V9Z"}},3245:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-0.69deb014a5ba4410917f.woff2"},1060:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-1.8aed9cf3ef8fa3238475.woff2"},9297:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-2.171bc766a504fe0ff63d.woff2"},3319:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-3.e2f092835a98aff60bf2.woff2"},5416:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-4.0951d39bf3e77057a881.woff2"},5533:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-5.c9822e12d95e00c0e642.woff2"},7105:e=>{"use strict";e.exports="precision mediump float;\n\nconst float MIN = 0.1;\nconst float MAX = 0.9;\nconst float CELLS = 8.0;\nconst vec3 ORANGE = vec3(1.0, 0.5, 0.0);\nconst vec3 BLUE = vec3(0.0, 0.6, 1.0);\n\nvarying vec2 varUV;\nvarying float varLight;\n\nvoid main() {\n    float u = fract(varUV.x * CELLS) - 0.5;\n    float v = fract(varUV.y * CELLS) - 0.5;\n    float r = 4.0 * (u*u + v*v);\n    float a = smoothstep(0.8, 0.9, r);\n    gl_FragColor = vec4(mix(BLUE, ORANGE, a) * varLight, 1.0);\n}\n"},9723:e=>{"use strict";e.exports="#version 300 es\n\n// (0,0) pour le centre de la carte.\nuniform vec2 uniCenter;\n// Facteur de zoom.\nuniform float uniScale;\n// Pente : 0 pour pas de perspective, 1 pour forte pente.\nuniform float uniSlope;\n// canvasl.width / canvas.height\nuniform float uniRatio;\n\nin vec2 attPoint;\nin vec2 attUV;\n\nout vec2 varUV;\n\nvoid main() {\n  vec2 point = (attPoint - uniCenter) * uniScale;\n  varUV = attUV;\n  point.y *= uniRatio;\n  float w = uniSlope * point.y + 1.0;\n  float z = 0.0;\n  gl_Position = vec4(point, z, w);\n}"},8450:e=>{"use strict";e.exports="# Perspective basique\n\nL'effet de perspective ci-dessus est réalisé grace aux shaders suivants et à ces attributs:\n\n| No | attPos  | attUV  |\n|----|---------|--------|\n| 0  | (-1,-1) | (0, 1) |\n| 1  | (+1,-1) | (1, 1) |\n| 2  | (-1,+1) | (0, 0) |\n| 3  | (+1,+1) | (1, 0) |\n\nPosons :\n\n* `x` : coordonnée X de `attPos` (entre -1 et +1).\n* `y` : coordonnée Y de `attPos` (entre -1 et +1).\n* `Cx` : coordonnée X de `uniCenter`.\n* `Cy` : coordonnée Y de `uniCenter`.\n* `p` : la pente (`uniSlope`) positive mais < +1.\n* `s` : l'échelle (`uniScale`).\n* `r` : l'aspect ratio du canvas (`uniRatio`).\n* `X` : coordonnée X finale du vertex.\n* `Y` : coordonnée Y finale du vertex.\n\nD'après notre vertex shader, on a :\n\n* `X = s.(x - Cx) / w`\n* `Y = r.s.(y - Cy) / w`\n\nEt la coordonnée `w` vaut : `w = 1 + p.y`\n\n\n\n"},945:e=>{"use strict";e.exports="# Les instances, comment ça marche ?\n\nLes instances permettent de dessiner plusieurs fois le même object en un seul appel de la fonction `gl.drawArraysInstanced()` ou `gl.drawElementsInstanced()`.\n\nPar exemple, si je veux dessiner le petit avion simplifié avec 4 triangles,\nje peux utiliser :\n\n- un uniform pour la couleur (`vec3 uniColor`),\n- un uniform pour sa position (`vec2 uniCenter`),\n- un attribut pour definir un sommet de triangle en coordonnées polaires (`attVertexPolarCoords`) :\n  - **x** : angle en degrés\n  - **y** : distance par rapport au centre\n  - **z** : luminosité (juste pour faire un petit effet)\n\nEt voici les données pour 4 triangles (12 vertex) :\n\n|         |   0 |   1 |   2 |   3 |    4 |   5 |   6 |    7 |   8 |   9 |  10 |  11 |\n|---------|-----|-----|-----|-----|------|-----|-----|------|-----|-----|-----|-----|\n| X (ang) |   0 |  90 | -90 |   0 |  120 | 180 |   0 | -120 | 180 |   0 |  60 | -60 |\n| Y (dis) | 0.3 | 0.4 | 0.4 | 0.5 | 0.25 |   0 | 0.5 | 0.25 |   0 | 0.4 | 0.4 | 0.4 |\n| Z (lum) |   0 |   1 |   1 |   2 |  0.1 |   1 |   2 |  0.1 |   1 |   1 |   2 |   2 |\n\nEt si on veut en afficher 42, avec différentes couleurs et positions, il faut faire\nune boucle et appeler `gl.drawArrays(gl.TRIANGLES, 0, 12)` 42 fois.\n\n"},363:e=>{"use strict";e.exports='//#region 1\n/**\n * Considérons que la page HTML contient un élément de ce type:\n * <canvas id="mon-canvas"></canvas>\n */\nconst canvas = document.getElementById("mon-canvas")\n\n// On obtient un contect WebGL2 comme ceci :\nconst gl = canvas.getContext("webgl2")\n//#endregion 1\n\n//#region 2\nfunction paint(time: number) {\n    const rouge = Math.abs(Math.cos(time * 0.0005115))\n    const vert = Math.abs(Math.cos(time * 0.0008172))\n    const bleu = Math.abs(Math.cos(time * 0.0006131))\n    const opacite = 1\n    gl.clearColor(rouge, vert, bleu, opacite)\n    gl.clear(gl.COLOR_BUFFER_BIT)\n}\n//#endregion 2\n\n//#region 3\nfunction anim(time: number) {\n    window.requestAnimationFrame(anim)\n    paint(time)\n}\n\n// Il faut la lancer au moins une fois\nwindow.requestAnimationFrame(anim)\n//#endregion 3\n\n'},4515:e=>{"use strict";e.exports="# Attributs et primitives\n\nWebGL2 a un nombre limité de **primitives** d'affichage, mais en les combinant, on peut faire des choses folles.\n\n* `POINTS` : affiche des points carrés.\n* `LINE_STRIP` : affiche une ligne continue.\n* `LINE_LOOP` : affiche une ligne continue qui se referme sur elle-même. Le premier et le dernier points sont les mêmes.\n* `LINES` : affiche des segments de droites par forcément connectés entre eux.\n* `TRIANGLE_STRIP` : affiche une bande de triangles reliès par un côté.\n* `TRIANGLE_FAN` : affiche une série de triangles reliés par un côté et avec un même sommet en commun pour tous.\n* `TRIANGLES` : affiche des triangles non connectés.\n\nToutes ces primitives consomment des **vertex**. Ce sont des sortes de points avec un ensemble d'attributs.\nPour povoir afficher quoi que ce soit, WebGL2 a besoin d'un **vertex shader** qui est un programme qui lit\nles attributs d'un vertex et retourne (au moins) les coordonnées de ce vertex.\n\nSupposons que l'on souhaite afficher deux triangles. On va utiliser la primitive **TRIANGLES** qui consomme\n3 vertex par triangle affiché. Il nous faut donc 6 vertex.\nPuisqu'on veux positionner les sommets des triangles sur l'écran, il nous faudrait des attributs qui donnent\nces positions.\nOn va donc utiliser un attribute de type `vec2` (un vecteur à deux dimensions) qu'on va appeler `attPos`.\n\n"},2580:e=>{"use strict";e.exports='//#region 1\n/**\n * Considérons que la page HTML contient un élément de ce type:\n * <canvas id="mon-canvas"></canvas>\n */\nconst canvas = document.getElementById("mon-canvas")\n\n// On obtient un contect WebGL2 comme ceci :\nconst gl = canvas.getContext("webgl2")\n//#endregion 1\n\n//#region 2\nfunction paint(time: number) {\n    const rouge = Math.abs(Math.cos(time * 0.0005115))\n    const vert = Math.abs(Math.cos(time * 0.0008172))\n    const bleu = Math.abs(Math.cos(time * 0.0006131))\n    const opacite = 1\n    gl.clearColor(rouge, vert, bleu, opacite)\n    gl.clear(gl.COLOR_BUFFER_BIT)\n}\n//#endregion 2\n\n//#region 3\nfunction anim(time: number) {\n    window.requestAnimationFrame(anim)\n    paint(time)\n}\n\n// Il faut la lancer au moins une fois\nwindow.requestAnimationFrame(anim)\n//#endregion 3\n\n'},5528:e=>{"use strict";e.exports='<html>\n    <body>\n        <canvas id="mon-canvas"></canvas>\n        <script>\n            const canvas = document.getElementById("mon-canvas")\n            const gl = canvas.getContext("webgl2")\n            function anim(time) {\n                window.requestAnimationFrame(anim)\n                const rouge = Math.abs(Math.cos(time * 0.0005115))\n                const vert = Math.abs(Math.cos(time * 0.0008172))\n                const bleu = Math.abs(Math.cos(time * 0.0006131))\n                const opacite = 1\n                gl.clearColor(rouge, vert, bleu, opacite)\n                gl.clear(gl.COLOR_BUFFER_BIT)\n            }\n            window.requestAnimationFrame(anim)\n        <\/script>\n    </body>\n</html>\n'},5519:e=>{"use strict";e.exports="# Contexte, animation et couleur de fond\n\nWebGL est unebibliothèque qui nous permet d'accéder à la carte graphique depuis\nle code Javascript d'une page Web.\n\nCette bibliothèque est accessible à travers un object appelé **WebGL2RenderingContext** que l'on récupère comme ceci:\n\n<Code region=\"1\">code</Code>\n\nIl nous faut maintenant une fonction qui va remplir le canvas avec un couleur en fonction du temps.\n\n<Code region=\"2\">code</Code>\n\n> Mais pourquoi deux fonctions pour remplir le fond avec une couleur ?\n>\n> La fonction qui effectue le remplissage est `gl.clear(gl.COLOR_BUFFER_BIT)`.\n> Mais elle ne prend pas de couleur en argument.\n> Elle utilise la couleur **courante** de remplissage. Et c'est la fonction `gl.clearColor(rouge, vert, blue, opacite)` qui définit cette couleur de remplissage.\n>\n> La grande majorité des fonctions de WebGL2 fonctionnent ainsi : elles ont besoin de plus de données que\n> celles passées en argument. Ces données doivent avoir été définies plus tôt par d'autres fonctions.\n>\n> Cette complexification a pour but de gagner du temps.\n> En effet, WebGL2 permet de communiquer avec la carte graphique (le GPU) qui doit être considéré comme une\n> machine distincte de celle sur laquelle s'exécute le code Javascript. Et finalement, envoyer des données\n> au GPU est parfois plus lent que d'afficher des millions de pixels.\n>\n> Si vous vouliez juste remplir l'écran de vert à chaque image (avant d'afficher qutre chose par dessus),\n> il serait donc plus efficace d'appeler `gl.clearColor(0,1,0,1)` une fois et `gl.clear(gl.COLOR_BUFFER_BIT)`\n> à chaque image.\n\n----\n\nPour créer une animation, il faut afficher le plus d'images possible à intervalles rapprochés.\nJavascript fournit une fonction pour ça : `window.requestAnimationFrame`.\nLa fonction passée en paramètre sera exécutée (avec le temps en millisecondes comme seul argument)\nlorsque le navigateur sera prêt à afficher une image.\nCela permet d'afficher jusqu'à 60 images par secondes et aussi d'éviter l'affichage quand la page\nn'est pas visible à l'écran.\n\nVoici une fonction qui permet de gérer cette animation :\n\n<Code region=\"3\">code</Code>\n\n"},7e3:e=>{"use strict";e.exports="# Expérimentons WebGL2\n\n[Test](#test)\n\n## Articles\n\n* Les bases\n  * [Contexte, animation et couleur de fond](#article/webgl2context)\n  * [Attributs et primitives](#article/attributes)\n  * [Uniforms](#article/uniforms)\n  * [Varyings](#article/varyings)\n* Utiliser des éléments pour économiser du Vertex\n* Instances\n  * [Comment ça marche ?](#article/instances)\n* 3D\n  * Perspective\n    * [Perspective basique](#article/basic-perspective)\n\n## Outils\n\n* [Painters](#tool/painter)"},8604:(e,t,n)=>{"use strict";e.exports=n.p+"./img/map.38f5d351ceed6620b434.webp"},2183:()=>{},3024:()=>{},2715:()=>{},3611:()=>{},8353:()=>{},1210:()=>{},3454:()=>{}},e=>{e.O(0,[977],(()=>(5796,e(e.s=5796)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LGtnQkFBa2dCLE9BQVMsbU9BQW1PQyxLQUFLLHNKQUFzSixPQUFTLDRDQUE0QyxnQkFBZ0IsdUlBQXVJemQsT0FBTyxzUkFBc1IwZCxJQUFJLG1LQUFtS3BJLE1BQU0sOE1BQThNLGNBQWMsNlFBQTZRLGlCQUFpQiw2VEFBNlQsZ0JBQWdCLDBEQUEwRCtELFdBQVcsdU1BQXVNc0UsS0FBSyw4NEJBQTg0QixVQUFVLDZPQUE2TyxTQUFTLGdUQUFnVEMsS0FBSyxxaUJBQXFpQkMsS0FBSyxta0JBQW1rQixPQUFTLGlEQUFpREMsT0FBTyx5REFBeURDLEdBQUcsNHBCQUE0cEJ6SyxLQUFLLCtzQkFBK3NCMEssT0FBTyxtSUFBbUkzaEIsSUFBSSx3T0FBd080aEIsS0FBSyxpREFBaUQsVUFBVSx1TEFBdUxDLEtBQUssaU5BQWlOQyxHQUFHLDBEQUEwREMsWUFBWSw0T0FBNE9DLEtBQUssMmNBQTJjQyxNQUFNLGlDQUFpQ3hyQixLQUFLLGlDQUFpQyxTQUFTLGtOQUFrTnlyQixPQUFPLGtNQUFrTUMsT0FBTyxvREFBb0RDLE1BQU0sdVFBQXVRQyxPQUFPLDRPQUE0T3RjLE9BQU8seWxDQUF5bEN1YyxLQUFLLGdLQUFnS0MsUUFBUSwrTkFBK05DLE9BQU8sb1FBQW9RQyxNQUFNLDZiQUE2YkMsS0FBSyxvUEFBb1BDLFNBQVMsb1JBQW9SLGNBQWMsZ1BBQWdQQyxVQUFVLGlVQUFpVWprQixHQUFHLDhoQkFBOGhCa2tCLEtBQUssNkpBQTZKQyxLQUFLLGlJQUFpSUMsS0FBSyxpS0FBaUtDLFFBQVEsbURBQW1ELFVBQVUsMlNBQTJTLFdBQVcsdVIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL2FwcC9hcHAuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvZm9udHMvZG9zaXMuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvaW5kZXguY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvYmFzaWMtcGVyc3BlY3RpdmUvYmFzaWMtcGVyc3BlY3RpdmUuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvaW50cm8vYXR0cmlidXRlcy9hdHRyaWJ1dGVzLXZpZXcuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvaW50cm8vd2ViZ2wyY29udGV4dC93ZWJnbDJjb250ZXh0LXZpZXcuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvd2VsY29tZS93ZWxjb21lLmNzcyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL3Rvb2xzL3BhaW50ZXIvY29kZS1nZW5lcmF0b3IvY29kZS1nZW5lcmF0b3Itdmlldy5jc3MiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtb3B0aW9ucy9jb2RlLW9wdGlvbnMtdmlldy5jc3MiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL3BhaW50ZXItdG9vbHMuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9wcm9ncmFtLWNvZGUtZWRpdG9yL3Byb2dyYW0tY29kZS1lZGl0b3Itdmlldy5jc3MiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy90ZXN0L3Rlc3QuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdGhlbWUvdGhlbWUuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdmlldy9jaGVja2JveC9jaGVja2JveC12aWV3LmNzcyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvaWNvbi9pY29uLXZpZXcuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdmlldy9pbnB1dC9pbnRlZ2VyL2ludGVnZXItdmlldy5jc3MiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L2lucHV0L3RleHQvdGV4dC12aWV3LmNzcyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvbGFiZWwvbGFiZWwtdmlldy5jc3MiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L3NpbXBsZS1jb21iby9zaW1wbGUtY29tYm8tdmlldy5jc3MiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L3NsaWRlci9zbGlkZXIuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdmlldy90YWJzdHJpcC90YWJzdHJpcC12aWV3LmNzcyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3ZpZXcvY29kZS1lZGl0b3IvY29kZS1lZGl0b3Itdmlldy5jc3MiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L2NvZGUvY29kZS12aWV3LmNzcyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3ZpZXcvZmFsbGJhY2svZmFsbGJhY2stdmlldy5jc3MiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L21hcmtkb3duL2NvZGUvY29kZS12aWV3LmNzcyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3ZpZXcvbWFya2Rvd24vbWFya2Rvd24tdmlldy5jc3MiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L3NjZW5lL3NjZW5lLXZpZXcuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdmlldy9zaGFkZXItY29kZS1lZGl0b3Ivc2hhZGVyLWNvZGUtZWRpdG9yLXZpZXcuY3NzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvYXBwL2FwcC5jc3M/NzE2NyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL2ZvbnRzL2Rvc2lzLmNzcz9jZThhIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvaW5kZXguY3NzPzM1MjEiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy9hcnRpY2xlcy9iYXNpYy1wZXJzcGVjdGl2ZS9iYXNpYy1wZXJzcGVjdGl2ZS5jc3M/YjUzNSIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL2FydGljbGVzL2ludHJvL2F0dHJpYnV0ZXMvYXR0cmlidXRlcy12aWV3LmNzcz9mMTY0Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvaW50cm8vd2ViZ2wyY29udGV4dC93ZWJnbDJjb250ZXh0LXZpZXcuY3NzPzg3MzUiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy9hcnRpY2xlcy93ZWxjb21lL3dlbGNvbWUuY3NzPzhlNjEiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtZ2VuZXJhdG9yL2NvZGUtZ2VuZXJhdG9yLXZpZXcuY3NzPzMyMDkiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtb3B0aW9ucy9jb2RlLW9wdGlvbnMtdmlldy5jc3M/YTdkNyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL3Rvb2xzL3BhaW50ZXIvcGFpbnRlci10b29scy5jc3M/ZDFmZiIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL3Rvb2xzL3BhaW50ZXIvcHJvZ3JhbS1jb2RlLWVkaXRvci9wcm9ncmFtLWNvZGUtZWRpdG9yLXZpZXcuY3NzPzViODgiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy90ZXN0L3Rlc3QuY3NzPzNlY2EiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS90aGVtZS90aGVtZS5jc3M/NWY3YyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvY2hlY2tib3gvY2hlY2tib3gtdmlldy5jc3M/YmZmNCIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvaWNvbi9pY29uLXZpZXcuY3NzPzVkYTMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L2lucHV0L2ludGVnZXIvaW50ZWdlci12aWV3LmNzcz85YjE3Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdmlldy9pbnB1dC90ZXh0L3RleHQtdmlldy5jc3M/NDYzOSIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvbGFiZWwvbGFiZWwtdmlldy5jc3M/MjVhNSIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvc2ltcGxlLWNvbWJvL3NpbXBsZS1jb21iby12aWV3LmNzcz8xNTFjIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdmlldy9zbGlkZXIvc2xpZGVyLmNzcz8wODNiIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdmlldy90YWJzdHJpcC90YWJzdHJpcC12aWV3LmNzcz8zODQ2Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdmlldy9jb2RlLWVkaXRvci9jb2RlLWVkaXRvci12aWV3LmNzcz8yYmFhIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdmlldy9jb2RlL2NvZGUtdmlldy5jc3M/NjA2YSIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3ZpZXcvZmFsbGJhY2svZmFsbGJhY2stdmlldy5jc3M/MjdlZiIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3ZpZXcvbWFya2Rvd24vY29kZS9jb2RlLXZpZXcuY3NzPzc3MTQiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L21hcmtkb3duL21hcmtkb3duLXZpZXcuY3NzPzI2MzIiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L3NjZW5lL3NjZW5lLXZpZXcuY3NzPzZiM2IiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L3NoYWRlci1jb2RlLWVkaXRvci9zaGFkZXItY29kZS1lZGl0b3Itdmlldy5jc3M/MWY3NSIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL2FwcC9hcHAudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvYXBwL2luZGV4LnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvaW5kZXgudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvYmFzaWMtcGVyc3BlY3RpdmUvYmFzaWMtcGVyc3BlY3RpdmUudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvYmFzaWMtcGVyc3BlY3RpdmUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy9hcnRpY2xlcy9iYXNpYy1wZXJzcGVjdGl2ZS9wYWludGVyLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvaW5zdGFuY2VzL2luZGV4LnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvaW5zdGFuY2VzL2luc3RhbmNlcy50c3giLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy9hcnRpY2xlcy9pbnN0YW5jZXMvcGFpbnRlci50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL2FydGljbGVzL2ludHJvL2F0dHJpYnV0ZXMvYXR0cmlidXRlcy12aWV3LnRzeCIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL2FydGljbGVzL2ludHJvL2F0dHJpYnV0ZXMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy9hcnRpY2xlcy9pbnRyby9hdHRyaWJ1dGVzL3BhaW50ZXIudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy9hcnRpY2xlcy9pbnRyby93ZWJnbDJjb250ZXh0L2luZGV4LnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvaW50cm8vd2ViZ2wyY29udGV4dC93ZWJnbDJjb250ZXh0LXZpZXcudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvYXJ0aWNsZXMvd2VsY29tZS9pbmRleC50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL2FydGljbGVzL3dlbGNvbWUvd2VsY29tZS50c3giLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtZ2VuZXJhdG9yL2NvZGUtZ2VuZXJhdG9yLXZpZXcudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9jb2RlLWdlbmVyYXRvci9jb2RlL2F0dHJpYnV0ZS50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL3Rvb2xzL3BhaW50ZXIvY29kZS1nZW5lcmF0b3IvY29kZS9idWZmZXIudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtZ2VuZXJhdG9yL2NvZGUvY2xhc3MudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtZ2VuZXJhdG9yL2NvZGUvY29tbW9uLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9jb2RlLWdlbmVyYXRvci9jb2RlL2NvbnN0cnVjdG9yLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9jb2RlLWdlbmVyYXRvci9jb2RlL2NyZWF0ZS50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL3Rvb2xzL3BhaW50ZXIvY29kZS1nZW5lcmF0b3IvY29kZS9kYXRhLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9jb2RlLWdlbmVyYXRvci9jb2RlL2Rlc3Ryb3kudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtZ2VuZXJhdG9yL2NvZGUvcGFpbnQudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtZ2VuZXJhdG9yL2NvZGUvdW5pZm9ybS50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL3Rvb2xzL3BhaW50ZXIvY29kZS1nZW5lcmF0b3IvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtZ2VuZXJhdG9yL3R5cGVzLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9jb2RlLW9wdGlvbnMvY29kZS1vcHRpb25zLXZpZXcudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9jb2RlLW9wdGlvbnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvbW1vbi50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3BhZ2VzL3Rvb2xzL3BhaW50ZXIvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL3BhaW50ZXItdG9vbHMudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9wcm9ncmFtLWNvZGUtZWRpdG9yL2luZGV4LnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9wcm9ncmFtLWNvZGUtZWRpdG9yL3Byb2dyYW0tY29kZS1lZGl0b3Itdmlldy50c3giLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy90ZXN0L2luZGV4LnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdGVzdC9wYWludGVyLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdGVzdC90ZXN0LXBhZ2UudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdG9vbHMvYXN5bmMvZGVib3VuY2VyLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdG9vbHMvYXN5bmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy90b29scy9hc3luYy9zbGVlcC50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3Rvb2xzL2FzeW5jL3Rocm90dGxlci50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3Rvb2xzL2FzeW5jL3VwZGF0ZS10YXNrcy50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3Rvb2xzL2NvcHktdG8tY2xpcGJvYXJkLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdG9vbHMvZXhjZXB0aW9uLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdG9vbHMvZ3JhbW1hci9ncmFtbWFyLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdG9vbHMvcGVyc2lzdGVuY2UvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy90b29scy9wZXJzaXN0ZW5jZS9wZXJzaXN0ZW5jZS50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3Rvb2xzL3N0cmluZ3MudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy90b29scy90eXBlLWd1YXJkcy50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL2NvbG9yL2NvbG9yLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvY29sb3IvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS9mYWN0b3J5L2ljb24vaWNvbi1mYWN0b3J5LnRzeCIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL2ZhY3RvcnkvaWNvbi9pbmRleC50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL2hvb2tzL2RlYm91bmNlZC1lZmZlY3QudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS9ob29rcy9oYXNoLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvaG9va3MvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS9ob29rcy9sb2NhbC1zdG9yYWdlLXN0YXRlLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvaG9va3MvcmVzaXplLW9ic2VydmVyLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvaG9va3MvdG9nZ2xlLXBvcHVwLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdGhlbWUvY3NzLXZhci1tYW5hZ2VyLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdGhlbWUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS90aGVtZS90aGVtZS50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvY2hlY2tib3gvY2hlY2tib3gtdmlldy50c3giLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L2NoZWNrYm94L2luZGV4LnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdmlldy9pY29uL2ljb24tdmlldy50c3giLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L2ljb24vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L2lucHV0L2ludGVnZXIvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L2lucHV0L2ludGVnZXIvaW50ZWdlci12aWV3LnRzeCIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvaW5wdXQvdGV4dC9pbmRleC50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvaW5wdXQvdGV4dC90ZXh0LXZpZXcudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdmlldy9sYWJlbC9pbmRleC50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvbGFiZWwvbGFiZWwtdmlldy50c3giLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L3NpbXBsZS1jb21iby9pbmRleC50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvc2ltcGxlLWNvbWJvL3NpbXBsZS1jb21iby12aWV3LnRzeCIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvc2xpZGVyL2luZGV4LnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdWkvdmlldy9zbGlkZXIvc2xpZGVyLnRzeCIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3VpL3ZpZXcvdGFic3RyaXAvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS92aWV3L3RhYnN0cmlwL3RhYnN0cmlwLXZpZXcudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdmlldy9jb2RlLWVkaXRvci9jb2RlLWVkaXRvci12aWV3LnRzeCIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3ZpZXcvY29kZS1lZGl0b3IvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L2NvZGUvY29kZS12aWV3LnRzeCIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3ZpZXcvY29kZS9pbmRleC50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3ZpZXcvZmFsbGJhY2svZmFsbGJhY2stdmlldy50c3giLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L2ZhbGxiYWNrL2luZGV4LnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdmlldy9tYXJrZG93bi9jb2RlL2NvZGUtdmlldy50c3giLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L21hcmtkb3duL2NvZGUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L21hcmtkb3duL2luZGV4LnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdmlldy9tYXJrZG93bi9tYXJrZG93bi12aWV3LnRzeCIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3ZpZXcvc2NlbmUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L3NjZW5lL3NjZW5lLXZpZXcudHN4Iiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvdmlldy9zaGFkZXItY29kZS1lZGl0b3IvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy92aWV3L3NoYWRlci1jb2RlLWVkaXRvci9zaGFkZXItY29kZS1lZGl0b3Itdmlldy50c3giLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy93ZWJnbDIvYW5hbHlzZS1wcm9ncmFtL2FuYWx5c2UtcHJvZ3JhbS50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3dlYmdsMi9hbmFseXNlLXByb2dyYW0vYXR0cmlidXRlcy50cyIsIndlYnBhY2s6Ly9XZWJHTCAyLy4vc3JjL3dlYmdsMi9hbmFseXNlLXByb2dyYW0vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy93ZWJnbDIvYW5hbHlzZS1wcm9ncmFtL3VuaWZvcm1zLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9zcmMvd2ViZ2wyL2xvb2t1cC1jb25zdC1uYW1lLnRzIiwid2VicGFjazovL1dlYkdMIDIvLi9ub2RlX21vZHVsZXMvdHlwZXNjcmlwdC9saWIvIHN5bmMiLCJ3ZWJwYWNrOi8vV2ViR0wgMi8uL3NyYy91aS9mYWN0b3J5L2ljb24vaWNvbnMueWFtbCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5BcHAge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbn1cXG5cXG4uQXBwID4gZGl2LmJvZHkge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMnJlbTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4uQXBwID4gZGl2LmJvZHkgPiAqIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAuNXJlbTtcXG4gICAgdG9wOiAuNXJlbTtcXG4gICAgcmlnaHQ6IC41cmVtO1xcbiAgICBib3R0b206IC41cmVtO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcblxcblxcbi5BcHAgPiBuYXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAycmVtO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDFyZW07XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoY2FsYygxcmVtIC0gMTAwJSkpO1xcbn1cXG5cXG4uQXBwID4gbmF2LnNob3cge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1AsTUFBTTtJQUNOLFdBQVc7SUFDWCxZQUFZO0lBQ1osU0FBUztJQUNULFVBQVU7QUFDZDs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1AsU0FBUztJQUNULFdBQVc7SUFDWCxTQUFTO0lBQ1QsU0FBUztJQUNULFVBQVU7SUFDVixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFVBQVU7SUFDVixZQUFZO0lBQ1osYUFBYTtJQUNiLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7OztBQUdBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw4QkFBOEI7SUFDOUIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1AsTUFBTTtJQUNOLFdBQVc7SUFDWCxZQUFZO0lBQ1osU0FBUztJQUNULGFBQWE7SUFDYixjQUFjO0lBQ2QseUJBQXlCO0lBQ3pCLHdDQUF3QztBQUM1Qzs7QUFFQTtJQUNJLHdCQUF3QjtBQUM1QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuQXBwIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG59XFxuXFxuLkFwcCA+IGRpdi5ib2R5IHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDJyZW07XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBib3R0b206IDA7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLkFwcCA+IGRpdi5ib2R5ID4gKiB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogLjVyZW07XFxuICAgIHRvcDogLjVyZW07XFxuICAgIHJpZ2h0OiAuNXJlbTtcXG4gICAgYm90dG9tOiAuNXJlbTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbn1cXG5cXG5cXG4uQXBwID4gbmF2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMnJlbTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAxcmVtO1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycztcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGNhbGMoMXJlbSAtIDEwMCUpKTtcXG59XFxuXFxuLkFwcCA+IG5hdi5zaG93IHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4vZG9zaXMvZG9zaXMtMC53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fID0gbmV3IFVSTChcIi4vZG9zaXMvZG9zaXMtMS53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fID0gbmV3IFVSTChcIi4vZG9zaXMvZG9zaXMtMi53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zX19fID0gbmV3IFVSTChcIi4vZG9zaXMvZG9zaXMtMy53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80X19fID0gbmV3IFVSTChcIi4vZG9zaXMvZG9zaXMtNC53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF81X19fID0gbmV3IFVSTChcIi4vZG9zaXMvZG9zaXMtNS53b2ZmMlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF80X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzVfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogZG9zaXM7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogMzAwO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fICsgXCIpIGZvcm1hdCgnd29mZjInKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSswMTI4LTAxMjksIFUrMDE2OC0wMTY5LCBVKzAxQTAtMDFBMSwgVSswMUFGLTAxQjAsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6IGRvc2lzO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDMwMDtcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKSBmb3JtYXQoJ3dvZmYyJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiBkb3NpcztcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18gKyBcIikgZm9ybWF0KCd3b2ZmMicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogZG9zaXM7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zX19fICsgXCIpIGZvcm1hdCgnd29mZjInKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMi0wMTAzLCBVKzAxMTAtMDExMSwgVSswMTI4LTAxMjksIFUrMDE2OC0wMTY5LCBVKzAxQTAtMDFBMSwgVSswMUFGLTAxQjAsIFUrMUVBMC0xRUY5LCBVKzIwQUI7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6IGRvc2lzO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNF9fXyArIFwiKSBmb3JtYXQoJ3dvZmYyJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSswMjU5LCBVKzFFMDAtMUVGRiwgVSsyMDIwLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMjExMywgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiBkb3NpcztcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzVfX18gKyBcIikgZm9ybWF0KCd3b2ZmMicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2ZvbnRzL2Rvc2lzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsNERBQStDO0VBQy9DLGdIQUFnSDtBQUNsSDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQiw0REFBK0M7RUFDL0MsbUhBQW1IO0FBQ3JIOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLDREQUErQztFQUMvQyx5S0FBeUs7QUFDM0s7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsNERBQStDO0VBQy9DLGdIQUFnSDtBQUNsSDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQiw0REFBK0M7RUFDL0MsbUhBQW1IO0FBQ3JIOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLDREQUErQztFQUMvQyx5S0FBeUs7QUFDM0tcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogZG9zaXM7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogMzAwO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgc3JjOiB1cmwoLi9kb3Npcy9kb3Npcy0wLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzAxMDItMDEwMywgVSswMTEwLTAxMTEsIFUrMDEyOC0wMTI5LCBVKzAxNjgtMDE2OSwgVSswMUEwLTAxQTEsIFUrMDFBRi0wMUIwLCBVKzFFQTAtMUVGOSwgVSsyMEFCO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiBkb3NpcztcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBzcmM6IHVybCguL2Rvc2lzL2Rvc2lzLTEud29mZjIpIGZvcm1hdCgnd29mZjInKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzAyNTksIFUrMUUwMC0xRUZGLCBVKzIwMjAsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyMTEzLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6IGRvc2lzO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDMwMDtcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIHNyYzogdXJsKC4vZG9zaXMvZG9zaXMtMi53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogZG9zaXM7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xcbiAgc3JjOiB1cmwoLi9kb3Npcy9kb3Npcy0zLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyk7XFxuICB1bmljb2RlLXJhbmdlOiBVKzAxMDItMDEwMywgVSswMTEwLTAxMTEsIFUrMDEyOC0wMTI5LCBVKzAxNjgtMDE2OSwgVSswMUEwLTAxQTEsIFUrMDFBRi0wMUIwLCBVKzFFQTAtMUVGOSwgVSsyMEFCO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiBkb3NpcztcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBmb250LWRpc3BsYXk6IHN3YXA7XFxuICBzcmM6IHVybCguL2Rvc2lzL2Rvc2lzLTQud29mZjIpIGZvcm1hdCgnd29mZjInKTtcXG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzAyNTksIFUrMUUwMC0xRUZGLCBVKzIwMjAsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyMTEzLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6IGRvc2lzO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcXG4gIHNyYzogdXJsKC4vZG9zaXMvZG9zaXMtNS53b2ZmMikgZm9ybWF0KCd3b2ZmMicpO1xcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJCQi0wMkJDLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjEyMiwgVSsyMTkxLCBVKzIxOTMsIFUrMjIxMiwgVSsyMjE1LCBVK0ZFRkYsIFUrRkZGRDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiaHRtbCxcXG5ib2R5LFxcbiNyb290IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICBib3R0b206IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIGZvbnQtZmFtaWx5OiBkb3Npcywgc2Fucy1zZXJpZjtcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcbn1cXG5cXG4jdGdkLWxvZ28udmFuaXNoIHtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjlzO1xcbn1cXG5cXG5hcnRpY2xlIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMXJlbSAwO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBtaW4oMzIwcHgsIDUwdncpIG1pbigzMjBweCwgNTB2dykgMWZyO1xcbiAgICBncmlkLWF1dG8tcm93czogbWluLWNvbnRlbnQ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLWZyYW1lKTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLWZyYW1lKTtcXG59XFxuXFxuYXJ0aWNsZSA+ICoge1xcbiAgICBncmlkLWNvbHVtbjogMi80O1xcbn1cXG5cXG5hcnRpY2xlID4gKi5mdWxsLXdpZHRoIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEvNTtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbmFydGljbGUgPiAqLmxlZnQge1xcbiAgICBncmlkLWNvbHVtbjogMS8zO1xcbiAgICBwbGFjZS1zZWxmOiBmbGV4LXN0YXJ0IGNlbnRlcjtcXG59XFxuXFxuYXJ0aWNsZSA+ICoucmlnaHQge1xcbiAgICBncmlkLWNvbHVtbjogMy81O1xcbiAgICBwbGFjZS1zZWxmOiBmbGV4LXN0YXJ0IGNlbnRlcjtcXG59XFxuXFxuYXJ0aWNsZSA+ICoubWFyZ2luLWxlZnQge1xcbiAgICBncmlkLWNvbHVtbjogMS8yO1xcbn1cXG5cXG5hcnRpY2xlID4gKi5tYXJnaW4tcmlnaHQge1xcbiAgICBncmlkLWNvbHVtbjogNC81O1xcbn1cXG5cXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcXG4gICAgYXJ0aWNsZSA+ICoubGVmdCxcXG4gICAgYXJ0aWNsZSA+ICoubWFyZ2luLWxlZnQge1xcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEvNDtcXG4gICAgfVxcblxcbiAgICBhcnRpY2xlID4gKi5yaWdodCxcXG4gICAgYXJ0aWNsZSA+ICoubWFyZ2luLXJpZ2h0IHtcXG4gICAgICAgIGdyaWQtY29sdW1uOiAyLzU7XFxuICAgIH1cXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2luZGV4LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7O0lBR0ksU0FBUztJQUNULG1DQUFtQztJQUNuQyxrQ0FBa0M7SUFDbEMsa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxNQUFNO0lBQ04sUUFBUTtJQUNSLFNBQVM7SUFDVCxXQUFXO0lBQ1gsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQiw4QkFBOEI7SUFDOUIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFVBQVU7SUFDVix3QkFBd0I7QUFDNUI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsU0FBUztJQUNULGVBQWU7SUFDZixZQUFZO0lBQ1osY0FBYztJQUNkLGFBQWE7SUFDYixnRUFBZ0U7SUFDaEUsMkJBQTJCO0lBQzNCLDBDQUEwQztJQUMxQyxrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSTs7UUFFSSxnQkFBZ0I7SUFDcEI7O0lBRUE7O1FBRUksZ0JBQWdCO0lBQ3BCO0FBQ0pcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCxcXG5ib2R5LFxcbiNyb290IHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICBib3R0b206IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIGZvbnQtZmFtaWx5OiBkb3Npcywgc2Fucy1zZXJpZjtcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcbn1cXG5cXG4jdGdkLWxvZ28udmFuaXNoIHtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjlzO1xcbn1cXG5cXG5hcnRpY2xlIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMXJlbSAwO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBtaW4oMzIwcHgsIDUwdncpIG1pbigzMjBweCwgNTB2dykgMWZyO1xcbiAgICBncmlkLWF1dG8tcm93czogbWluLWNvbnRlbnQ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLWZyYW1lKTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLWZyYW1lKTtcXG59XFxuXFxuYXJ0aWNsZSA+ICoge1xcbiAgICBncmlkLWNvbHVtbjogMi80O1xcbn1cXG5cXG5hcnRpY2xlID4gKi5mdWxsLXdpZHRoIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEvNTtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbmFydGljbGUgPiAqLmxlZnQge1xcbiAgICBncmlkLWNvbHVtbjogMS8zO1xcbiAgICBwbGFjZS1zZWxmOiBmbGV4LXN0YXJ0IGNlbnRlcjtcXG59XFxuXFxuYXJ0aWNsZSA+ICoucmlnaHQge1xcbiAgICBncmlkLWNvbHVtbjogMy81O1xcbiAgICBwbGFjZS1zZWxmOiBmbGV4LXN0YXJ0IGNlbnRlcjtcXG59XFxuXFxuYXJ0aWNsZSA+ICoubWFyZ2luLWxlZnQge1xcbiAgICBncmlkLWNvbHVtbjogMS8yO1xcbn1cXG5cXG5hcnRpY2xlID4gKi5tYXJnaW4tcmlnaHQge1xcbiAgICBncmlkLWNvbHVtbjogNC81O1xcbn1cXG5cXG5AbWVkaWEgKG1heC13aWR0aDogODAwcHgpIHtcXG4gICAgYXJ0aWNsZSA+ICoubGVmdCxcXG4gICAgYXJ0aWNsZSA+ICoubWFyZ2luLWxlZnQge1xcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEvNDtcXG4gICAgfVxcblxcbiAgICBhcnRpY2xlID4gKi5yaWdodCxcXG4gICAgYXJ0aWNsZSA+ICoubWFyZ2luLXJpZ2h0IHtcXG4gICAgICAgIGdyaWQtY29sdW1uOiAyLzU7XFxuICAgIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmFydGljbGUtQmFzaWNQZXJzcGVjdGl2ZSB7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9wYWdlcy9hcnRpY2xlcy9iYXNpYy1wZXJzcGVjdGl2ZS9iYXNpYy1wZXJzcGVjdGl2ZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7QUFDQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuYXJ0aWNsZS1CYXNpY1BlcnNwZWN0aXZlIHtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnBhZ2VzLWFydGljbGVzLUF0dHJpYnV0ZXNWaWV3IHt9XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3BhZ2VzL2FydGljbGVzL2ludHJvL2F0dHJpYnV0ZXMvYXR0cmlidXRlcy12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxnQ0FBZ0NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnBhZ2VzLWFydGljbGVzLUF0dHJpYnV0ZXNWaWV3IHt9XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnBhZ2VzLWFydGljbGVzLVdlYmdsMmNvbnRleHRWaWV3IHt9XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3BhZ2VzL2FydGljbGVzL2ludHJvL3dlYmdsMmNvbnRleHQvd2ViZ2wyY29udGV4dC12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxtQ0FBbUNcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnBhZ2VzLWFydGljbGVzLVdlYmdsMmNvbnRleHRWaWV3IHt9XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnBhZ2VzLXRvb2xzLVdlbGNvbWUge31cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvcGFnZXMvYXJ0aWNsZXMvd2VsY29tZS93ZWxjb21lLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxzQkFBc0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnBhZ2VzLXRvb2xzLVdlbGNvbWUge31cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucGFnZXMtdG9vbHMtcGFpbnRlci1Db2RlR2VuZXJhdG9yVmlldyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XFxuICAgIG1hcmdpbjogMC41ZW0gMDtcXG59XFxuXFxuLnBhZ2VzLXRvb2xzLXBhaW50ZXItQ29kZUdlbmVyYXRvclZpZXcgPiBoZWFkZXIge1xcbiAgICBwYWRkaW5nOiAwLjI1ZW0gMWVtO1xcbiAgICBib3JkZXItcmFkaXVzOiAwLjVlbSAwLjVlbSAwIDA7XFxuICAgIGZsZXg6IDAgMDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAgZ2FwOiAxZW07XFxufVxcblxcbi5wYWdlcy10b29scy1wYWludGVyLUNvZGVHZW5lcmF0b3JWaWV3ID4gcHJlIHtcXG4gICAgZm9udC1zaXplOiA4MCU7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XFxuICAgIGZsZXg6IDEgMSBhdXRvO1xcbiAgICBwYWRkaW5nOiAxZW07XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtZ2VuZXJhdG9yL2NvZGUtZ2VuZXJhdG9yLXZpZXcuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QiwyQkFBMkI7SUFDM0Isb0JBQW9CO0lBQ3BCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsOEJBQThCO0lBQzlCLFNBQVM7SUFDVCxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3QixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLFFBQVE7QUFDWjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxjQUFjO0lBQ2QscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCxZQUFZO0FBQ2hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5wYWdlcy10b29scy1wYWludGVyLUNvZGVHZW5lcmF0b3JWaWV3IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcXG4gICAgbWFyZ2luOiAwLjVlbSAwO1xcbn1cXG5cXG4ucGFnZXMtdG9vbHMtcGFpbnRlci1Db2RlR2VuZXJhdG9yVmlldyA+IGhlYWRlciB7XFxuICAgIHBhZGRpbmc6IDAuMjVlbSAxZW07XFxuICAgIGJvcmRlci1yYWRpdXM6IDAuNWVtIDAuNWVtIDAgMDtcXG4gICAgZmxleDogMCAwO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZmxleC13cmFwOiB3cmFwO1xcbiAgICBnYXA6IDFlbTtcXG59XFxuXFxuLnBhZ2VzLXRvb2xzLXBhaW50ZXItQ29kZUdlbmVyYXRvclZpZXcgPiBwcmUge1xcbiAgICBmb250LXNpemU6IDgwJTtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcXG4gICAgZmxleDogMSAxIGF1dG87XFxuICAgIHBhZGRpbmc6IDFlbTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnBhZ2VzLXRvb2xzLXBhaW50ZXItQ29kZU9wdGlvbnNWaWV3IGRpdi5ncmlkLTMge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0byAxZnI7XFxuICAgIGdhcDogMCAxLjVlbTtcXG4gICAgcGxhY2UtaXRlbXM6IGNlbnRlciBzdGFydDtcXG59XFxuXFxuLnBhZ2VzLXRvb2xzLXBhaW50ZXItQ29kZU9wdGlvbnNWaWV3IGRpdi5ncmlkLTMgPiBkaXYuaGludCB7XFxuICAgIG9wYWNpdHk6IDAuNTtcXG59XFxuXFxuLnBhZ2VzLXRvb2xzLXBhaW50ZXItQ29kZU9wdGlvbnNWaWV3IC5zbWFsbC1pbnB1dCB7XFxuICAgIHdpZHRoOiAzZW07XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9wYWdlcy90b29scy9wYWludGVyL2NvZGUtb3B0aW9ucy9jb2RlLW9wdGlvbnMtdmlldy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2Isb0NBQW9DO0lBQ3BDLFlBQVk7SUFDWix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksVUFBVTtBQUNkXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5wYWdlcy10b29scy1wYWludGVyLUNvZGVPcHRpb25zVmlldyBkaXYuZ3JpZC0zIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG8gMWZyO1xcbiAgICBnYXA6IDAgMS41ZW07XFxuICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXIgc3RhcnQ7XFxufVxcblxcbi5wYWdlcy10b29scy1wYWludGVyLUNvZGVPcHRpb25zVmlldyBkaXYuZ3JpZC0zID4gZGl2LmhpbnQge1xcbiAgICBvcGFjaXR5OiAwLjU7XFxufVxcblxcbi5wYWdlcy10b29scy1wYWludGVyLUNvZGVPcHRpb25zVmlldyAuc21hbGwtaW5wdXQge1xcbiAgICB3aWR0aDogM2VtO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJkaXYucGFnZXMtdG9vbHMtcGFpbnRlci1QYWludGVyVG9vbHMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbn1cXG5cXG5kaXYucGFnZXMtdG9vbHMtcGFpbnRlci1QYWludGVyVG9vbHMgPiBkaXYudGFiLXN0cmlwIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XFxuXFxuZGl2LnBhZ2VzLXRvb2xzLXBhaW50ZXItUGFpbnRlclRvb2xzID4gZGl2LnRhYi1zdHJpcCBtYWluID4gZGl2ID4gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gICAgZ2FwOiAuNWVtO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvcGFnZXMvdG9vbHMvcGFpbnRlci9wYWludGVyLXRvb2xzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsMkJBQTJCO0lBQzNCLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiwyQkFBMkI7SUFDM0IsdUJBQXVCO0lBQ3ZCLFNBQVM7QUFDYlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJkaXYucGFnZXMtdG9vbHMtcGFpbnRlci1QYWludGVyVG9vbHMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbn1cXG5cXG5kaXYucGFnZXMtdG9vbHMtcGFpbnRlci1QYWludGVyVG9vbHMgPiBkaXYudGFiLXN0cmlwIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG59XFxuXFxuZGl2LnBhZ2VzLXRvb2xzLXBhaW50ZXItUGFpbnRlclRvb2xzID4gZGl2LnRhYi1zdHJpcCBtYWluID4gZGl2ID4gZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gICAgZ2FwOiAuNWVtO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucGFnZXMtdG9vbHMtcGFpbnRlci1Qcm9ncmFtQ29kZUVkaXRvclZpZXcge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxuICAgIGdhcDogMC41ZW07XFxuICAgIHBhZGRpbmc6IC41ZW07XFxufVxcblxcbi5wYWdlcy10b29scy1wYWludGVyLVByb2dyYW1Db2RlRWRpdG9yVmlldyA+ICoge1xcbiAgICBmbGV4OiAxIDEgYXV0bztcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3BhZ2VzL3Rvb2xzL3BhaW50ZXIvcHJvZ3JhbS1jb2RlLWVkaXRvci9wcm9ncmFtLWNvZGUtZWRpdG9yLXZpZXcuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiwyQkFBMkI7SUFDM0Isb0JBQW9CO0lBQ3BCLGVBQWU7SUFDZixVQUFVO0lBQ1YsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnBhZ2VzLXRvb2xzLXBhaW50ZXItUHJvZ3JhbUNvZGVFZGl0b3JWaWV3IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcXG4gICAgZmxleC13cmFwOiB3cmFwO1xcbiAgICBnYXA6IDAuNWVtO1xcbiAgICBwYWRkaW5nOiAuNWVtO1xcbn1cXG5cXG4ucGFnZXMtdG9vbHMtcGFpbnRlci1Qcm9ncmFtQ29kZUVkaXRvclZpZXcgPiAqIHtcXG4gICAgZmxleDogMSAxIGF1dG87XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5UZXN0IHtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3Rlc3QvdGVzdC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7QUFDQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuVGVzdCB7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qKioqKioqKioqKioqKiovXFxuLyoqIFJFU0VUIENTUyAqKi9cXG4vKioqKioqKioqKioqKioqL1xcblxcbi8qIEJveCBzaXppbmcgcnVsZXMgKi9cXG4qLFxcbio6OmJlZm9yZSxcXG4qOjphZnRlciB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4vKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4gKi9cXG5ib2R5LFxcbmgxLFxcbmgyLFxcbmgzLFxcbmg0LFxcbnAsXFxuZmlndXJlLFxcbmJsb2NrcXVvdGUsXFxuZGwsXFxuZGQge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4vKiBSZW1vdmUgbGlzdCBzdHlsZXMgb24gdWwsIG9sIGVsZW1lbnRzIHdpdGggYSBsaXN0IHJvbGUsIHdoaWNoIHN1Z2dlc3RzIGRlZmF1bHQgc3R5bGluZyB3aWxsIGJlIHJlbW92ZWQgKi9cXG51bFtyb2xlPSdsaXN0J10sXFxub2xbcm9sZT0nbGlzdCddIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcblxcbi8qIFNldCBjb3JlIHJvb3QgZGVmYXVsdHMgKi9cXG5odG1sOmZvY3VzLXdpdGhpbiB7XFxuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcXG59XFxuXFxuLyogU2V0IGNvcmUgYm9keSBkZWZhdWx0cyAqL1xcbmJvZHkge1xcbiAgbWluLWhlaWdodDogMTAwdmg7XFxuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVTcGVlZDtcXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XFxufVxcblxcbi8qIEEgZWxlbWVudHMgdGhhdCBkb24ndCBoYXZlIGEgY2xhc3MgZ2V0IGRlZmF1bHQgc3R5bGVzICovXFxuYTpub3QoW2NsYXNzXSkge1xcbiAgdGV4dC1kZWNvcmF0aW9uLXNraXAtaW5rOiBhdXRvO1xcbn1cXG5cXG4vKiBNYWtlIGltYWdlcyBlYXNpZXIgdG8gd29yayB3aXRoICovXFxuaW1nLFxcbnBpY3R1cmUge1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi8qIEluaGVyaXQgZm9udHMgZm9yIGlucHV0cyBhbmQgYnV0dG9ucyAqL1xcbmlucHV0LFxcbmJ1dHRvbixcXG50ZXh0YXJlYSxcXG5zZWxlY3Qge1xcbiAgZm9udDogaW5oZXJpdDtcXG59XFxuXFxuLyogUmVtb3ZlIGFsbCBhbmltYXRpb25zLCB0cmFuc2l0aW9ucyBhbmQgc21vb3RoIHNjcm9sbCBmb3JcXG4gICBwZW9wbGUgdGhhdCBwcmVmZXIgbm90IHRvIHNlZSB0aGVtICovXFxuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpIHtcXG4gIGh0bWw6Zm9jdXMtd2l0aGluIHtcXG4gICBzY3JvbGwtYmVoYXZpb3I6IGF1dG87XFxuICB9XFxuICBcXG4gICosXFxuICAqOjpiZWZvcmUsXFxuICAqOjphZnRlciB7XFxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC4wMW1zICFpbXBvcnRhbnQ7XFxuICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDEgIWltcG9ydGFudDtcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4wMW1zICFpbXBvcnRhbnQ7XFxuICAgIHNjcm9sbC1iZWhhdmlvcjogYXV0byAhaW1wb3J0YW50O1xcbiAgfVxcbn1cXG5cXG4vKioqKioqKioqL1xcbi8qIFRoZW1lICovXFxuLyoqKioqKioqKi9cXG5cXG5odG1sIHtcXG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLyogRm9jdXMgKi9cXG4qIHtcXG4gICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgYWNjZW50LWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQpO1xcbn1cXG4qOjotbW96LWZvY3VzLWlubmVyIHtcXG4gIGJvcmRlcjogMDtcXG59XFxuKjpmb2N1cyB7XFxuICAgIG91dGxpbmU6IDJweCBkb3R0ZWQgdmFyKC0tdGhlbWUtY29sb3ItYWNjZW50KTtcXG4gICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcXG4gICAgei1pbmRleDogOTk5OTk5O1xcbn1cXG5cXG5oMSxcXG5oMiB7XFxuICAgIGJvcmRlcjogMC4wNjI1ZW0gc29saWQgY3VycmVudENvbG9yO1xcbiAgICBib3JkZXItaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgY3VycmVudENvbG9yLCB0cmFuc3BhcmVudCkgMCAwIDEgMDtcXG4gICAgbWFyZ2luOiAwLjVyZW0gMCAxcmVtIDA7XFxufVxcblxcbmgxIHtcXG4gICAgZm9udC1zaXplOiAxLjJyZW07XFxufVxcblxcbmgyIHtcXG4gICAgZm9udC1zaXplOiAxLjFyZW07XFxufVxcblxcbmhyIHtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBoZWlnaHQ6IDFweDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1hcmdpbjogMXJlbSAwO1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXFxuICAgICAgICB0byBsZWZ0LFxcbiAgICAgICAgdHJhbnNwYXJlbnQsXFxuICAgICAgICBjdXJyZW50Q29sb3IsXFxuICAgICAgICBjdXJyZW50Q29sb3IsXFxuICAgICAgICB0cmFuc3BhcmVudFxcbiAgICApO1xcbn1cXG5cXG4udGhlbWUtaGVhZGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBoZWlnaHQ6IDJyZW07XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktZGFyayk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LWRhcmspO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICB6LWluZGV4OiAxO1xcbn1cXG5cXG4udGhlbWUtaGVhZGVyID4gKiB7XFxuICAgIGZsZXg6IDEgMSBhdXRvO1xcbiAgICBtYXJnaW46IDAgMC41cmVtO1xcbn1cXG5cXG4udGhlbWUtaGVhZGVyID4gZGl2IHtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4udGhlbWUtaGVhZGVyID4gZGl2OmZpcnN0LWNoaWxkIHtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG59XFxuXFxuLnRoZW1lLWhlYWRlciA+IHN2ZyxcXG4udGhlbWUtaGVhZGVyID4gaW1nIHtcXG4gICAgaGVpZ2h0OiAxLjVyZW07XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbn1cXG5cXG5wcm9ncmVzc1t2YWx1ZV0ge1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICBtYXJnaW46IDFyZW0gMDtcXG4gICAgYXBwZWFyYW5jZTogbm9uZTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBoZWlnaHQ6IDAuNXJlbTtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxcbiAgICAgICAgICAgIHRvIHRvcCxcXG4gICAgICAgICAgICB0cmFuc3BhcmVudCxcXG4gICAgICAgICAgICB0cmFuc3BhcmVudCA1MCUsXFxuICAgICAgICAgICAgI2ZmZjcgNTAlLFxcbiAgICAgICAgICAgICNmZmY3XFxuICAgICAgICApLFxcbiAgICAgICAgbGluZWFyLWdyYWRpZW50KHZhcigtLXRoZW1lLWNvbG9yLXNjcmVlbiksIHZhcigtLXRoZW1lLWNvbG9yLXNjcmVlbikpO1xcbiAgICBib3JkZXItcmFkaXVzOiAwLjVyZW07XFxuICAgIGJveC1zaGFkb3c6IDAgMC4xMjVyZW0gMC4yNXJlbSAjMDAwNyBpbnNldCwgMCAtMC4xMjVyZW0gMC4yNXJlbSAjZmZmNyBpbnNldDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG5wcm9ncmVzc1t2YWx1ZV06Oi13ZWJraXQtcHJvZ3Jlc3MtYmFyIHtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxcbiAgICAgICAgICAgIHRvIHRvcCxcXG4gICAgICAgICAgICB0cmFuc3BhcmVudCxcXG4gICAgICAgICAgICB0cmFuc3BhcmVudCA1MCUsXFxuICAgICAgICAgICAgI2ZmZjcgNTAlLFxcbiAgICAgICAgICAgICNmZmY3XFxuICAgICAgICApLFxcbiAgICAgICAgbGluZWFyLWdyYWRpZW50KHZhcigtLXRoZW1lLWNvbG9yLXNjcmVlbiksIHZhcigtLXRoZW1lLWNvbG9yLXNjcmVlbikpO1xcbiAgICBib3JkZXItcmFkaXVzOiAwLjVyZW07XFxuICAgIGJveC1zaGFkb3c6IDAgMC4xMjVyZW0gMC4yNXJlbSAjMDAwNyBpbnNldCwgMCAtMC4xMjVyZW0gMC4yNXJlbSAjZmZmNyBpbnNldDtcXG59XFxuXFxucHJvZ3Jlc3NbdmFsdWVdOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcXG4gICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCUsIDEuNXJlbSAxcmVtLCAxMDAlIDEwMCU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcXG4gICAgYm94LXNoYWRvdzogMCAwIDAuNXJlbSB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5KTtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxcbiAgICAgICAgICAgIHRvIHRvcCxcXG4gICAgICAgICAgICB0cmFuc3BhcmVudCxcXG4gICAgICAgICAgICB0cmFuc3BhcmVudCA1MCUsXFxuICAgICAgICAgICAgI2ZmZjcgNTAlLFxcbiAgICAgICAgICAgICNmZmY3XFxuICAgICAgICApLFxcbiAgICAgICAgbGluZWFyLWdyYWRpZW50KFxcbiAgICAgICAgICAgIDEzNWRlZyxcXG4gICAgICAgICAgICB0cmFuc3BhcmVudCxcXG4gICAgICAgICAgICB0cmFuc3BhcmVudCAzMyUsXFxuICAgICAgICAgICAgIzAwMDIgMzMlLFxcbiAgICAgICAgICAgICMwMDAyIDY2JSxcXG4gICAgICAgICAgICB0cmFuc3BhcmVudCA2NiVcXG4gICAgICAgICksXFxuICAgICAgICBsaW5lYXItZ3JhZGllbnQoXFxuICAgICAgICAgICAgdG8gdG9wLFxcbiAgICAgICAgICAgIHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktbGlnaHQpLFxcbiAgICAgICAgICAgIHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktZGFyaylcXG4gICAgICAgICk7XFxufVxcblxcbnByb2dyZXNzW3ZhbHVlXTo6LW1vei1wcm9ncmVzcy1iYXIge1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXFxuICAgICAgICAgICAgdG8gdG9wLFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50LFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50IDUwJSxcXG4gICAgICAgICAgICAjZmZmNyA1MCUsXFxuICAgICAgICAgICAgI2ZmZjdcXG4gICAgICAgICksXFxuICAgICAgICBsaW5lYXItZ3JhZGllbnQoXFxuICAgICAgICAgICAgMTM1ZGVnLFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50LFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50IDMzJSxcXG4gICAgICAgICAgICAjMDAwMiAzMyUsXFxuICAgICAgICAgICAgIzAwMDIgNjYlLFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50IDY2JVxcbiAgICAgICAgKSxcXG4gICAgICAgIGxpbmVhci1ncmFkaWVudChcXG4gICAgICAgICAgICB0byB0b3AsXFxuICAgICAgICAgICAgdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1saWdodCksXFxuICAgICAgICAgICAgdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1kYXJrKVxcbiAgICAgICAgKTtcXG4gICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCUsIDEuNXJlbSAxcmVtLCAxMDAlIDEwMCU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcXG4gICAgYm94LXNoYWRvdzogMCAwIDAuNXJlbSB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5KTtcXG59XFxuXFxuZmllbGRzZXQge1xcbiAgICBtYXJnaW46IDFyZW0gMDtcXG4gICAgYmFja2dyb3VuZDogdmFyKC0tdGhlbWUtY29sb3Itc2VjdGlvbik7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1zZWN0aW9uKTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tdGhlbWUtY29sb3Itb24tc2VjdGlvbi1vcGFjaXR5LTMwKTtcXG59XFxuXFxuZmllbGRzZXQgPiBsZWdlbmQge1xcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS10aGVtZS1jb2xvci1zZWN0aW9uKTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXNlY3Rpb24tb3BhY2l0eS01MCk7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXRoZW1lLWNvbG9yLW9uLXNlY3Rpb24tb3BhY2l0eS0zMCk7XFxuICAgIGZvbnQtc2l6ZTogODAlO1xcbiAgICBwYWRkaW5nOiAwLjI1ZW0gMWVtO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMDB2dztcXG59XFxuXFxuLnRoZW1lLWZsYXNoaW5nLXRleHQge1xcbiAgICBhbmltYXRpb246IHRoZW1lLWZsYXNoaW5nLXRleHQtYW5pbSAxcyBpbmZpbml0ZTtcXG59XFxuXFxuQGtleWZyYW1lcyB0aGVtZS1mbGFzaGluZy10ZXh0LWFuaW0ge1xcbiAgICAwJSB7XFxuICAgICAgICB0ZXh0LXNoYWRvdzogMCAwIDAuMmVtIHRyYW5zcGFyZW50O1xcbiAgICB9XFxuICAgIDUwJSB7XFxuICAgICAgICB0ZXh0LXNoYWRvdzogMCAwIDAuMmVtIHZhcigtLXRoZW1lLWNvbG9yLWFjY2VudCk7XFxuICAgIH1cXG4gICAgMTAwJSB7XFxuICAgICAgICB0ZXh0LXNoYWRvdzogMCAwIDAuMmVtIHRyYW5zcGFyZW50O1xcbiAgICB9XFxufVxcblxcbio6Zm9jdXMge1xcbiAgICBvdXRsaW5lOiAzcHggZG90dGVkIHZhcigtLXRoZW1lLWNvbG9yLWFjY2VudCk7XFxuICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XFxufVxcbio6Zm9jdXM6bm90KDpmb2N1cy12aXNpYmxlKSB7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxufVxcblxcbi50aGVtZS1jb2xvci1wcmltYXJ5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeSk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5KTtcXG59XFxuLnRoZW1lLWNvbG9yLXByaW1hcnktZGFyayB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktZGFyayk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LWRhcmspO1xcbn1cXG4udGhlbWUtY29sb3ItcHJpbWFyeS1saWdodCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktbGlnaHQpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tcHJpbWFyeS1saWdodCk7XFxufVxcbi50aGVtZS1jb2xvci1hY2NlbnQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tYWNjZW50KTtcXG59XFxuLnRoZW1lLWNvbG9yLWFjY2VudC1kYXJrIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItYWNjZW50LWRhcmspO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tYWNjZW50LWRhcmspO1xcbn1cXG4udGhlbWUtY29sb3ItYWNjZW50LWxpZ2h0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItYWNjZW50LWxpZ2h0KTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLWFjY2VudC1saWdodCk7XFxufVxcbi50aGVtZS1jb2xvci1zY3JlZW4ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1zY3JlZW4pO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tc2NyZWVuKTtcXG59XFxuLnRoZW1lLWNvbG9yLWZyYW1lIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItZnJhbWUpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tZnJhbWUpO1xcbn1cXG4udGhlbWUtY29sb3Itc2VjdGlvbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXNlY3Rpb24pO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tc2VjdGlvbik7XFxufVxcbi50aGVtZS1jb2xvci1pbnB1dCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLWlucHV0KTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLWlucHV0KTtcXG59XFxuLnRoZW1lLWNvbG9yLWVycm9yIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItZXJyb3IpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tZXJyb3IpO1xcbn1cXG5cXG4udGhlbWUtc2hhZG93LWNhcmQge1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctY2FyZCk7XFxufVxcbi50aGVtZS1zaGFkb3ctYnV0dG9uIHtcXG4gICAgYm94LXNoYWRvdzogdmFyKC0tdGhlbWUtc2hhZG93LWJ1dHRvbik7XFxufVxcbi50aGVtZS1zaGFkb3ctaGVhZGVyIHtcXG4gICAgYm94LXNoYWRvdzogdmFyKC0tdGhlbWUtc2hhZG93LWhlYWRlcik7XFxufVxcbi50aGVtZS1zaGFkb3ctYnV0dG9uLXByZXNzZWQge1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctYnV0dG9uLXByZXNzZWQpO1xcbn1cXG4udGhlbWUtc2hhZG93LWRpYWxvZyB7XFxuICAgIGJveC1zaGFkb3c6IHZhcigtLXRoZW1lLXNoYWRvdy1kaWFsb2cpO1xcbn1cXG5cXG5hLCBhOnZpc2l0ZWQgeyBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItbGluaykgfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy91aS90aGVtZS90aGVtZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQixnQkFBZ0I7O0FBRWhCLHFCQUFxQjtBQUNyQjs7O0VBR0Usc0JBQXNCO0FBQ3hCOztBQUVBLDBCQUEwQjtBQUMxQjs7Ozs7Ozs7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QzVDO0FBQ0E7SUFDSSxpREFBaUQ7SUFDakQseUNBQXlDO0FBQzdDO0FBQ0E7SUFDSSwyQ0FBMkM7SUFDM0MsbUNBQW1DO0FBQ3ZDO0FBQ0E7SUFDSSwwQ0FBMEM7SUFDMUMsa0NBQWtDO0FBQ3RDO0FBQ0E7SUFDSSw0Q0FBNEM7SUFDNUMsb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSwwQ0FBMEM7SUFDMUMsa0NBQWtDO0FBQ3RDO0FBQ0E7SUFDSSwwQ0FBMEM7SUFDMUMsa0NBQWtDO0FBQ3RDOztBQUVBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxzQ0FBc0M7QUFDMUM7QUFDQTtJQUNJLHNDQUFzQztBQUMxQztBQUNBO0lBQ0ksOENBQThDO0FBQ2xEO0FBQ0E7SUFDSSxzQ0FBc0M7QUFDMUM7O0FBRUEsZUFBZSwrQkFBK0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyoqKioqKioqKioqKioqKi9cXG4vKiogUkVTRVQgQ1NTICoqL1xcbi8qKioqKioqKioqKioqKiovXFxuXFxuLyogQm94IHNpemluZyBydWxlcyAqL1xcbiosXFxuKjo6YmVmb3JlLFxcbio6OmFmdGVyIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi8qIFJlbW92ZSBkZWZhdWx0IG1hcmdpbiAqL1xcbmJvZHksXFxuaDEsXFxuaDIsXFxuaDMsXFxuaDQsXFxucCxcXG5maWd1cmUsXFxuYmxvY2txdW90ZSxcXG5kbCxcXG5kZCB7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbi8qIFJlbW92ZSBsaXN0IHN0eWxlcyBvbiB1bCwgb2wgZWxlbWVudHMgd2l0aCBhIGxpc3Qgcm9sZSwgd2hpY2ggc3VnZ2VzdHMgZGVmYXVsdCBzdHlsaW5nIHdpbGwgYmUgcmVtb3ZlZCAqL1xcbnVsW3JvbGU9J2xpc3QnXSxcXG5vbFtyb2xlPSdsaXN0J10ge1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG59XFxuXFxuLyogU2V0IGNvcmUgcm9vdCBkZWZhdWx0cyAqL1xcbmh0bWw6Zm9jdXMtd2l0aGluIHtcXG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xcbn1cXG5cXG4vKiBTZXQgY29yZSBib2R5IGRlZmF1bHRzICovXFxuYm9keSB7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZVNwZWVkO1xcbiAgbGluZS1oZWlnaHQ6IDEuNTtcXG59XFxuXFxuLyogQSBlbGVtZW50cyB0aGF0IGRvbid0IGhhdmUgYSBjbGFzcyBnZXQgZGVmYXVsdCBzdHlsZXMgKi9cXG5hOm5vdChbY2xhc3NdKSB7XFxuICB0ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6IGF1dG87XFxufVxcblxcbi8qIE1ha2UgaW1hZ2VzIGVhc2llciB0byB3b3JrIHdpdGggKi9cXG5pbWcsXFxucGljdHVyZSB7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLyogSW5oZXJpdCBmb250cyBmb3IgaW5wdXRzIGFuZCBidXR0b25zICovXFxuaW5wdXQsXFxuYnV0dG9uLFxcbnRleHRhcmVhLFxcbnNlbGVjdCB7XFxuICBmb250OiBpbmhlcml0O1xcbn1cXG5cXG4vKiBSZW1vdmUgYWxsIGFuaW1hdGlvbnMsIHRyYW5zaXRpb25zIGFuZCBzbW9vdGggc2Nyb2xsIGZvclxcbiAgIHBlb3BsZSB0aGF0IHByZWZlciBub3QgdG8gc2VlIHRoZW0gKi9cXG5AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xcbiAgaHRtbDpmb2N1cy13aXRoaW4ge1xcbiAgIHNjcm9sbC1iZWhhdmlvcjogYXV0bztcXG4gIH1cXG4gIFxcbiAgKixcXG4gICo6OmJlZm9yZSxcXG4gICo6OmFmdGVyIHtcXG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcXG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMSAhaW1wb3J0YW50O1xcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjAxbXMgIWltcG9ydGFudDtcXG4gICAgc2Nyb2xsLWJlaGF2aW9yOiBhdXRvICFpbXBvcnRhbnQ7XFxuICB9XFxufVxcblxcbi8qKioqKioqKiovXFxuLyogVGhlbWUgKi9cXG4vKioqKioqKioqL1xcblxcbmh0bWwge1xcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXG4gICAgZm9udC1zaXplOiAxNnB4O1xcbn1cXG5cXG4vKiBGb2N1cyAqL1xcbioge1xcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICBhY2NlbnQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLWFjY2VudCk7XFxufVxcbio6Oi1tb3otZm9jdXMtaW5uZXIge1xcbiAgYm9yZGVyOiAwO1xcbn1cXG4qOmZvY3VzIHtcXG4gICAgb3V0bGluZTogMnB4IGRvdHRlZCB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQpO1xcbiAgICBvdXRsaW5lLW9mZnNldDogMnB4O1xcbiAgICB6LWluZGV4OiA5OTk5OTk7XFxufVxcblxcbmgxLFxcbmgyIHtcXG4gICAgYm9yZGVyOiAwLjA2MjVlbSBzb2xpZCBjdXJyZW50Q29sb3I7XFxuICAgIGJvcmRlci1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCBjdXJyZW50Q29sb3IsIHRyYW5zcGFyZW50KSAwIDAgMSAwO1xcbiAgICBtYXJnaW46IDAuNXJlbSAwIDFyZW0gMDtcXG59XFxuXFxuaDEge1xcbiAgICBmb250LXNpemU6IDEuMnJlbTtcXG59XFxuXFxuaDIge1xcbiAgICBmb250LXNpemU6IDEuMXJlbTtcXG59XFxuXFxuaHIge1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGhlaWdodDogMXB4O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgbWFyZ2luOiAxcmVtIDA7XFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcXG4gICAgICAgIHRvIGxlZnQsXFxuICAgICAgICB0cmFuc3BhcmVudCxcXG4gICAgICAgIGN1cnJlbnRDb2xvcixcXG4gICAgICAgIGN1cnJlbnRDb2xvcixcXG4gICAgICAgIHRyYW5zcGFyZW50XFxuICAgICk7XFxufVxcblxcbi50aGVtZS1oZWFkZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGhlaWdodDogMnJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1kYXJrKTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktZGFyayk7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIHotaW5kZXg6IDE7XFxufVxcblxcbi50aGVtZS1oZWFkZXIgPiAqIHtcXG4gICAgZmxleDogMSAxIGF1dG87XFxuICAgIG1hcmdpbjogMCAwLjVyZW07XFxufVxcblxcbi50aGVtZS1oZWFkZXIgPiBkaXYge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi50aGVtZS1oZWFkZXIgPiBkaXY6Zmlyc3QtY2hpbGQge1xcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcbn1cXG5cXG4udGhlbWUtaGVhZGVyID4gc3ZnLFxcbi50aGVtZS1oZWFkZXIgPiBpbWcge1xcbiAgICBoZWlnaHQ6IDEuNXJlbTtcXG4gICAgZmxleDogMCAwIGF1dG87XFxufVxcblxcbnByb2dyZXNzW3ZhbHVlXSB7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIG1hcmdpbjogMXJlbSAwO1xcbiAgICBhcHBlYXJhbmNlOiBub25lO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGhlaWdodDogMC41cmVtO1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXFxuICAgICAgICAgICAgdG8gdG9wLFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50LFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50IDUwJSxcXG4gICAgICAgICAgICAjZmZmNyA1MCUsXFxuICAgICAgICAgICAgI2ZmZjdcXG4gICAgICAgICksXFxuICAgICAgICBsaW5lYXItZ3JhZGllbnQodmFyKC0tdGhlbWUtY29sb3Itc2NyZWVuKSwgdmFyKC0tdGhlbWUtY29sb3Itc2NyZWVuKSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcXG4gICAgYm94LXNoYWRvdzogMCAwLjEyNXJlbSAwLjI1cmVtICMwMDA3IGluc2V0LCAwIC0wLjEyNXJlbSAwLjI1cmVtICNmZmY3IGluc2V0O1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbnByb2dyZXNzW3ZhbHVlXTo6LXdlYmtpdC1wcm9ncmVzcy1iYXIge1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXFxuICAgICAgICAgICAgdG8gdG9wLFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50LFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50IDUwJSxcXG4gICAgICAgICAgICAjZmZmNyA1MCUsXFxuICAgICAgICAgICAgI2ZmZjdcXG4gICAgICAgICksXFxuICAgICAgICBsaW5lYXItZ3JhZGllbnQodmFyKC0tdGhlbWUtY29sb3Itc2NyZWVuKSwgdmFyKC0tdGhlbWUtY29sb3Itc2NyZWVuKSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcXG4gICAgYm94LXNoYWRvdzogMCAwLjEyNXJlbSAwLjI1cmVtICMwMDA3IGluc2V0LCAwIC0wLjEyNXJlbSAwLjI1cmVtICNmZmY3IGluc2V0O1xcbn1cXG5cXG5wcm9ncmVzc1t2YWx1ZV06Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJSwgMS41cmVtIDFyZW0sIDEwMCUgMTAwJTtcXG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMC41cmVtIHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnkpO1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXFxuICAgICAgICAgICAgdG8gdG9wLFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50LFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50IDUwJSxcXG4gICAgICAgICAgICAjZmZmNyA1MCUsXFxuICAgICAgICAgICAgI2ZmZjdcXG4gICAgICAgICksXFxuICAgICAgICBsaW5lYXItZ3JhZGllbnQoXFxuICAgICAgICAgICAgMTM1ZGVnLFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50LFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50IDMzJSxcXG4gICAgICAgICAgICAjMDAwMiAzMyUsXFxuICAgICAgICAgICAgIzAwMDIgNjYlLFxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50IDY2JVxcbiAgICAgICAgKSxcXG4gICAgICAgIGxpbmVhci1ncmFkaWVudChcXG4gICAgICAgICAgICB0byB0b3AsXFxuICAgICAgICAgICAgdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1saWdodCksXFxuICAgICAgICAgICAgdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1kYXJrKVxcbiAgICAgICAgKTtcXG59XFxuXFxucHJvZ3Jlc3NbdmFsdWVdOjotbW96LXByb2dyZXNzLWJhciB7XFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcXG4gICAgICAgICAgICB0byB0b3AsXFxuICAgICAgICAgICAgdHJhbnNwYXJlbnQsXFxuICAgICAgICAgICAgdHJhbnNwYXJlbnQgNTAlLFxcbiAgICAgICAgICAgICNmZmY3IDUwJSxcXG4gICAgICAgICAgICAjZmZmN1xcbiAgICAgICAgKSxcXG4gICAgICAgIGxpbmVhci1ncmFkaWVudChcXG4gICAgICAgICAgICAxMzVkZWcsXFxuICAgICAgICAgICAgdHJhbnNwYXJlbnQsXFxuICAgICAgICAgICAgdHJhbnNwYXJlbnQgMzMlLFxcbiAgICAgICAgICAgICMwMDAyIDMzJSxcXG4gICAgICAgICAgICAjMDAwMiA2NiUsXFxuICAgICAgICAgICAgdHJhbnNwYXJlbnQgNjYlXFxuICAgICAgICApLFxcbiAgICAgICAgbGluZWFyLWdyYWRpZW50KFxcbiAgICAgICAgICAgIHRvIHRvcCxcXG4gICAgICAgICAgICB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5LWxpZ2h0KSxcXG4gICAgICAgICAgICB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5LWRhcmspXFxuICAgICAgICApO1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJSwgMS41cmVtIDFyZW0sIDEwMCUgMTAwJTtcXG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMC41cmVtIHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnkpO1xcbn1cXG5cXG5maWVsZHNldCB7XFxuICAgIG1hcmdpbjogMXJlbSAwO1xcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS10aGVtZS1jb2xvci1zZWN0aW9uKTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXNlY3Rpb24pO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS10aGVtZS1jb2xvci1vbi1zZWN0aW9uLW9wYWNpdHktMzApO1xcbn1cXG5cXG5maWVsZHNldCA+IGxlZ2VuZCB7XFxuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoZW1lLWNvbG9yLXNlY3Rpb24pO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tc2VjdGlvbi1vcGFjaXR5LTUwKTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tdGhlbWUtY29sb3Itb24tc2VjdGlvbi1vcGFjaXR5LTMwKTtcXG4gICAgZm9udC1zaXplOiA4MCU7XFxuICAgIHBhZGRpbmc6IDAuMjVlbSAxZW07XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwMHZ3O1xcbn1cXG5cXG4udGhlbWUtZmxhc2hpbmctdGV4dCB7XFxuICAgIGFuaW1hdGlvbjogdGhlbWUtZmxhc2hpbmctdGV4dC1hbmltIDFzIGluZmluaXRlO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHRoZW1lLWZsYXNoaW5nLXRleHQtYW5pbSB7XFxuICAgIDAlIHtcXG4gICAgICAgIHRleHQtc2hhZG93OiAwIDAgMC4yZW0gdHJhbnNwYXJlbnQ7XFxuICAgIH1cXG4gICAgNTAlIHtcXG4gICAgICAgIHRleHQtc2hhZG93OiAwIDAgMC4yZW0gdmFyKC0tdGhlbWUtY29sb3ItYWNjZW50KTtcXG4gICAgfVxcbiAgICAxMDAlIHtcXG4gICAgICAgIHRleHQtc2hhZG93OiAwIDAgMC4yZW0gdHJhbnNwYXJlbnQ7XFxuICAgIH1cXG59XFxuXFxuKjpmb2N1cyB7XFxuICAgIG91dGxpbmU6IDNweCBkb3R0ZWQgdmFyKC0tdGhlbWUtY29sb3ItYWNjZW50KTtcXG4gICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcXG59XFxuKjpmb2N1czpub3QoOmZvY3VzLXZpc2libGUpIHtcXG4gICAgb3V0bGluZTogbm9uZTtcXG59XFxuXFxuLnRoZW1lLWNvbG9yLXByaW1hcnkge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5KTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnkpO1xcbn1cXG4udGhlbWUtY29sb3ItcHJpbWFyeS1kYXJrIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1kYXJrKTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktZGFyayk7XFxufVxcbi50aGVtZS1jb2xvci1wcmltYXJ5LWxpZ2h0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1saWdodCk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LWxpZ2h0KTtcXG59XFxuLnRoZW1lLWNvbG9yLWFjY2VudCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLWFjY2VudCk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1hY2NlbnQpO1xcbn1cXG4udGhlbWUtY29sb3ItYWNjZW50LWRhcmsge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQtZGFyayk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1hY2NlbnQtZGFyayk7XFxufVxcbi50aGVtZS1jb2xvci1hY2NlbnQtbGlnaHQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQtbGlnaHQpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tYWNjZW50LWxpZ2h0KTtcXG59XFxuLnRoZW1lLWNvbG9yLXNjcmVlbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXNjcmVlbik7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1zY3JlZW4pO1xcbn1cXG4udGhlbWUtY29sb3ItZnJhbWUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1mcmFtZSk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1mcmFtZSk7XFxufVxcbi50aGVtZS1jb2xvci1zZWN0aW9uIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itc2VjdGlvbik7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1zZWN0aW9uKTtcXG59XFxuLnRoZW1lLWNvbG9yLWlucHV0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItaW5wdXQpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24taW5wdXQpO1xcbn1cXG4udGhlbWUtY29sb3ItZXJyb3Ige1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1lcnJvcik7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1lcnJvcik7XFxufVxcblxcbi50aGVtZS1zaGFkb3ctY2FyZCB7XFxuICAgIGJveC1zaGFkb3c6IHZhcigtLXRoZW1lLXNoYWRvdy1jYXJkKTtcXG59XFxuLnRoZW1lLXNoYWRvdy1idXR0b24ge1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctYnV0dG9uKTtcXG59XFxuLnRoZW1lLXNoYWRvdy1oZWFkZXIge1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctaGVhZGVyKTtcXG59XFxuLnRoZW1lLXNoYWRvdy1idXR0b24tcHJlc3NlZCB7XFxuICAgIGJveC1zaGFkb3c6IHZhcigtLXRoZW1lLXNoYWRvdy1idXR0b24tcHJlc3NlZCk7XFxufVxcbi50aGVtZS1zaGFkb3ctZGlhbG9nIHtcXG4gICAgYm94LXNoYWRvdzogdmFyKC0tdGhlbWUtc2hhZG93LWRpYWxvZyk7XFxufVxcblxcbmEsIGE6dmlzaXRlZCB7IGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1saW5rKSB9XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnVpLXZpZXctQ2hlY2tib3hWaWV3IHtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG4gICAgZm9udDogaW5oZXJpdDtcXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgY29sb3I6IGluaGVyaXQ7XFxuICAgIG1hcmdpbjogMC4yNXJlbTtcXG59XFxuXFxuLnVpLXZpZXctQ2hlY2tib3hWaWV3W2Rpc2FibGVkXSB7XFxuICAgIG9wYWNpdHk6IDAuNTtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbi51aS12aWV3LUNoZWNrYm94Vmlldy53aWRlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1hcmdpbi1sZWZ0OiAwO1xcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XFxufVxcblxcbi51aS12aWV3LUNoZWNrYm94VmlldyA+IGRpdi5sYWJlbCB7XFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgICBmbGV4LWdyb3c6IDE7XFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4ycztcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBwYWRkaW5nOiAwIDAuNzVlbTtcXG4gICAgb3JkZXI6IDE7XFxufVxcblxcbi51aS12aWV3LUNoZWNrYm94Vmlldy5yZXZlcnNlID4gZGl2LmxhYmVsIHtcXG4gICAgb3JkZXI6IC0xO1xcbn1cXG5cXG4udWktdmlldy1DaGVja2JveFZpZXcgPiBkaXYucGluIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICB3aWR0aDogMzRweDtcXG4gICAgaGVpZ2h0OiAyMHB4O1xcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcXG4gICAgZmxleC1ncm93OiAwO1xcbiAgICBtYXJnaW46IDAuMTI1cmVtO1xcbiAgICBvcmRlcjogMDtcXG59XFxuXFxuLnVpLXZpZXctQ2hlY2tib3hWaWV3ID4gZGl2LnBpbiA+IGRpdi5iYXIge1xcbiAgICBjb250ZW50OiBcXFwiLlxcXCI7XFxuICAgIGZvbnQtc2l6ZTogMDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDNweDtcXG4gICAgd2lkdGg6IDM0cHg7XFxuICAgIGhlaWdodDogMTRweDtcXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctYnV0dG9uKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1saWdodCk7XFxuICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xcbn1cXG5cXG4udWktdmlldy1DaGVja2JveFZpZXcub2sgPiBkaXYucGluID4gZGl2LmJhciB7XFxuICAgIGZpbHRlcjogbm9uZTtcXG59XFxuXFxuLnVpLXZpZXctQ2hlY2tib3hWaWV3ID4gZGl2LnBpbiA+IGRpdi5idG4ge1xcbiAgICBjb250ZW50OiBcXFwiLlxcXCI7XFxuICAgIGZvbnQtc2l6ZTogMDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgd2lkdGg6IDIwcHg7XFxuICAgIGhlaWdodDogMjBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycywgb3BhY2l0eSAwLjJzO1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctYnV0dG9uKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itc2VjdGlvbik7XFxufVxcblxcbi51aS12aWV3LUNoZWNrYm94Vmlldy5vayA+IGRpdi5waW4gPiBkaXYuYnRuIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1kYXJrKTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE0cHgpO1xcbn1cXG5cXG4udWktdmlldy1DaGVja2JveFZpZXcgPiBoZWFkZXIuaGlkZSB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy91aS92aWV3L2NoZWNrYm94L2NoZWNrYm94LXZpZXcuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksVUFBVTtJQUNWLFlBQVk7SUFDWix1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLG9CQUFvQjtJQUNwQixtQkFBbUI7SUFDbkIsMkJBQTJCO0lBQzNCLHVCQUF1QjtJQUN2QixlQUFlO0lBQ2YsY0FBYztJQUNkLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixvQkFBb0I7SUFDcEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFdBQVc7SUFDWCxjQUFjO0lBQ2QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsd0JBQXdCO0lBQ3hCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsUUFBUTtBQUNaOztBQUVBO0lBQ0ksU0FBUztBQUNiOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsUUFBUTtBQUNaOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsT0FBTztJQUNQLFFBQVE7SUFDUixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixzQ0FBc0M7SUFDdEMsa0RBQWtEO0lBQ2xELHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1AsTUFBTTtJQUNOLFNBQVM7SUFDVCxXQUFXO0lBQ1gsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQix3QkFBd0I7SUFDeEIsd0NBQXdDO0lBQ3hDLHNDQUFzQztJQUN0Qyw0Q0FBNEM7QUFDaEQ7O0FBRUE7SUFDSSxpREFBaUQ7SUFDakQsMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksYUFBYTtBQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudWktdmlldy1DaGVja2JveFZpZXcge1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcbiAgICBmb250OiBpbmhlcml0O1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBjb2xvcjogaW5oZXJpdDtcXG4gICAgbWFyZ2luOiAwLjI1cmVtO1xcbn1cXG5cXG4udWktdmlldy1DaGVja2JveFZpZXdbZGlzYWJsZWRdIHtcXG4gICAgb3BhY2l0eTogMC41O1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcXG59XFxuXFxuLnVpLXZpZXctQ2hlY2tib3hWaWV3LndpZGUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgbWFyZ2luLWxlZnQ6IDA7XFxuICAgIG1hcmdpbi1yaWdodDogMDtcXG59XFxuXFxuLnVpLXZpZXctQ2hlY2tib3hWaWV3ID4gZGl2LmxhYmVsIHtcXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICAgIGZsZXgtZ3JvdzogMTtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIHBhZGRpbmc6IDAgMC43NWVtO1xcbiAgICBvcmRlcjogMTtcXG59XFxuXFxuLnVpLXZpZXctQ2hlY2tib3hWaWV3LnJldmVyc2UgPiBkaXYubGFiZWwge1xcbiAgICBvcmRlcjogLTE7XFxufVxcblxcbi51aS12aWV3LUNoZWNrYm94VmlldyA+IGRpdi5waW4ge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHdpZHRoOiAzNHB4O1xcbiAgICBoZWlnaHQ6IDIwcHg7XFxuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xcbiAgICBmbGV4LWdyb3c6IDA7XFxuICAgIG1hcmdpbjogMC4xMjVyZW07XFxuICAgIG9yZGVyOiAwO1xcbn1cXG5cXG4udWktdmlldy1DaGVja2JveFZpZXcgPiBkaXYucGluID4gZGl2LmJhciB7XFxuICAgIGNvbnRlbnQ6IFxcXCIuXFxcIjtcXG4gICAgZm9udC1zaXplOiAwO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogM3B4O1xcbiAgICB3aWR0aDogMzRweDtcXG4gICAgaGVpZ2h0OiAxNHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA3cHg7XFxuICAgIGJveC1zaGFkb3c6IHZhcigtLXRoZW1lLXNoYWRvdy1idXR0b24pO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5LWxpZ2h0KTtcXG4gICAgZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7XFxufVxcblxcbi51aS12aWV3LUNoZWNrYm94Vmlldy5vayA+IGRpdi5waW4gPiBkaXYuYmFyIHtcXG4gICAgZmlsdGVyOiBub25lO1xcbn1cXG5cXG4udWktdmlldy1DaGVja2JveFZpZXcgPiBkaXYucGluID4gZGl2LmJ0biB7XFxuICAgIGNvbnRlbnQ6IFxcXCIuXFxcIjtcXG4gICAgZm9udC1zaXplOiAwO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICB3aWR0aDogMjBweDtcXG4gICAgaGVpZ2h0OiAyMHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XFxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzLCBvcGFjaXR5IDAuMnM7XFxuICAgIGJveC1zaGFkb3c6IHZhcigtLXRoZW1lLXNoYWRvdy1idXR0b24pO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1zZWN0aW9uKTtcXG59XFxuXFxuLnVpLXZpZXctQ2hlY2tib3hWaWV3Lm9rID4gZGl2LnBpbiA+IGRpdi5idG4ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1wcmltYXJ5LWRhcmspO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTRweCk7XFxufVxcblxcbi51aS12aWV3LUNoZWNrYm94VmlldyA+IGhlYWRlci5oaWRlIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnVpLXZpZXctSWNvblZpZXcge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xcbiAgICBmbGV4OiAwIDAgYXV0bztcXG59XFxuXFxuLnVpLXZpZXctSWNvblZpZXcuY2xpY2thYmxlIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4udWktdmlldy1JY29uVmlldy5jbGlja2FibGU6YWN0aXZlIHtcXG4gICAgZmlsdGVyOiBicmlnaHRuZXNzKDE1MCUpO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOSk7XFxufVxcblxcbi51aS12aWV3LUljb25WaWV3ID4gc3ZnIHtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4udWktdmlldy1JY29uVmlldy5hbmltYXRlIHtcXG4gICAgYW5pbWF0aW9uOiB1aS12aWV3LUljb25WaWV3LWFuaW0gMXMgbGluZWFyIGluZmluaXRlO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHVpLXZpZXctSWNvblZpZXctYW5pbSB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTM2MGRlZyk7IH0gXFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy91aS92aWV3L2ljb24vaWNvbi12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQixVQUFVO0lBQ1Ysb0JBQW9CO0lBQ3BCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxtREFBbUQ7QUFDdkQ7O0FBRUE7RUFDRTtJQUNFLHVCQUF1QixFQUFFO0VBQzNCO0lBQ0UsMEJBQTBCLEVBQUU7QUFDaENcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnVpLXZpZXctSWNvblZpZXcge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xcbiAgICBmbGV4OiAwIDAgYXV0bztcXG59XFxuXFxuLnVpLXZpZXctSWNvblZpZXcuY2xpY2thYmxlIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4udWktdmlldy1JY29uVmlldy5jbGlja2FibGU6YWN0aXZlIHtcXG4gICAgZmlsdGVyOiBicmlnaHRuZXNzKDE1MCUpO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOSk7XFxufVxcblxcbi51aS12aWV3LUljb25WaWV3ID4gc3ZnIHtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4udWktdmlldy1JY29uVmlldy5hbmltYXRlIHtcXG4gICAgYW5pbWF0aW9uOiB1aS12aWV3LUljb25WaWV3LWFuaW0gMXMgbGluZWFyIGluZmluaXRlO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHVpLXZpZXctSWNvblZpZXctYW5pbSB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTM2MGRlZyk7IH0gXFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi51aS12aWV3LWlucHV0LUludGVnZXJWaWV3IHt9XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3VpL3ZpZXcvaW5wdXQvaW50ZWdlci9pbnRlZ2VyLXZpZXcuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLDRCQUE0QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudWktdmlldy1pbnB1dC1JbnRlZ2VyVmlldyB7fVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi51aS12aWV3LWlucHV0LVRleHRWaWV3IHtcXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbiAgICBtYXJnaW46IDAuMjVyZW07XFxufVxcblxcbi51aS12aWV3LWlucHV0LVRleHRWaWV3IGlucHV0IHtcXG4gICAgbGluZS1oZWlnaHQ6IDJyZW07XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLWlucHV0KTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLWlucHV0KTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctYnV0dG9uKTtcXG4gICAgcGFkZGluZzogMCAwLjVyZW07XFxufVxcblxcbi51aS12aWV3LWlucHV0LVRleHRWaWV3LmludmFsaWQgaW5wdXQsXFxuLnVpLXZpZXctaW5wdXQtVGV4dFZpZXcuaW52YWxpZCBpbnB1dDpmb2N1cyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLWVycm9yKTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLWVycm9yKTtcXG59XFxuXFxuLnVpLXZpZXctaW5wdXQtVGV4dFZpZXcgaW5wdXQ6Zm9jdXMge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQtbGlnaHQpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tYWNjZW50LWxpZ2h0KTtcXG59XFxuXFxuLnVpLXZpZXctaW5wdXQtVGV4dFZpZXcgaW5wdXRbZGlzYWJsZWRdIHtcXG4gICAgYm94LXNoYWRvdzogbm9uZTtcXG4gICAgb3V0bGluZTogMXB4IHNvbGlkIHZhcigtLXRoZW1lLWNvbG9yLWlucHV0LW9wYWNpdHktNTApO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xcbiAgICBjb2xvcjogaW5oZXJpdDtcXG59XFxuXFxuLnVpLXZpZXctaW5wdXQtVGV4dFZpZXcud2lkZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcXG4gICAgbWFyZ2luLWxlZnQ6IDA7XFxuICAgIG1hcmdpbi1yaWdodDogMDtcXG59XFxuXFxuLnVpLXZpZXctaW5wdXQtVGV4dFZpZXcud2lkZSAqIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi51aS12aWV3LWlucHV0LVRleHRWaWV3IC5oaWRlIHtcXG4gICAgb3BhY2l0eTogMDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3VpL3ZpZXcvaW5wdXQvdGV4dC90ZXh0LXZpZXcuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksb0JBQW9CO0lBQ3BCLHNCQUFzQjtJQUN0QixvQkFBb0I7SUFDcEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQiwwQ0FBMEM7SUFDMUMsa0NBQWtDO0lBQ2xDLFlBQVk7SUFDWixzQ0FBc0M7SUFDdEMsaUJBQWlCO0FBQ3JCOztBQUVBOztJQUVJLDBDQUEwQztJQUMxQyxrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxpREFBaUQ7SUFDakQseUNBQXlDO0FBQzdDOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHNEQUFzRDtJQUN0RCx5QkFBeUI7SUFDekIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixXQUFXO0lBQ1gsdUJBQXVCO0lBQ3ZCLGNBQWM7SUFDZCxlQUFlO0FBQ25COztBQUVBO0lBQ0ksV0FBVztJQUNYLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFVBQVU7QUFDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudWktdmlldy1pbnB1dC1UZXh0VmlldyB7XFxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcXG4gICAgbWFyZ2luOiAwLjI1cmVtO1xcbn1cXG5cXG4udWktdmlldy1pbnB1dC1UZXh0VmlldyBpbnB1dCB7XFxuICAgIGxpbmUtaGVpZ2h0OiAycmVtO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1pbnB1dCk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1pbnB1dCk7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm94LXNoYWRvdzogdmFyKC0tdGhlbWUtc2hhZG93LWJ1dHRvbik7XFxuICAgIHBhZGRpbmc6IDAgMC41cmVtO1xcbn1cXG5cXG4udWktdmlldy1pbnB1dC1UZXh0Vmlldy5pbnZhbGlkIGlucHV0LFxcbi51aS12aWV3LWlucHV0LVRleHRWaWV3LmludmFsaWQgaW5wdXQ6Zm9jdXMge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1lcnJvcik7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1lcnJvcik7XFxufVxcblxcbi51aS12aWV3LWlucHV0LVRleHRWaWV3IGlucHV0OmZvY3VzIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItYWNjZW50LWxpZ2h0KTtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLWFjY2VudC1saWdodCk7XFxufVxcblxcbi51aS12aWV3LWlucHV0LVRleHRWaWV3IGlucHV0W2Rpc2FibGVkXSB7XFxuICAgIGJveC1zaGFkb3c6IG5vbmU7XFxuICAgIG91dGxpbmU6IDFweCBzb2xpZCB2YXIoLS10aGVtZS1jb2xvci1pbnB1dC1vcGFjaXR5LTUwKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcXG4gICAgY29sb3I6IGluaGVyaXQ7XFxufVxcblxcbi51aS12aWV3LWlucHV0LVRleHRWaWV3LndpZGUge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgYm94LXNpemluZzogY29udGVudC1ib3g7XFxuICAgIG1hcmdpbi1sZWZ0OiAwO1xcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XFxufVxcblxcbi51aS12aWV3LWlucHV0LVRleHRWaWV3LndpZGUgKiB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4udWktdmlldy1pbnB1dC1UZXh0VmlldyAuaGlkZSB7XFxuICAgIG9wYWNpdHk6IDA7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi51aS12aWV3LUxhYmVsVmlldyB7XFxuICAgIG9wYWNpdHk6IC41O1xcbiAgICBmb250LXNpemU6IC44cmVtO1xcbiAgICBsaW5lLWhlaWdodDogMS41cmVtO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDAgLjVyZW07XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbn1cXG5cXG4udWktdmlldy1MYWJlbFZpZXcuZXJyb3Ige1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItZXJyb3IpO1xcbn1cXG5cXG4udWktdmlldy1MYWJlbFZpZXcuaGlkZSB7XFxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3VpL3ZpZXcvbGFiZWwvbGFiZWwtdmlldy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixTQUFTO0lBQ1QsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksK0JBQStCO0FBQ25DOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi51aS12aWV3LUxhYmVsVmlldyB7XFxuICAgIG9wYWNpdHk6IC41O1xcbiAgICBmb250LXNpemU6IC44cmVtO1xcbiAgICBsaW5lLWhlaWdodDogMS41cmVtO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDAgLjVyZW07XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbn1cXG5cXG4udWktdmlldy1MYWJlbFZpZXcuZXJyb3Ige1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItZXJyb3IpO1xcbn1cXG5cXG4udWktdmlldy1MYWJlbFZpZXcuaGlkZSB7XFxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnVpLXZpZXctU2ltcGxlQ29tYm9WaWV3IHtcXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbiAgICBtYXJnaW46IDAuMjVyZW07XFxufVxcblxcbi51aS12aWV3LVNpbXBsZUNvbWJvVmlldy53aWRlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi51aS12aWV3LVNpbXBsZUNvbWJvVmlldyBzZWxlY3Qge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgbGluZS1oZWlnaHQ6IDJyZW07XFxuICAgIGhlaWdodDogMnJlbTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctYnV0dG9uKTtcXG4gICAgcGFkZGluZzogMCAwLjVyZW07XFxuICAgIGFwcGVhcmFuY2U6IG5vbmU7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgei1pbmRleDogMDtcXG59XFxuXFxuLnVpLXZpZXctU2ltcGxlQ29tYm9WaWV3IGRpdi5jb250YWluZXIge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuLnVpLXZpZXctU2ltcGxlQ29tYm9WaWV3IGRpdi5jb250YWluZXIgPiBkaXYuZHJvcGRvd24tYnV0dG9uIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB0b3A6IDA7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIHdpZHRoOiAxLjVyZW07XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktb3BhY2l0eS0yNSk7XFxuICAgIHotaW5kZXg6IDE7XFxufVxcblxcbi51aS12aWV3LVNpbXBsZUNvbWJvVmlldyBzZWxlY3Q6Zm9jdXMge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQtbGlnaHQpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tYWNjZW50LWxpZ2h0KTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3VpL3ZpZXcvc2ltcGxlLWNvbWJvL3NpbXBsZS1jb21iby12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLG9CQUFvQjtJQUNwQixzQkFBc0I7SUFDdEIsb0JBQW9CO0lBQ3BCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsV0FBVztBQUNmOztBQUVBO0lBQ0ksV0FBVztJQUNYLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osWUFBWTtJQUNaLHNDQUFzQztJQUN0QyxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sU0FBUztJQUNULFFBQVE7SUFDUixhQUFhO0lBQ2IsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsK0RBQStEO0lBQy9ELFVBQVU7QUFDZDs7QUFFQTtJQUNJLGlEQUFpRDtJQUNqRCx5Q0FBeUM7QUFDN0NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnVpLXZpZXctU2ltcGxlQ29tYm9WaWV3IHtcXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbiAgICBtYXJnaW46IDAuMjVyZW07XFxufVxcblxcbi51aS12aWV3LVNpbXBsZUNvbWJvVmlldy53aWRlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi51aS12aWV3LVNpbXBsZUNvbWJvVmlldyBzZWxlY3Qge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgbGluZS1oZWlnaHQ6IDJyZW07XFxuICAgIGhlaWdodDogMnJlbTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3gtc2hhZG93OiB2YXIoLS10aGVtZS1zaGFkb3ctYnV0dG9uKTtcXG4gICAgcGFkZGluZzogMCAwLjVyZW07XFxuICAgIGFwcGVhcmFuY2U6IG5vbmU7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgei1pbmRleDogMDtcXG59XFxuXFxuLnVpLXZpZXctU2ltcGxlQ29tYm9WaWV3IGRpdi5jb250YWluZXIge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuXFxuLnVpLXZpZXctU2ltcGxlQ29tYm9WaWV3IGRpdi5jb250YWluZXIgPiBkaXYuZHJvcGRvd24tYnV0dG9uIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB0b3A6IDA7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIHdpZHRoOiAxLjVyZW07XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHZhcigtLXRoZW1lLWNvbG9yLW9uLXByaW1hcnktb3BhY2l0eS0yNSk7XFxuICAgIHotaW5kZXg6IDE7XFxufVxcblxcbi51aS12aWV3LVNpbXBsZUNvbWJvVmlldyBzZWxlY3Q6Zm9jdXMge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQtbGlnaHQpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tYWNjZW50LWxpZ2h0KTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnVpLXZpZXctU2xpZGVyVmlldyB7XFxuICAgIG1pbi13aWR0aDogMnJlbTtcXG4gICAgbWFyZ2luOiAwIDFyZW07XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XFxufVxcblxcbi51aS12aWV3LVNsaWRlclZpZXcud2lkZSB7XFxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAycmVtKTtcXG59XFxuXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3VpL3ZpZXcvc2xpZGVyL3NsaWRlci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLDJCQUEyQjtJQUMzQixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSx3QkFBd0I7QUFDNUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnVpLXZpZXctU2xpZGVyVmlldyB7XFxuICAgIG1pbi13aWR0aDogMnJlbTtcXG4gICAgbWFyZ2luOiAwIDFyZW07XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XFxufVxcblxcbi51aS12aWV3LVNsaWRlclZpZXcud2lkZSB7XFxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAycmVtKTtcXG59XFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnVpLXZpZXctVGFic3RyaXBWaWV3IHtcXG4gICAgLS10YWJzdHJpcC1iZzogdmFyKC0tdGhlbWUtY29sb3Itc2VjdGlvbik7XFxuICAgIC0tdGFic3RyaXAtZmc6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXNlY3Rpb24pO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbiAgICBnYXA6IDA7XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgY29sb3I6IGluaGVyaXQ7XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciA+ICoge1xcbiAgICBmbGV4OiAxIDEgYXV0bztcXG59XFxuXFxuLnVpLXZpZXctVGFic3RyaXBWaWV3ID4gaGVhZGVyID4gYnV0dG9uLFxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciA+IGJ1dHRvbjpob3ZlciB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICBmb250OiBpbmhlcml0O1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbSAwLjVyZW0gMCAwO1xcbiAgICBmb250LXZhcmlhbnQ6IHNtYWxsLWNhcHM7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxuICAgIGhlaWdodDogMi4yNXJlbTtcXG4gICAgcGFkZGluZzogMCAxcmVtO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJveC1zaGFkb3c6IG5vbmU7XFxuICAgIHRyYW5zaXRpb246IGZpbHRlciAwLjJzO1xcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMTAwJSk7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciA+IGJ1dHRvbjphY3RpdmUge1xcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMTUwJSk7XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciA+IGJ1dHRvbi5zZWxlY3RlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRhYnN0cmlwLWJnKTtcXG4gICAgY29sb3I6IHZhcigtLXRhYnN0cmlwLWZnKTtcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG59XFxuXFxuLnVpLXZpZXctVGFic3RyaXBWaWV3ID4gbWFpbiB7XFxuICAgIGZsZXg6IDEgMSBhdXRvO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10YWJzdHJpcC1iZyk7XFxuICAgIGNvbG9yOiB2YXIoLS10YWJzdHJpcC1mZyk7XFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IG1haW4gPiBkaXYge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4udWktdmlldy1UYWJzdHJpcFZpZXcgPiBtYWluID4gZGl2LnNlbGVjdGVkIHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy91aS92aWV3L3RhYnN0cmlwL3RhYnN0cmlwLXZpZXcuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0kseUNBQXlDO0lBQ3pDLDRDQUE0QztJQUM1QyxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLDJCQUEyQjtJQUMzQixvQkFBb0I7SUFDcEIsTUFBTTtBQUNWOztBQUVBO0lBQ0ksY0FBYztJQUNkLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsMkJBQTJCO0lBQzNCLHFCQUFxQjtJQUNyQixTQUFTO0lBQ1QsVUFBVTtJQUNWLDZCQUE2QjtJQUM3QixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTs7SUFFSSxjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGdDQUFnQztJQUNoQyx3QkFBd0I7SUFDeEIsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLFNBQVM7SUFDVCx1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0ksb0NBQW9DO0lBQ3BDLHlCQUF5QjtJQUN6QixvQkFBb0I7SUFDcEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxvQ0FBb0M7SUFDcEMseUJBQXlCO0lBQ3pCLGVBQWU7SUFDZixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnVpLXZpZXctVGFic3RyaXBWaWV3IHtcXG4gICAgLS10YWJzdHJpcC1iZzogdmFyKC0tdGhlbWUtY29sb3Itc2VjdGlvbik7XFxuICAgIC0tdGFic3RyaXAtZmc6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXNlY3Rpb24pO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbiAgICBnYXA6IDA7XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgY29sb3I6IGluaGVyaXQ7XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciA+ICoge1xcbiAgICBmbGV4OiAxIDEgYXV0bztcXG59XFxuXFxuLnVpLXZpZXctVGFic3RyaXBWaWV3ID4gaGVhZGVyID4gYnV0dG9uLFxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciA+IGJ1dHRvbjpob3ZlciB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICBmb250OiBpbmhlcml0O1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbSAwLjVyZW0gMCAwO1xcbiAgICBmb250LXZhcmlhbnQ6IHNtYWxsLWNhcHM7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxuICAgIGhlaWdodDogMi4yNXJlbTtcXG4gICAgcGFkZGluZzogMCAxcmVtO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJveC1zaGFkb3c6IG5vbmU7XFxuICAgIHRyYW5zaXRpb246IGZpbHRlciAwLjJzO1xcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMTAwJSk7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciA+IGJ1dHRvbjphY3RpdmUge1xcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMTUwJSk7XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IGhlYWRlciA+IGJ1dHRvbi5zZWxlY3RlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRhYnN0cmlwLWJnKTtcXG4gICAgY29sb3I6IHZhcigtLXRhYnN0cmlwLWZnKTtcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG59XFxuXFxuLnVpLXZpZXctVGFic3RyaXBWaWV3ID4gbWFpbiB7XFxuICAgIGZsZXg6IDEgMSBhdXRvO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10YWJzdHJpcC1iZyk7XFxuICAgIGNvbG9yOiB2YXIoLS10YWJzdHJpcC1mZyk7XFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi51aS12aWV3LVRhYnN0cmlwVmlldyA+IG1haW4gPiBkaXYge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4udWktdmlldy1UYWJzdHJpcFZpZXcgPiBtYWluID4gZGl2LnNlbGVjdGVkIHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImRpdi52aWV3LUNvZGVFZGl0b3JWaWV3IHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIGZvbnQtZmFtaWx5OiBDb25zb2xhcywgTW9uYWNvLCBcXFwiQW5kYWxlIE1vbm9cXFwiLCBcXFwiVWJ1bnR1IE1vbm9cXFwiLCBtb25vc3BhY2U7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG4gICAgY29sb3I6ICNmZmZiO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xcbiAgICBwYWRkaW5nOiAxZW07XFxuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XFxufVxcblxcbmRpdi52aWV3LUNvZGVFZGl0b3JWaWV3IHByZSAuY29tbWVudCB7XFxuICAgIGNvbG9yOiAjZmZmNztcXG59XFxuXFxuZGl2LnZpZXctQ29kZUVkaXRvclZpZXcgcHJlIC5udW1iZXIge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcXG59XFxuXFxuZGl2LnZpZXctQ29kZUVkaXRvclZpZXcgcHJlIC50eXBlIHtcXG4gICAgY29sb3I6ICNjZjk7XFxufVxcblxcbmRpdi52aWV3LUNvZGVFZGl0b3JWaWV3IHByZSAua2V5d29yZCB7XFxuICAgIGNvbG9yOiAjMDdmO1xcbn1cXG5cXG5kaXYudmlldy1Db2RlRWRpdG9yVmlldyBwcmUgLmdsb2JhbCB7XFxuICAgIGNvbG9yOiAjZjcwO1xcbn1cXG5cXG5kaXYudmlldy1Db2RlRWRpdG9yVmlldyBwcmUgLmZ1bmN0aW9uIHtcXG4gICAgY29sb3I6ICNlZDA7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvdmlldy9jb2RlLWVkaXRvci9jb2RlLWVkaXRvci12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1Qsc0VBQXNFO0lBQ3RFLGVBQWU7SUFDZixZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztJQUNYLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxpQkFBaUI7QUFDckJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiZGl2LnZpZXctQ29kZUVkaXRvclZpZXcge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCBNb25hY28sIFxcXCJBbmRhbGUgTW9ub1xcXCIsIFxcXCJVYnVudHUgTW9ub1xcXCIsIG1vbm9zcGFjZTtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbiAgICBjb2xvcjogI2ZmZmI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XFxuICAgIHBhZGRpbmc6IDFlbTtcXG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcXG59XFxuXFxuZGl2LnZpZXctQ29kZUVkaXRvclZpZXcgcHJlIC5jb21tZW50IHtcXG4gICAgY29sb3I6ICNmZmY3O1xcbn1cXG5cXG5kaXYudmlldy1Db2RlRWRpdG9yVmlldyBwcmUgLm51bWJlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xcbn1cXG5cXG5kaXYudmlldy1Db2RlRWRpdG9yVmlldyBwcmUgLnR5cGUge1xcbiAgICBjb2xvcjogI2NmOTtcXG59XFxuXFxuZGl2LnZpZXctQ29kZUVkaXRvclZpZXcgcHJlIC5rZXl3b3JkIHtcXG4gICAgY29sb3I6ICMwN2Y7XFxufVxcblxcbmRpdi52aWV3LUNvZGVFZGl0b3JWaWV3IHByZSAuZ2xvYmFsIHtcXG4gICAgY29sb3I6ICNmNzA7XFxufVxcblxcbmRpdi52aWV3LUNvZGVFZGl0b3JWaWV3IHByZSAuZnVuY3Rpb24ge1xcbiAgICBjb2xvcjogI2VkMDtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi52aWV3LUNvZGVWaWV3IHtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxuICAgIGJvcmRlci1yYWRpdXM6IC41cmVtO1xcbiAgICBtYXJnaW46IDJweDtcXG4gICAgbWF4LXdpZHRoOiBjYWxjKDEwMHZ3IC0gMWVtKTtcXG4gICAgbWFyZ2luOiAxZW0gMDtcXG59XFxuXFxuLnZpZXctQ29kZVZpZXcgcHJlIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBmb250LXNpemU6IDgwJTtcXG59XFxuXFxuLnZpZXctQ29kZVZpZXcuZXhwYW5kZWQgcHJlIHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcXG59XFxuXFxuLnZpZXctQ29kZVZpZXcgcHJlIGNvZGUge1xcbiAgICBiYWNrZ3JvdW5kOiAjZWVlO1xcbn1cXG5cXG4udmlldy1Db2RlVmlldyA+IGhlYWRlciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMCAuNWVtO1xcbiAgICBoZWlnaHQ6IDJlbTtcXG59XFxuXFxuLnZpZXctQ29kZVZpZXcgPiBoZWFkZXIgPiBkaXYubGFiZWwge1xcbiAgICBmbGV4OiAxIDEgYXV0bztcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvdmlldy9jb2RlL2NvZGUtdmlldy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLFdBQVc7SUFDWCw0QkFBNEI7SUFDNUIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixTQUFTO0lBQ1QsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxlQUFlO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi52aWV3LUNvZGVWaWV3IHtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxuICAgIGJvcmRlci1yYWRpdXM6IC41cmVtO1xcbiAgICBtYXJnaW46IDJweDtcXG4gICAgbWF4LXdpZHRoOiBjYWxjKDEwMHZ3IC0gMWVtKTtcXG4gICAgbWFyZ2luOiAxZW0gMDtcXG59XFxuXFxuLnZpZXctQ29kZVZpZXcgcHJlIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBmb250LXNpemU6IDgwJTtcXG59XFxuXFxuLnZpZXctQ29kZVZpZXcuZXhwYW5kZWQgcHJlIHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcXG59XFxuXFxuLnZpZXctQ29kZVZpZXcgcHJlIGNvZGUge1xcbiAgICBiYWNrZ3JvdW5kOiAjZWVlO1xcbn1cXG5cXG4udmlldy1Db2RlVmlldyA+IGhlYWRlciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMCAuNWVtO1xcbiAgICBoZWlnaHQ6IDJlbTtcXG59XFxuXFxuLnZpZXctQ29kZVZpZXcgPiBoZWFkZXIgPiBkaXYubGFiZWwge1xcbiAgICBmbGV4OiAxIDEgYXV0bztcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudmlldy1GYWxsYmFja1ZpZXcge31cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvdmlldy9mYWxsYmFjay9mYWxsYmFjay12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxvQkFBb0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnZpZXctRmFsbGJhY2tWaWV3IHt9XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnZpZXctbWFya2Rvd24tQ29kZVZpZXcgY29kZSB7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1hY2NlbnQtbGlnaHQpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQtbGlnaHQpO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvdmlldy9tYXJrZG93bi9jb2RlL2NvZGUtdmlldy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSx5Q0FBeUM7SUFDekMsaURBQWlEO0FBQ3JEXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi52aWV3LW1hcmtkb3duLUNvZGVWaWV3IGNvZGUge1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tYWNjZW50LWxpZ2h0KTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItYWNjZW50LWxpZ2h0KTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnZpZXctTWFya2Rvd25WaWV3IHtcXG4gICAgcGFkZGluZzogMWVtO1xcbiAgICBtYXJnaW46IDAuNWVtIDA7XFxufVxcblxcbi52aWV3LU1hcmtkb3duVmlldyB0YWJsZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXNlY3Rpb24pO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tc2VjdGlvbik7XFxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxufVxcblxcbi52aWV3LU1hcmtkb3duVmlldyB0YWJsZSB0aCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLXByaW1hcnktbGlnaHQpO1xcbiAgICBjb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itb24tcHJpbWFyeS1saWdodCk7XFxufVxcblxcbi52aWV3LU1hcmtkb3duVmlldyB0YWJsZSB0aCxcXG4udmlldy1NYXJrZG93blZpZXcgdGFibGUgdGQge1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS10aGVtZS1jb2xvci1vbi1mcmFtZSk7XFxuICAgIHBhZGRpbmc6IDAuMjVlbSAwLjVlbTtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4udmlldy1NYXJrZG93blZpZXcgY29kZSB7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1hY2NlbnQtbGlnaHQpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1hY2NlbnQtbGlnaHQpO1xcbn1cXG5cXG4udmlldy1NYXJrZG93blZpZXcgYmxvY2txdW90ZSB7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1zZWN0aW9uKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itc2VjdGlvbik7XFxuICAgIHBhZGRpbmc6IDFlbTtcXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvdmlldy9tYXJrZG93bi9tYXJrZG93bi12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksNENBQTRDO0lBQzVDLG9DQUFvQztJQUNwQyx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxrREFBa0Q7SUFDbEQsMENBQTBDO0FBQzlDOztBQUVBOztJQUVJLDZDQUE2QztJQUM3QyxxQkFBcUI7SUFDckIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kseUNBQXlDO0lBQ3pDLGlEQUFpRDtBQUNyRDs7QUFFQTtJQUNJLG9DQUFvQztJQUNwQyw0Q0FBNEM7SUFDNUMsWUFBWTtJQUNaLGtCQUFrQjtBQUN0QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudmlldy1NYXJrZG93blZpZXcge1xcbiAgICBwYWRkaW5nOiAxZW07XFxuICAgIG1hcmdpbjogMC41ZW0gMDtcXG59XFxuXFxuLnZpZXctTWFya2Rvd25WaWV3IHRhYmxlIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3Itc2VjdGlvbik7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1zZWN0aW9uKTtcXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG59XFxuXFxuLnZpZXctTWFya2Rvd25WaWV3IHRhYmxlIHRoIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtY29sb3ItcHJpbWFyeS1saWdodCk7XFxuICAgIGNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1vbi1wcmltYXJ5LWxpZ2h0KTtcXG59XFxuXFxuLnZpZXctTWFya2Rvd25WaWV3IHRhYmxlIHRoLFxcbi52aWV3LU1hcmtkb3duVmlldyB0YWJsZSB0ZCB7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXRoZW1lLWNvbG9yLW9uLWZyYW1lKTtcXG4gICAgcGFkZGluZzogMC4yNWVtIDAuNWVtO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi52aWV3LU1hcmtkb3duVmlldyBjb2RlIHtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLWFjY2VudC1saWdodCk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLWFjY2VudC1saWdodCk7XFxufVxcblxcbi52aWV3LU1hcmtkb3duVmlldyBibG9ja3F1b3RlIHtcXG4gICAgY29sb3I6IHZhcigtLXRoZW1lLWNvbG9yLW9uLXNlY3Rpb24pO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS10aGVtZS1jb2xvci1zZWN0aW9uKTtcXG4gICAgcGFkZGluZzogMWVtO1xcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi52aWV3LVNjZW5lVmlldyB7XFxuICAgIG1hcmdpbjogMC41ZW07XFxufVxcblxcbi52aWV3LVNjZW5lVmlldyA+IGZvb3RlcntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxufSAgIFxcblxcbi52aWV3LVNjZW5lVmlldyA+IGNhbnZhcyB7XFxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxZW0pO1xcbiAgICBtYXgtd2lkdGg6IGNhbGMoMTAwdncgLSAxcmVtKTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogNDgwcHg7XFxuICAgIG1heC1oZWlnaHQ6IDkwdm1pbjtcXG59XFxuXFxuLnZpZXctU2NlbmVWaWV3LnNtYWxsID4gY2FudmFzIHtcXG4gICAgaGVpZ2h0OiAyNDBweDtcXG59XFxuXFxuLnZpZXctU2NlbmVWaWV3ID4gY2FudmFzLmZ1bGxzY3JlZW4sXFxuLnZpZXctU2NlbmVWaWV3LnNtYWxsID4gY2FudmFzLmZ1bGxzY3JlZW4ge1xcbiAgICB6LWluZGV4OiA5OTk5OTk7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICBib3R0b206IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIG1heC13aWR0aDogbm9uZTtcXG4gICAgbWF4LWhlaWdodDogbm9uZTtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3ZpZXcvc2NlbmUvc2NlbmUtdmlldy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw4QkFBOEI7SUFDOUIsbUJBQW1CO0lBQ25CLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsNkJBQTZCO0lBQzdCLFdBQVc7SUFDWCxhQUFhO0lBQ2Isa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTs7SUFFSSxlQUFlO0lBQ2YsZUFBZTtJQUNmLE9BQU87SUFDUCxNQUFNO0lBQ04sU0FBUztJQUNULFFBQVE7SUFDUixXQUFXO0lBQ1gsWUFBWTtJQUNaLFNBQVM7SUFDVCxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi52aWV3LVNjZW5lVmlldyB7XFxuICAgIG1hcmdpbjogMC41ZW07XFxufVxcblxcbi52aWV3LVNjZW5lVmlldyA+IGZvb3RlcntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxufSAgIFxcblxcbi52aWV3LVNjZW5lVmlldyA+IGNhbnZhcyB7XFxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxZW0pO1xcbiAgICBtYXgtd2lkdGg6IGNhbGMoMTAwdncgLSAxcmVtKTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogNDgwcHg7XFxuICAgIG1heC1oZWlnaHQ6IDkwdm1pbjtcXG59XFxuXFxuLnZpZXctU2NlbmVWaWV3LnNtYWxsID4gY2FudmFzIHtcXG4gICAgaGVpZ2h0OiAyNDBweDtcXG59XFxuXFxuLnZpZXctU2NlbmVWaWV3ID4gY2FudmFzLmZ1bGxzY3JlZW4sXFxuLnZpZXctU2NlbmVWaWV3LnNtYWxsID4gY2FudmFzLmZ1bGxzY3JlZW4ge1xcbiAgICB6LWluZGV4OiA5OTk5OTk7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICBib3R0b206IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIG1heC13aWR0aDogbm9uZTtcXG4gICAgbWF4LWhlaWdodDogbm9uZTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnZpZXctU2hhZGVyQ29kZUVkaXRvclZpZXcge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xcbiAgICBnYXA6IDA7XFxufVxcblxcbi52aWV3LVNoYWRlckNvZGVFZGl0b3JWaWV3ID4gLmNvZGUtZWRpdG9yIHtcXG4gICAgZmxleDogMSAxIGF1dG87XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbn1cXG5cXG4udmlldy1TaGFkZXJDb2RlRWRpdG9yVmlldyA+IGhlYWRlciB7XFxuICAgIHBhZGRpbmc6IC4yNWVtIDFlbTtcXG4gICAgYm9yZGVyLXJhZGl1czogLjVlbSAuNWVtIDAgMDtcXG59XFxuXFxuLnZpZXctU2hhZGVyQ29kZUVkaXRvclZpZXcgPiBoZWFkZXIsXFxuLnZpZXctU2hhZGVyQ29kZUVkaXRvclZpZXcgPiBwcmUudGhlbWUtY29sb3ItZXJyb3Ige1xcbiAgICBmbGV4OiAwIDAgYXV0bztcXG59XFxuXFxuLnZpZXctU2hhZGVyQ29kZUVkaXRvclZpZXcgPiBwcmUudGhlbWUtY29sb3ItZXJyb3Ige1xcbiAgICBmb250LXNpemU6IDgwJTtcXG4gICAgcGFkZGluZzogMWVtO1xcbiAgICBtYXgtaGVpZ2h0OiA0MHZoO1xcbiAgICBvdmVyZmxvdzogYXV0bztcXG4gICAgbWFyZ2luOiAwO1xcbiAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy92aWV3L3NoYWRlci1jb2RlLWVkaXRvci9zaGFkZXItY29kZS1lZGl0b3Itdmlldy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLDJCQUEyQjtJQUMzQixvQkFBb0I7SUFDcEIsTUFBTTtBQUNWOztBQUVBO0lBQ0ksY0FBYztJQUNkLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsNEJBQTRCO0FBQ2hDOztBQUVBOztJQUVJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsU0FBUztJQUNULHFCQUFxQjtBQUN6QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudmlldy1TaGFkZXJDb2RlRWRpdG9yVmlldyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XFxuICAgIGdhcDogMDtcXG59XFxuXFxuLnZpZXctU2hhZGVyQ29kZUVkaXRvclZpZXcgPiAuY29kZS1lZGl0b3Ige1xcbiAgICBmbGV4OiAxIDEgYXV0bztcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi52aWV3LVNoYWRlckNvZGVFZGl0b3JWaWV3ID4gaGVhZGVyIHtcXG4gICAgcGFkZGluZzogLjI1ZW0gMWVtO1xcbiAgICBib3JkZXItcmFkaXVzOiAuNWVtIC41ZW0gMCAwO1xcbn1cXG5cXG4udmlldy1TaGFkZXJDb2RlRWRpdG9yVmlldyA+IGhlYWRlcixcXG4udmlldy1TaGFkZXJDb2RlRWRpdG9yVmlldyA+IHByZS50aGVtZS1jb2xvci1lcnJvciB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbn1cXG5cXG4udmlldy1TaGFkZXJDb2RlRWRpdG9yVmlldyA+IHByZS50aGVtZS1jb2xvci1lcnJvciB7XFxuICAgIGZvbnQtc2l6ZTogODAlO1xcbiAgICBwYWRkaW5nOiAxZW07XFxuICAgIG1heC1oZWlnaHQ6IDQwdmg7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vYXBwLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL2FwcC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL2Rvc2lzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL2Rvc2lzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vaW5kZXguY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vaW5kZXguY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9iYXNpYy1wZXJzcGVjdGl2ZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9iYXNpYy1wZXJzcGVjdGl2ZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL2F0dHJpYnV0ZXMtdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9hdHRyaWJ1dGVzLXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi93ZWJnbDJjb250ZXh0LXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vd2ViZ2wyY29udGV4dC12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vd2VsY29tZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi93ZWxjb21lLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vY29kZS1nZW5lcmF0b3Itdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9jb2RlLWdlbmVyYXRvci12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vY29kZS1vcHRpb25zLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vY29kZS1vcHRpb25zLXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9wYWludGVyLXRvb2xzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3BhaW50ZXItdG9vbHMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9wcm9ncmFtLWNvZGUtZWRpdG9yLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vcHJvZ3JhbS1jb2RlLWVkaXRvci12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vdGVzdC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi90ZXN0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vdGhlbWUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vdGhlbWUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9jaGVja2JveC12aWV3LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL2NoZWNrYm94LXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9pY29uLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vaWNvbi12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vaW50ZWdlci12aWV3LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL2ludGVnZXItdmlldy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3RleHQtdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi90ZXh0LXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9sYWJlbC12aWV3LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL2xhYmVsLXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zaW1wbGUtY29tYm8tdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zaW1wbGUtY29tYm8tdmlldy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3NsaWRlci5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9zbGlkZXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi90YWJzdHJpcC12aWV3LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3RhYnN0cmlwLXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9jb2RlLWVkaXRvci12aWV3LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL2NvZGUtZWRpdG9yLXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9jb2RlLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vY29kZS12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vZmFsbGJhY2stdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMV0hLi9mYWxsYmFjay12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vY29kZS12aWV3LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL2NvZGUtdmlldy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL21hcmtkb3duLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vbWFya2Rvd24tdmlldy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3NjZW5lLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzFdIS4vc2NlbmUtdmlldy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3NoYWRlci1jb2RlLWVkaXRvci12aWV3LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsxXSEuL3NoYWRlci1jb2RlLWVkaXRvci12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBGYWxsYmFjayBmcm9tIFwiQC92aWV3L2ZhbGxiYWNrXCJcbmltcG9ydCBJY29uIGZyb20gXCJAL3VpL3ZpZXcvaWNvblwiXG5pbXBvcnQgUmVhY3QsIHsgU3VzcGVuc2UgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgdXNlSGFzaCB9IGZyb20gXCIuLi91aS9ob29rcy9oYXNoXCJcbmltcG9ydCBcIi4vYXBwLmNzc1wiXG5cbmNvbnN0IFRlc3QgPSBSZWFjdC5sYXp5KCgpID0+IGltcG9ydChcIkAvdGVzdFwiKSlcbmNvbnN0IFdlbGNvbWVBcnRpY2xlID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCJAL3BhZ2VzL2FydGljbGVzL3dlbGNvbWVcIikpXG5jb25zdCBXZWJnbDJDb250ZXh0QXJ0aWNsZSA9IFJlYWN0LmxhenkoKCk9PmltcG9ydChcIkAvcGFnZXMvYXJ0aWNsZXMvaW50cm8vd2ViZ2wyY29udGV4dFwiKSlcbmNvbnN0IEF0dHJpYnV0ZXNBcnRpY2xlID0gUmVhY3QubGF6eSgoKT0+aW1wb3J0KFwiQC9wYWdlcy9hcnRpY2xlcy9pbnRyby9hdHRyaWJ1dGVzXCIpKVxuY29uc3QgSW5zdGFuY2VzQXJ0aWNsZSA9IFJlYWN0LmxhenkoKCk9PmltcG9ydChcIkAvcGFnZXMvYXJ0aWNsZXMvaW5zdGFuY2VzXCIpKVxuY29uc3QgQmFzaWNQZXJzcGVjdGl2ZUFydGljbGUgPSBSZWFjdC5sYXp5KFxuICAgICgpID0+IGltcG9ydChcIkAvcGFnZXMvYXJ0aWNsZXMvYmFzaWMtcGVyc3BlY3RpdmVcIilcbilcbmNvbnN0IFBhaW50ZXJUb29sID0gUmVhY3QubGF6eSgoKSA9PiBpbXBvcnQoXCJAL3BhZ2VzL3Rvb2xzL3BhaW50ZXJcIikpXG5cbmNvbnN0IFBBR0VTOiB7IFtoYXNoOiBzdHJpbmddOiBKU1guRWxlbWVudCB9ID0ge1xuICAgIFwiI3Rlc3RcIjogPFRlc3QgLz4sXG4gICAgXCIjYXJ0aWNsZS93ZWJnbDJjb250ZXh0XCI6IDxXZWJnbDJDb250ZXh0QXJ0aWNsZSAvPixcbiAgICBcIiNhcnRpY2xlL2F0dHJpYnV0ZXNcIjogPEF0dHJpYnV0ZXNBcnRpY2xlIC8+LFxuICAgIFwiI2FydGljbGUvYmFzaWMtcGVyc3BlY3RpdmVcIjogPEJhc2ljUGVyc3BlY3RpdmVBcnRpY2xlIC8+LFxuICAgIFwiI2FydGljbGUvaW5zdGFuY2VzXCI6IDxJbnN0YW5jZXNBcnRpY2xlIC8+LFxuICAgIFwiI3Rvb2wvcGFpbnRlclwiOiA8UGFpbnRlclRvb2wgLz4sXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCgpIHtcbiAgICBjb25zdCBoYXNoID0gdXNlSGFzaCgpXG4gICAgY29uc3QgW3Nob3dOYXYsIHNldFNob3dOYXZdID0gUmVhY3QudXNlU3RhdGUodHJ1ZSlcbiAgICBjb25zdCBwYWdlID0gUEFHRVNbaGFzaF1cbiAgICBjb25zdCBuYXZDbGFzc05hbWUgPSAocGFnZSA/IHNob3dOYXYgOiB0cnVlKSA/IFwic2hvd1wiIDogXCJoaWRlXCJcbiAgICBjb25zb2xlLmxvZyhcIvCfmoAgW2FwcF0gcGFnZSwgbmF2Q2xhc3NOYW1lID0gXCIsIHBhZ2UsIG5hdkNsYXNzTmFtZSkgLy8gQEZJWE1FOiBSZW1vdmUgdGhpcyBsaW5lIHdyaXR0ZW4gb24gMjAyMi0wNC0wMSBhdCAxNTozNlxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiQXBwXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJvZHlcIj5cbiAgICAgICAgICAgICAgICA8U3VzcGVuc2UgZmFsbGJhY2s9ezxGYWxsYmFjayAvPn0+XG4gICAgICAgICAgICAgICAgICAgIHtwYWdlID8/IDxXZWxjb21lQXJ0aWNsZSAvPn1cbiAgICAgICAgICAgICAgICA8L1N1c3BlbnNlPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8bmF2XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgJHtuYXZDbGFzc05hbWV9IHRoZW1lLXNoYWRvdy1oZWFkZXIgdGhlbWUtY29sb3ItcHJpbWFyeS1kYXJrYH1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiAod2luZG93LmxvY2F0aW9uLmhhc2ggPSBcIiNcIil9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPEljb24gbmFtZT1cIm1lbnVcIiAvPlxuICAgICAgICAgICAgICAgIDxkaXY+V2ViR0wyIEV4cGVyaW1lbnRzPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdj48L2Rpdj5cbiAgICAgICAgICAgIDwvbmF2PlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi4vYXBwXCJcbiIsImltcG9ydCBBcHAgZnJvbSBcIi4vYXBwXCJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIlxuaW1wb3J0IFRoZW1lIGZyb20gXCJAL3VpL3RoZW1lXCJcbmltcG9ydCBcIi4vaW5kZXguY3NzXCJcbmltcG9ydCBcIi4vZm9udHMvZG9zaXMuY3NzXCJcblxuZnVuY3Rpb24gc3RhcnQoKSB7XG4gICAgVGhlbWUuYXBwbHkoe1xuICAgICAgICBjb2xvcnM6IHtcbiAgICAgICAgICAgIGJsYWNrOiBcIiMwMDBcIixcbiAgICAgICAgICAgIHdoaXRlOiBcIiNmZmZcIixcbiAgICAgICAgICAgIGVycm9yOiBcIiNmMzBcIixcbiAgICAgICAgICAgIGlucHV0OiBcIiNmZmZcIixcbiAgICAgICAgICAgIHNlY3Rpb246IFwiI2VlZVwiLFxuICAgICAgICAgICAgZnJhbWU6IFwiI2RkZFwiLFxuICAgICAgICAgICAgc2NyZWVuOiBcIiNhYWFcIixcbiAgICAgICAgICAgIHByaW1hcnk6IFRoZW1lLnNoYWRlKFwiIzljZFwiKSxcbiAgICAgICAgICAgIGFjY2VudDogVGhlbWUuc2hhZGUoXCIjZjgwXCIpXG4gICAgICAgIH1cbiAgICB9KVxuICAgIGNvbnNvbGUubG9nKFwiVkVSU0lPTlwiLCBSZWFjdC52ZXJzaW9uKVxuICAgIC8vIFVzZSB0aGUgZm9sbG93aW5nIGFzIHNvb24gYXMgVHlwZXMgYXJlIGF2YWlsYWJsZSBmb3IgUmVhY3QgMTguXG4gICAgLy8gUmVhY3RET00uY3JlYXRlUm9vdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlJPT1RcIikpLnJlbmRlcihcbiAgICAvLyAgICAgPFJlYWN0LlN0cmljdE1vZGU+XG4gICAgLy8gICAgICAgICA8QXBwIC8+XG4gICAgLy8gICAgIDwvUmVhY3QuU3RyaWN0TW9kZT5cbiAgICAvLyApXG4gICAgLy8gQ3JlYXRlIG1haW4gY29tcG9uZW50LlxuICAgIFJlYWN0RE9NLnJlbmRlcihcbiAgICAgICAgPFJlYWN0LlN0cmljdE1vZGU+XG4gICAgICAgICAgICA8QXBwIC8+XG4gICAgICAgIDwvUmVhY3QuU3RyaWN0TW9kZT4sXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicm9vdFwiKVxuICAgIClcblxuICAgIC8vIFJlbW92ZSBzcGxhc2ggc2NyZWVuLlxuICAgIHJlbW92ZVNwbGFzaFNjcmVlbigpXG59XG5cbmZ1bmN0aW9uIHJlbW92ZVNwbGFzaFNjcmVlbigpIHtcbiAgICBjb25zdCBTUExBU0hfVkFOSVNISU5HX0RFTEFZID0gOTAwXG4gICAgY29uc3Qgc3BsYXNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RnZC1sb2dvJylcbiAgICBpZiAoIXNwbGFzaCkgcmV0dXJuXG5cbiAgICBzcGxhc2guY2xhc3NMaXN0LmFkZCgndmFuaXNoJylcbiAgICB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IHNwbGFzaC5wYXJlbnROb2RlXG4gICAgICAgIGlmICghcGFyZW50KSByZXR1cm5cblxuICAgICAgICBwYXJlbnQucmVtb3ZlQ2hpbGQoc3BsYXNoKVxuICAgIH0sIFNQTEFTSF9WQU5JU0hJTkdfREVMQVkpXG59XG5cbnN0YXJ0KClcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgQ29kZSBmcm9tIFwiQC92aWV3L2NvZGVcIlxuaW1wb3J0IENvbnRlbnQgZnJvbSBcIi4vY29udGVudC5tZFwiXG5pbXBvcnQgRnJhZ1NoYWRlciBmcm9tIFwiLi9iYXNpYy1wZXJzcGVjdGl2ZS5mcmFnXCJcbmltcG9ydCBJbWFnZVVSTCBmcm9tIFwiLi9tYXAud2VicFwiXG5pbXBvcnQgTWFya2Rvd24gZnJvbSBcIkAvdmlldy9tYXJrZG93blwiXG5pbXBvcnQgUGFpbnRlciBmcm9tIFwiLi9wYWludGVyXCJcbmltcG9ydCBTY2VuZSwgeyBQYWludEZ1bmMgfSBmcm9tIFwiQC92aWV3L3NjZW5lXCJcbmltcG9ydCBTbGlkZXIgZnJvbSBcIkAvdWkvdmlldy9zbGlkZXJcIlxuaW1wb3J0IFZlcnRTaGFkZXIgZnJvbSBcIi4vYmFzaWMtcGVyc3BlY3RpdmUudmVydFwiXG5pbXBvcnQgXCIuL2Jhc2ljLXBlcnNwZWN0aXZlLmNzc1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFzaWNQZXJzcGVjdGl2ZVByb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbn1cblxuaW50ZXJmYWNlIFJlZmVyZW5jZSB7XG4gICAgc2xvcGU6IG51bWJlclxuICAgIHNjYWxlOiBudW1iZXJcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmFzaWNQZXJzcGVjdGl2ZShwcm9wczogQmFzaWNQZXJzcGVjdGl2ZVByb3BzKSB7XG4gICAgY29uc3QgcmVmID0gUmVhY3QudXNlUmVmPFJlZmVyZW5jZT4oe1xuICAgICAgICBzbG9wZTogMCxcbiAgICAgICAgc2NhbGU6IDIwMCxcbiAgICB9KVxuICAgIGNvbnN0IFtzbG9wZSwgc2V0U2xvcGVdID0gUmVhY3QudXNlU3RhdGUocmVmLmN1cnJlbnQuc2xvcGUpXG4gICAgY29uc3QgW3NjYWxlLCBzZXRTY2FsZV0gPSBSZWFjdC51c2VTdGF0ZShyZWYuY3VycmVudC5zY2FsZSlcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICByZWYuY3VycmVudC5zbG9wZSA9IHNsb3BlXG4gICAgICAgIHJlZi5jdXJyZW50LnNjYWxlID0gc2NhbGVcbiAgICB9LCBbc2xvcGUsIHNjYWxlXSlcbiAgICBjb25zdCByZW5kZXIgPSBSZWFjdC51c2VDYWxsYmFjayhtYWtlUmVuZGVyKHJlZiksIFtyZWZdKVxuICAgIHJldHVybiAoXG4gICAgICAgIDxhcnRpY2xlIGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9PlxuICAgICAgICAgICAgPFNsaWRlclxuICAgICAgICAgICAgICAgIGxhYmVsPXtgUGVudGUgOiAke3Nsb3BlfSAlYH1cbiAgICAgICAgICAgICAgICB3aWRlPXt0cnVlfVxuICAgICAgICAgICAgICAgIG1pbj17MH1cbiAgICAgICAgICAgICAgICBtYXg9ezEwMH1cbiAgICAgICAgICAgICAgICBzdGVwcz17MX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17c2xvcGV9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldFNsb3BlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxTbGlkZXJcbiAgICAgICAgICAgICAgICBsYWJlbD17YMOJY2hlbGxlIDogJHtzY2FsZX0gJWB9XG4gICAgICAgICAgICAgICAgd2lkZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICBtaW49ezUwfVxuICAgICAgICAgICAgICAgIG1heD17NDAwfVxuICAgICAgICAgICAgICAgIHN0ZXBzPXsxfVxuICAgICAgICAgICAgICAgIHZhbHVlPXtzY2FsZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0U2NhbGV9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPFNjZW5lIGNsYXNzTmFtZT1cImZ1bGwtd2lkdGhcIiBwbGF5PXt0cnVlfSBvbkluaXQ9e3JlbmRlcn0gLz5cbiAgICAgICAgICAgIDxNYXJrZG93bj57Q29udGVudH08L01hcmtkb3duPlxuICAgICAgICAgICAgPENvZGVcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJsZWZ0XCJcbiAgICAgICAgICAgICAgICBsYWJlbD1cIlZlcnRleCBTaGFkZXJcIlxuICAgICAgICAgICAgICAgIGxhbmc9XCJnbHNsXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17VmVydFNoYWRlcn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8Q29kZVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInJpZ2h0XCJcbiAgICAgICAgICAgICAgICBsYWJlbD1cIkZyYWdtZW50IFNoYWRlclwiXG4gICAgICAgICAgICAgICAgbGFuZz1cImdsc2xcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXtGcmFnU2hhZGVyfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgPC9hcnRpY2xlPlxuICAgIClcbn1cblxuZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lcyhwcm9wczogQmFzaWNQZXJzcGVjdGl2ZVByb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gW1wiY3VzdG9tXCIsIFwiQmFzaWNQZXJzcGVjdGl2ZVwiXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cblxuZnVuY3Rpb24gbWFrZVJlbmRlcihyZWY6IFJlYWN0Lk11dGFibGVSZWZPYmplY3Q8UmVmZXJlbmNlPik6IGFueSB7XG4gICAgcmV0dXJuIChnbDogV2ViR0wyUmVuZGVyaW5nQ29udGV4dCkgPT4ge1xuICAgICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpXG4gICAgICAgIGNhbnZhcy53aWR0aCA9IDE2MDBcbiAgICAgICAgY2FudmFzLmhlaWdodCA9IDE2MDBcbiAgICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKVxuICAgICAgICBpZiAoIWN0eCkgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gZ2V0IENhbnZhcyAyRCBjb250ZXh0IVwiKVxuXG4gICAgICAgIGdsLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBsZWZ0LCB0b3AsIHdpZHRoLCBoZWlnaHQgfSA9XG4gICAgICAgICAgICAgICAgZ2wuY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgICAgICAgICBjb25zdCBYID0gKDIgKiAoZXZ0LmNsaWVudFggLSBsZWZ0KSkgLyB3aWR0aCAtIDFcbiAgICAgICAgICAgIGNvbnN0IFkgPSAxIC0gKDIgKiAoZXZ0LmNsaWVudFkgLSB0b3ApKSAvIGhlaWdodFxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLwn5qAIFtiYXNpYy1wZXJzcGVjdGl2ZV0gWSA9IFwiLCBZKSAvLyBARklYTUU6IFJlbW92ZSB0aGlzIGxpbmUgd3JpdHRlbiBvbiAyMDIyLTA0LTExIGF0IDE3OjI4XG4gICAgICAgICAgICBjb25zdCBDeCA9IDBcbiAgICAgICAgICAgIGNvbnN0IEN5ID0gMFxuICAgICAgICAgICAgY29uc3QgciA9IGdsLmRyYXdpbmdCdWZmZXJXaWR0aCAvIGdsLmRyYXdpbmdCdWZmZXJIZWlnaHRcbiAgICAgICAgICAgIGNvbnN0IHMgPSByZWYuY3VycmVudC5zY2FsZSAqIDAuMDFcbiAgICAgICAgICAgIGNvbnN0IHAgPSByZWYuY3VycmVudC5zbG9wZSAqIDAuMDFcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi8J+agCBbYmFzaWMtcGVyc3BlY3RpdmVdIHIgPSBcIiwgcikgLy8gQEZJWE1FOiBSZW1vdmUgdGhpcyBsaW5lIHdyaXR0ZW4gb24gMjAyMi0wNC0xMSBhdCAyMDo1OFxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLwn5qAIFtiYXNpYy1wZXJzcGVjdGl2ZV0gcyA9IFwiLCBzKSAvLyBARklYTUU6IFJlbW92ZSB0aGlzIGxpbmUgd3JpdHRlbiBvbiAyMDIyLTA0LTExIGF0IDIwOjU4XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIvCfmoAgW2Jhc2ljLXBlcnNwZWN0aXZlXSBwID0gXCIsIHApIC8vIEBGSVhNRTogUmVtb3ZlIHRoaXMgbGluZSB3cml0dGVuIG9uIDIwMjItMDQtMTEgYXQgMjA6NThcbiAgICAgICAgICAgIGNvbnN0IHkgPSBDeSArIFkgLyAocyAqIHIgKiAoMSAtIHAgKiBZKSlcbiAgICAgICAgICAgIGNvbnN0IHggPSBDeCArIFggLyBzICsgWCAqIHIgKiBwICogKHkgLSBDeSlcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi8J+agCBbYmFzaWMtcGVyc3BlY3RpdmVdIHkgPSBcIiwgeSkgLy8gQEZJWE1FOiBSZW1vdmUgdGhpcyBsaW5lIHdyaXR0ZW4gb24gMjAyMi0wNC0xMSBhdCAxNzozOVxuICAgICAgICAgICAgY29uc3QgY2FudmFzWCA9IGNhbnZhcy53aWR0aCAqICgxICsgeCkgKiAwLjVcbiAgICAgICAgICAgIGNvbnN0IGNhbnZhc1kgPSBjYW52YXMuaGVpZ2h0ICogKDEgLSB5KSAqIDAuNVxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLwn5qAIFtiYXNpYy1wZXJzcGVjdGl2ZV0gY2FudmFzWSA9IFwiLCBjYW52YXNZKSAvLyBARklYTUU6IFJlbW92ZSB0aGlzIGxpbmUgd3JpdHRlbiBvbiAyMDIyLTA0LTExIGF0IDIwOjU1XG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMClcbiAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSAxNlxuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCIjZjkwN1wiXG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKClcbiAgICAgICAgICAgIGN0eC5tb3ZlVG8oMCwgY2FudmFzWSlcbiAgICAgICAgICAgIGN0eC5saW5lVG8oY2FudmFzLndpZHRoLCBjYW52YXNZKVxuICAgICAgICAgICAgY3R4Lm1vdmVUbyhjYW52YXNYLCAwKVxuICAgICAgICAgICAgY3R4LmxpbmVUbyhjYW52YXNYLCBjYW52YXMuaGVpZ2h0KVxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpXG4gICAgICAgICAgICBnbC50ZXhJbWFnZTJEKFxuICAgICAgICAgICAgICAgIGdsLlRFWFRVUkVfMkQsXG4gICAgICAgICAgICAgICAgMCxcbiAgICAgICAgICAgICAgICBnbC5SR0JBLFxuICAgICAgICAgICAgICAgIGdsLlJHQkEsXG4gICAgICAgICAgICAgICAgZ2wuVU5TSUdORURfQllURSxcbiAgICAgICAgICAgICAgICBjYW52YXNcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwib3JhbmdlXCJcbiAgICAgICAgY3R4LmZpbGxUZXh0KFwiSGVsbG8gV29ybGQhXCIsIDEwMDAsIDYwMClcbiAgICAgICAgY29uc3QgdGV4dHVyZSA9IGdsLmNyZWF0ZVRleHR1cmUoKVxuICAgICAgICBpZiAoIXRleHR1cmUpIHRocm93IEVycm9yKFwiVW5hYmxlIHRvIGNyZWF0ZSBhIHRleHR1cmUhXCIpXG5cbiAgICAgICAgZ2wuYmluZFRleHR1cmUoZ2wuVEVYVFVSRV8yRCwgdGV4dHVyZSlcbiAgICAgICAgZ2wucGl4ZWxTdG9yZWkoZ2wuVU5QQUNLX0ZMSVBfWV9XRUJHTCwgZmFsc2UpXG4gICAgICAgIGdsLnRleEltYWdlMkQoXG4gICAgICAgICAgICBnbC5URVhUVVJFXzJELFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIGdsLlJHQkEsXG4gICAgICAgICAgICBnbC5SR0JBLFxuICAgICAgICAgICAgZ2wuVU5TSUdORURfQllURSxcbiAgICAgICAgICAgIGNhbnZhc1xuICAgICAgICApXG4gICAgICAgIGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCwgZ2wuVEVYVFVSRV9NQUdfRklMVEVSLCBnbC5MSU5FQVIpXG4gICAgICAgIGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCwgZ2wuVEVYVFVSRV9NSU5fRklMVEVSLCBnbC5MSU5FQVIpXG5cbiAgICAgICAgY29uc3QgaW1nID0gbmV3IEltYWdlKClcbiAgICAgICAgaW1nLnNyYyA9IEltYWdlVVJMXG4gICAgICAgIGltZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIvCfmoAgW2Jhc2ljLXBlcnNwZWN0aXZlXSBpbWcgPSBcIiwgaW1nKSAvLyBARklYTUU6IFJlbW92ZSB0aGlzIGxpbmUgd3JpdHRlbiBvbiAyMDIyLTA0LTExIGF0IDE2OjM1XG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMClcbiAgICAgICAgICAgIGdsLnRleEltYWdlMkQoXG4gICAgICAgICAgICAgICAgZ2wuVEVYVFVSRV8yRCxcbiAgICAgICAgICAgICAgICAwLFxuICAgICAgICAgICAgICAgIGdsLlJHQkEsXG4gICAgICAgICAgICAgICAgZ2wuUkdCQSxcbiAgICAgICAgICAgICAgICBnbC5VTlNJR05FRF9CWVRFLFxuICAgICAgICAgICAgICAgIGNhbnZhc1xuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcGFpbnRlciA9IG5ldyBQYWludGVyKGdsLCA0KVxuXG4gICAgICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKC0xLCAtMSwgMCwgMSlcbiAgICAgICAgcGFpbnRlci5wb2tlVmVydFN0YXRpY0RhdGEoKzEsIC0xLCAxLCAxKVxuICAgICAgICBwYWludGVyLnBva2VWZXJ0U3RhdGljRGF0YSgtMSwgKzEsIDAsIDApXG4gICAgICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKCsxLCArMSwgMSwgMClcbiAgICAgICAgcGFpbnRlci5wdXNoVmVydFN0YXRpY0FycmF5KClcbiAgICAgICAgZ2wuY2xlYXJDb2xvcigwLCAwLjY3NzcsIDEsIDEpXG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlPFBhaW50RnVuYz4oKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUoKHRpbWUpID0+XG4gICAgICAgICAgICAgICAgcGFpbnRlci5wYWludCh0aW1lLCAocDogUGFpbnRlciwgdGltZTogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGdsLmNsZWFyKGdsLkNPTE9SX0JVRkZFUl9CSVQpXG4gICAgICAgICAgICAgICAgICAgIHAuJHVuaVRleCh0ZXh0dXJlKVxuICAgICAgICAgICAgICAgICAgICBwLiR1bmlTY2FsZShyZWYuY3VycmVudC5zY2FsZSAqIDAuMDEpXG4gICAgICAgICAgICAgICAgICAgIHAuJHVuaVJhdGlvKGdsLmRyYXdpbmdCdWZmZXJXaWR0aCAvIGdsLmRyYXdpbmdCdWZmZXJIZWlnaHQpXG4gICAgICAgICAgICAgICAgICAgIHAuJHVuaUNlbnRlcigwLCAwKVxuICAgICAgICAgICAgICAgICAgICBwLiR1bmlTbG9wZShyZWYuY3VycmVudC5zbG9wZSAqIDAuMDEpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICB9XG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9iYXNpYy1wZXJzcGVjdGl2ZSdcbiIsIi8qKlxuICogQ29kZSBnw6luw6lyw6kgYXV0b21hdGlxdWVtZW50IGxlIDExLzA0LzIwMjJcbiAqL1xuIGV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhaW50ZXIge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgdmVydFN0YXRpY0J1ZmY6IFdlYkdMQnVmZmVyXG4gICAgcHJpdmF0ZSByZWFkb25seSB2ZXJ0QXJyYXk6IFdlYkdMVmVydGV4QXJyYXlPYmplY3RcbiAgICBwcml2YXRlIHJlYWRvbmx5IF8kdW5pUmF0aW86IFdlYkdMVW5pZm9ybUxvY2F0aW9uXG4gICAgcHJpdmF0ZSByZWFkb25seSBfJHVuaUNlbnRlcjogV2ViR0xVbmlmb3JtTG9jYXRpb25cbiAgICBwcml2YXRlIHJlYWRvbmx5IF8kdW5pU2xvcGU6IFdlYkdMVW5pZm9ybUxvY2F0aW9uXG4gICAgcHJpdmF0ZSByZWFkb25seSBfJHVuaVRleDogV2ViR0xVbmlmb3JtTG9jYXRpb25cbiAgICBwcml2YXRlIHJlYWRvbmx5IF8kdW5pU2NhbGU6IFdlYkdMVW5pZm9ybUxvY2F0aW9uXG4gICAgcHJpdmF0ZSByZWFkb25seSB2ZXJ0U3RhdGljRGF0YTogRmxvYXQzMkFycmF5XG4gICAgLyoqXG4gICAgICogRMOpdGVybWluZSBxdWVsbGUgaW5zdGFuY2UgbGEgZm9uY3Rpb25cbiAgICAgKiBgcG9rZVZlcnRTdGF0aWNEYXRhKClgIG1ldCDDoCBqb3VyLlxuICAgICAqIElsIHMnaW5jcsOpbWVudGUgw6AgY2hhcXVlIGFwcGVsIGRlIGBwb2tlVmVydFN0YXRpY0RhdGEoKWBcbiAgICAgKi9cbiAgICBwdWJsaWMgdmVydFN0YXRpY0N1cnNvciA9IDBcbiAgICBwcml2YXRlIHJlYWRvbmx5IHByZzogV2ViR0xQcm9ncmFtXG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0LFxuICAgICAgICBwdWJsaWMgdmVydENvdW50OiBudW1iZXJcbiAgICApIHtcbiAgICAgICAgY29uc3QgcHJnID0gZ2wuY3JlYXRlUHJvZ3JhbSgpXG4gICAgICAgIGlmICghcHJnKSB0aHJvdyBFcnJvcihcIlVuYWJsZSB0byBjcmVhdGUgYSBXZWJHTCBQcm9ncmFtIVwiKVxuICAgICAgICBQYWludGVyLmNyZWF0ZVNoYWRlcihnbCwgcHJnLCBnbC5WRVJURVhfU0hBREVSLCBQYWludGVyLlZFUlQpXG4gICAgICAgIFBhaW50ZXIuY3JlYXRlU2hhZGVyKGdsLCBwcmcsIGdsLkZSQUdNRU5UX1NIQURFUiwgUGFpbnRlci5GUkFHKVxuICAgICAgICBnbC5saW5rUHJvZ3JhbShwcmcpXG4gICAgICAgIHRoaXMucHJnID0gcHJnXG4gICAgICAgIHRoaXMuXyR1bmlSYXRpbyA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIFwidW5pUmF0aW9cIikgYXMgV2ViR0xVbmlmb3JtTG9jYXRpb25cbiAgICAgICAgdGhpcy5fJHVuaUNlbnRlciA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIFwidW5pQ2VudGVyXCIpIGFzIFdlYkdMVW5pZm9ybUxvY2F0aW9uXG4gICAgICAgIHRoaXMuXyR1bmlTbG9wZSA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIFwidW5pU2xvcGVcIikgYXMgV2ViR0xVbmlmb3JtTG9jYXRpb25cbiAgICAgICAgdGhpcy5fJHVuaVRleCA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIFwidW5pVGV4XCIpIGFzIFdlYkdMVW5pZm9ybUxvY2F0aW9uXG4gICAgICAgIHRoaXMuXyR1bmlTY2FsZSA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIFwidW5pU2NhbGVcIikgYXMgV2ViR0xVbmlmb3JtTG9jYXRpb25cbiAgICAgICAgY29uc3QgdmVydEFycmF5ID0gZ2wuY3JlYXRlVmVydGV4QXJyYXkoKVxuICAgICAgICBpZiAoIXZlcnRBcnJheSkgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFZlcnRleCBBcnJheSBPYmplY3QhXCIpXG4gICAgICAgIHRoaXMudmVydEFycmF5ID0gdmVydEFycmF5XG4gICAgICAgIGdsLmJpbmRWZXJ0ZXhBcnJheSh2ZXJ0QXJyYXkpXG4gICAgICAgIGNvbnN0IEJQRSA9IEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVFxuICAgICAgICBjb25zdCBzdHJpZGVWZXJ0U3RhdGljID0gNCAqIEJQRVxuICAgICAgICBjb25zdCB2ZXJ0U3RhdGljQnVmZiA9IGdsLmNyZWF0ZUJ1ZmZlcigpXG4gICAgICAgIGlmICghdmVydFN0YXRpY0J1ZmYpIHRocm93IEVycm9yKFwiVW5hYmxlIHRvIGNyZWF0ZSBXZWJHTCBCdWZmZXIgKHZlcnRTdGF0aWMpIVwiKVxuICAgICAgICB0aGlzLnZlcnRTdGF0aWNCdWZmID0gdmVydFN0YXRpY0J1ZmZcbiAgICAgICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIHZlcnRTdGF0aWNCdWZmKVxuICAgICAgICB0aGlzLnZlcnRTdGF0aWNEYXRhID0gbmV3IEZsb2F0MzJBcnJheSg0ICogdmVydENvdW50KVxuICAgICAgICBnbC5idWZmZXJEYXRhKGdsLkFSUkFZX0JVRkZFUiwgdGhpcy52ZXJ0U3RhdGljRGF0YSwgZ2wuU1RBVElDX0RSQVcpXG4gICAgICAgIGNvbnN0IF9hdHRQb2ludCA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHByZywgXCJhdHRQb2ludFwiKVxuICAgICAgICBnbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShfYXR0UG9pbnQpXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYlBvaW50ZXIoX2F0dFBvaW50LCAyLCBnbC5GTE9BVCwgZmFsc2UsIHN0cmlkZVZlcnRTdGF0aWMsIDAgKiBCUEUpXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYkRpdmlzb3IoX2F0dFBvaW50LCAwKVxuICAgICAgICBjb25zdCBfYXR0VVYgPSBnbC5nZXRBdHRyaWJMb2NhdGlvbihwcmcsIFwiYXR0VVZcIilcbiAgICAgICAgZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoX2F0dFVWKVxuICAgICAgICBnbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKF9hdHRVViwgMiwgZ2wuRkxPQVQsIGZhbHNlLCBzdHJpZGVWZXJ0U3RhdGljLCAyICogQlBFKVxuICAgICAgICBnbC52ZXJ0ZXhBdHRyaWJEaXZpc29yKF9hdHRVViwgMClcbiAgICAgICAgZ2wuYmluZFZlcnRleEFycmF5KG51bGwpXG4gICAgfVxuXG4gICAgXG5cbiAgICBwdWJsaWMgcHVzaFZlcnRTdGF0aWNBcnJheSgpIHtcbiAgICAgICAgY29uc3QgeyBnbCwgdmVydFN0YXRpY0J1ZmYgfSA9IHRoaXNcbiAgICAgICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIHZlcnRTdGF0aWNCdWZmKVxuICAgICAgICBnbC5idWZmZXJEYXRhKGdsLkFSUkFZX0JVRkZFUiwgdGhpcy52ZXJ0U3RhdGljRGF0YSwgZ2wuU1RBVElDX0RSQVcpXG4gICAgfVxuICAgIFxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBzdGFydCBGaXJzdCB2ZXJ0ZXggaW5kZXggdG8gcHVzaFxuICAgICAqIEBwYXJhbSBlbmQgRmlyc3QgdmVydGV4IGluZGV4IHRvIE5PVCBwdXNoLlxuICAgICAqL1xuICAgIHB1YmxpYyBwdXNoVmVydFN0YXRpY1N1YkFycmF5KHN0YXJ0OiBudW1iZXIsIGVuZDogbnVtYmVyKSB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIHZlcnRTdGF0aWNCdWZmIH0gPSB0aGlzXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCB2ZXJ0U3RhdGljQnVmZilcbiAgICAgICAgY29uc3Qgc3ViRGF0YSA9IHRoaXMudmVydFN0YXRpY0RhdGEuc3ViYXJyYXkoc3RhcnQgKiA0LCBlbmQgKiA0KVxuICAgICAgICBnbC5idWZmZXJTdWJEYXRhKFxuICAgICAgICAgICAgZ2wuQVJSQVlfQlVGRkVSLCBcbiAgICAgICAgICAgIHN0YXJ0ICogRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UICogNCxcbiAgICAgICAgICAgIHN1YkRhdGFcbiAgICAgICAgKVxuICAgIH1cblxuICAgIHB1YmxpYyBwb2tlVmVydFN0YXRpY0RhdGEoXG4gICAgICAgIGF0dFBvaW50X1g6IG51bWJlcixcbiAgICAgICAgYXR0UG9pbnRfWTogbnVtYmVyLFxuICAgICAgICBhdHRVVl9YOiBudW1iZXIsXG4gICAgICAgIGF0dFVWX1k6IG51bWJlclxuICAgICkge1xuICAgICAgICBjb25zdCB2ZXJ0SW5kZXggPSB0aGlzLnZlcnRTdGF0aWNDdXJzb3JcbiAgICAgICAgaWYgKHZlcnRJbmRleCA8IDAgfHwgdmVydEluZGV4ID49IHRoaXMudmVydENvdW50KSB0aHJvdyBFcnJvcihgW3Bva2VWZXJ0U3RhdGljRGF0YV0gQ3Vyc29yIG91dCBvZiByYW5nZTogdmVydFN0YXRpY0N1cnNvciA9ICR7dmVydEluZGV4fWApXG4gICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLnZlcnRTdGF0aWNEYXRhXG4gICAgICAgIGxldCBpbmRleCA9IHZlcnRJbmRleCAqIDRcbiAgICAgICAgZGF0YVtpbmRleCsrXSA9IGF0dFBvaW50X1gsXG4gICAgICAgIGRhdGFbaW5kZXgrK10gPSBhdHRQb2ludF9ZLFxuICAgICAgICBkYXRhW2luZGV4KytdID0gYXR0VVZfWCxcbiAgICAgICAgZGF0YVtpbmRleCsrXSA9IGF0dFVWX1lcbiAgICAgICAgdGhpcy52ZXJ0U3RhdGljQ3Vyc29yKytcbiAgICB9XG5cbiAgICBcblxuICAgIHB1YmxpYyBkZXN0cm95KCkge1xuICAgICAgICBjb25zdCB7IGdsLCBwcmcsIHZlcnRTdGF0aWNCdWZmIH0gPSB0aGlzXG4gICAgICAgIGdsLmRlbGV0ZUJ1ZmZlcih2ZXJ0U3RhdGljQnVmZilcbiAgICAgICAgZ2wuZGVsZXRlUHJvZ3JhbShwcmcpXG4gICAgICAgIGdsLmRlbGV0ZVZlcnRleEFycmF5KHRoaXMudmVydEFycmF5KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZvbmN0aW9uIMOgIGFwcGVsZXIgZGFucyB1biBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYC5cbiAgICAgKiBAcGFyYW0gdGltZSBUZW1wcyBlbiBtaWxsaXNlY29uZGVzXG4gICAgICogQHBhcmFtIG9uUGFpbnQgRm9uY3Rpb24gw6AgdXRpbGlzZXIgcG91cjpcbiAgICAgKiAtIG1ldHRyZSDDoCBqb3VyIGRlcyB1bmlmb3Jtc1xuICAgICAqIC0gYWN0aXZlciBkZXMgZm9uY3Rpb25uYWxpdMOpIGRlIFdlYkdMIChkZXB0aCB0ZXN0LCBjb21waXNpdGluZywgLi4uKVxuICAgICAqIC0gLi4uXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IHBhaW50ID0gKFxuICAgICAgICB0aW1lOiBudW1iZXIsXG4gICAgICAgIG9uUGFpbnQ/OiAocGFpbnRlcjogUGFpbnRlciwgdGltZTogbnVtYmVyKSA9PiB2b2lkXG4gICAgKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIHByZyB9ID0gdGhpc1xuICAgICAgICBnbC51c2VQcm9ncmFtKHByZylcbiAgICAgICAgaWYgKG9uUGFpbnQpIG9uUGFpbnQodGhpcywgdGltZSlcbiAgICAgICAgZ2wuYmluZFZlcnRleEFycmF5KHRoaXMudmVydEFycmF5KVxuICAgICAgICBnbC5kcmF3QXJyYXlzKGdsLlRSSUFOR0xFX1NUUklQLCAwLCB0aGlzLnZlcnRDb3VudClcbiAgICAgICAgZ2wuYmluZFZlcnRleEFycmF5KG51bGwpXG4gICAgfVxuXG4gICAgJHVuaVJhdGlvKHZhbHVlOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5fJHVuaVJhdGlvLCB2YWx1ZSlcbiAgICB9XG4gICAgXG4gICAgJHVuaUNlbnRlcih4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZih0aGlzLl8kdW5pQ2VudGVyLCB4LCB5KVxuICAgIH1cbiAgICBcbiAgICAkdW5pU2xvcGUodmFsdWU6IG51bWJlcikge1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLl8kdW5pU2xvcGUsIHZhbHVlKVxuICAgIH1cbiAgICBcbiAgICAkdW5pVGV4KHRleHR1cmU6IFdlYkdMVGV4dHVyZSkge1xuICAgICAgICBjb25zdCB7IGdsIH0gPSB0aGlzXG4gICAgICAgIGdsLmFjdGl2ZVRleHR1cmUoZ2wuVEVYVFVSRTApXG4gICAgICAgIGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIHRleHR1cmUpXG4gICAgICAgIGdsLnVuaWZvcm0xaSh0aGlzLl8kdW5pVGV4LCAwKVxuICAgIH1cbiAgICBcbiAgICAkdW5pU2NhbGUodmFsdWU6IG51bWJlcikge1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLl8kdW5pU2NhbGUsIHZhbHVlKVxuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGNyZWF0ZVNoYWRlcihnbDogV2ViR0wyUmVuZGVyaW5nQ29udGV4dCwgcHJnOiBXZWJHTFByb2dyYW0sIHR5cGU6IG51bWJlciwgY29kZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IHNoYWRlciA9IGdsLmNyZWF0ZVNoYWRlcih0eXBlKVxuICAgICAgICBpZiAoIXNoYWRlcikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIFNoYWRlciFcIilcbiAgICBcbiAgICAgICAgZ2wuc2hhZGVyU291cmNlKHNoYWRlciwgY29kZSlcbiAgICAgICAgZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpXG4gICAgICAgIGdsLmF0dGFjaFNoYWRlcihwcmcsIHNoYWRlcilcbiAgICB9XG5cbiAgICBzdGF0aWMgcmVhZG9ubHkgVkVSVCA9IGAjdmVyc2lvbiAzMDAgZXNcblxudW5pZm9ybSB2ZWMyIHVuaUNlbnRlcjtcbnVuaWZvcm0gZmxvYXQgdW5pU2NhbGU7XG51bmlmb3JtIGZsb2F0IHVuaVNsb3BlO1xudW5pZm9ybSBmbG9hdCB1bmlSYXRpbztcblxuaW4gdmVjMiBhdHRQb2ludDtcbmluIHZlYzIgYXR0VVY7XG5cbm91dCB2ZWMyIHZhclVWO1xuXG52b2lkIG1haW4oKSB7XG4gIHZlYzIgcG9pbnQgPSAoYXR0UG9pbnQgLSB1bmlDZW50ZXIpICogdW5pU2NhbGU7XG4gIHZhclVWID0gYXR0VVY7XG4gIHBvaW50LnkgKj0gdW5pUmF0aW87XG4gIGZsb2F0IHcgPSB1bmlTbG9wZSAqIHBvaW50LnkgKyAxLjA7XG4gIGZsb2F0IHogPSAwLjU7XG4gIGdsX1Bvc2l0aW9uID0gdmVjNChwb2ludCwgeiwgdyk7XG59YFxuICAgIHN0YXRpYyByZWFkb25seSBGUkFHID0gYCN2ZXJzaW9uIDMwMCBlc1xuXG5wcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcblxudW5pZm9ybSBzYW1wbGVyMkQgdW5pVGV4O1xuXG5pbiB2ZWMyIHZhclVWO1xuXG5vdXQgdmVjNCBGcmFnQ29sb3I7XG5cbnZvaWQgbWFpbigpIHtcbiAgICBGcmFnQ29sb3IgPSB0ZXh0dXJlKHVuaVRleCwgdmFyVVYpO1xufVxuYFxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCIuL2luc3RhbmNlc1wiIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBNYXJrZG93biBmcm9tIFwiQC92aWV3L21hcmtkb3duXCJcbmltcG9ydCBQYWludGVyIGZyb20gXCIuL3BhaW50ZXJcIlxuaW1wb3J0IFNjZW5lLCB7IFBhaW50RnVuYyB9IGZyb20gXCJAL3ZpZXcvc2NlbmVcIlxuaW1wb3J0IFNsaWRlciBmcm9tIFwiQC91aS92aWV3L3NsaWRlclwiXG5pbXBvcnQgVGV4dCBmcm9tIFwiLi90ZXh0Lm1kXCJcbmV4cG9ydCBpbnRlcmZhY2UgQmFzaWNQZXJzcGVjdGl2ZVByb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmFzaWNQZXJzcGVjdGl2ZShwcm9wczogQmFzaWNQZXJzcGVjdGl2ZVByb3BzKSB7XG4gICAgY29uc3QgW2luc3RhbmNlcywgc2V0SW5zdGFuY2VzXSA9IFJlYWN0LnVzZVN0YXRlKDEpXG4gICAgY29uc3QgcmVmSW5zdGFuY2VzID0gUmVhY3QudXNlUmVmKGluc3RhbmNlcylcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICByZWZJbnN0YW5jZXMuY3VycmVudCA9IGluc3RhbmNlc1xuICAgIH0sIFtpbnN0YW5jZXNdKVxuICAgIGNvbnN0IHJlbmRlciA9IFJlYWN0LnVzZUNhbGxiYWNrKG1ha2VSZW5kZXIocmVmSW5zdGFuY2VzKSwgW3JlZkluc3RhbmNlc10pXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGFydGljbGUgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgICAgICA8U2xpZGVyXG4gICAgICAgICAgICAgICAgbGFiZWw9e2BOb21icmUgZCdpbnN0YW5jZXMgOiAke2luc3RhbmNlc31gfVxuICAgICAgICAgICAgICAgIHdpZGU9e3RydWV9XG4gICAgICAgICAgICAgICAgbWluPXsxfVxuICAgICAgICAgICAgICAgIG1heD17NiAqIDd9XG4gICAgICAgICAgICAgICAgc3RlcHM9ezF9XG4gICAgICAgICAgICAgICAgdmFsdWU9e2luc3RhbmNlc31cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0SW5zdGFuY2VzfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxTY2VuZSBwbGF5PXt0cnVlfSBvbkluaXQ9e3JlbmRlcn0gLz5cbiAgICAgICAgICAgIDxNYXJrZG93bj57VGV4dH08L01hcmtkb3duPlxuICAgICAgICA8L2FydGljbGU+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBCYXNpY1BlcnNwZWN0aXZlUHJvcHMpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBbXCJjdXN0b21cIiwgXCJCYXNpY1BlcnNwZWN0aXZlXCJdXG4gICAgaWYgKHR5cGVvZiBwcm9wcy5jbGFzc05hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKHByb3BzLmNsYXNzTmFtZSlcbiAgICB9XG5cbiAgICByZXR1cm4gY2xhc3NOYW1lcy5qb2luKFwiIFwiKVxufVxuXG5mdW5jdGlvbiBtYWtlUmVuZGVyKHJlZkluc3RhbmNlczogUmVhY3QuTXV0YWJsZVJlZk9iamVjdDxudW1iZXI+KTogYW55IHtcbiAgICByZXR1cm4gKGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0KSA9PiB7XG4gICAgICAgIGNvbnN0IHBhaW50ZXIgPSBuZXcgUGFpbnRlcihnbCwgMTIsIDYgKiA3KVxuICAgICAgICBjb25zdCBhID0gMC4xXG4gICAgICAgIGNvbnN0IGIgPSAwLjU1XG4gICAgICAgIGNvbnN0IGMgPSAxXG4gICAgICAgIHBhaW50ZXIucG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhKGEsIGIsIGMpXG4gICAgICAgIHBhaW50ZXIucG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhKGEsIGMsIGIpXG4gICAgICAgIHBhaW50ZXIucG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhKGIsIGEsIGMpXG4gICAgICAgIHBhaW50ZXIucG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhKGMsIGEsIGIpXG4gICAgICAgIHBhaW50ZXIucG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhKGIsIGMsIGEpXG4gICAgICAgIHBhaW50ZXIucG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhKGMsIGIsIGEpXG4gICAgICAgIHBhaW50ZXIucHVzaEluc3RFdmVyeTdTdGF0aWNBcnJheSgpXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNiAqIDc7IGkrKykge1xuICAgICAgICAgICAgcGFpbnRlci5wb2tlSW5zdFN0YXRpY0RhdGEoKGkgKiAzNjApIC8gKDYgKiA3KSlcbiAgICAgICAgfVxuICAgICAgICBwYWludGVyLnB1c2hJbnN0U3RhdGljQXJyYXkoKVxuICAgICAgICBwYWludGVyLnBva2VWZXJ0U3RhdGljRGF0YSgwLCAwLjMsIDApXG4gICAgICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKDkwLCAwLjQsIDEpXG4gICAgICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKC05MCwgMC40LCAxKVxuICAgICAgICBwYWludGVyLnBva2VWZXJ0U3RhdGljRGF0YSgwLCAwLjUsIDIpXG4gICAgICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKDEyMCwgMC4yNSwgMC4xKVxuICAgICAgICBwYWludGVyLnBva2VWZXJ0U3RhdGljRGF0YSgxODAsIDAsIDEpXG4gICAgICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKDAsIDAuNSwgMilcbiAgICAgICAgcGFpbnRlci5wb2tlVmVydFN0YXRpY0RhdGEoLTEyMCwgMC4yNSwgMC4xKVxuICAgICAgICBwYWludGVyLnBva2VWZXJ0U3RhdGljRGF0YSgxODAsIDAsIDEpXG4gICAgICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKDAsIDAuNCwgMSlcbiAgICAgICAgcGFpbnRlci5wb2tlVmVydFN0YXRpY0RhdGEoNjAsIDAuNCwgMilcbiAgICAgICAgcGFpbnRlci5wb2tlVmVydFN0YXRpY0RhdGEoLTYwLCAwLjQsIDIpXG4gICAgICAgIHBhaW50ZXIucHVzaFZlcnRTdGF0aWNBcnJheSgpXG4gICAgICAgIGdsLmNsZWFyQ29sb3IoMCwgMCwgMCwgMSlcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlPFBhaW50RnVuYz4oKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUoKHRpbWUpID0+IHtcbiAgICAgICAgICAgICAgICBwYWludGVyLmluc3RDb3VudCA9IHJlZkluc3RhbmNlcy5jdXJyZW50XG4gICAgICAgICAgICAgICAgcGFpbnRlci5wYWludCh0aW1lLCAocCwgdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBnbC5jbGVhcihnbC5DT0xPUl9CVUZGRVJfQklUKVxuICAgICAgICAgICAgICAgICAgICBnbC5lbmFibGUoZ2wuQkxFTkQpXG4gICAgICAgICAgICAgICAgICAgIGdsLmJsZW5kRnVuYyhnbC5TUkNfQUxQSEEsIGdsLk9ORV9NSU5VU19TUkNfQUxQSEEpXG4gICAgICAgICAgICAgICAgICAgIHAuJHVuaU9wYWNpdHkoMSlcbiAgICAgICAgICAgICAgICAgICAgcC4kdW5pQW5nbGVTdGVwKHQgKiAwLjAwMilcbiAgICAgICAgICAgICAgICAgICAgcC4kdW5pVHJpYW5nbGVzU2NhbGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAxICsgMiAqIE1hdGguYWJzKE1hdGguc2luKHRpbWUgKiAwLjAwMDc0NTQ1KSlcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICBjb25zdCB3ID0gZ2wuZHJhd2luZ0J1ZmZlcldpZHRoXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGggPSBnbC5kcmF3aW5nQnVmZmVySGVpZ2h0XG4gICAgICAgICAgICAgICAgICAgIGlmICh3ID4gaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcC4kdW5pU2NyZWVuU2NhbGUoaCAvIHcsIDEpXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwLiR1bmlTY3JlZW5TY2FsZSgxLCB3IC8gaClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cbn1cbiIsIi8qKlxuICogQ29kZSBnw6luw6lyw6kgYXV0b21hdGlxdWVtZW50IGxlIDA4LzA0LzIwMjJcbiAqL1xuIGV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhaW50ZXIge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgdmVydFN0YXRpY0J1ZmY6IFdlYkdMQnVmZmVyXG4gICAgcHJpdmF0ZSByZWFkb25seSBpbnN0RXZlcnk3U3RhdGljQnVmZjogV2ViR0xCdWZmZXJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGluc3RTdGF0aWNCdWZmOiBXZWJHTEJ1ZmZlclxuICAgIHByaXZhdGUgcmVhZG9ubHkgdmVydEFycmF5OiBXZWJHTFZlcnRleEFycmF5T2JqZWN0XG4gICAgcHJpdmF0ZSByZWFkb25seSBfJHVuaVRyaWFuZ2xlc1NjYWxlOiBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgIHByaXZhdGUgcmVhZG9ubHkgXyR1bmlBbmdsZVN0ZXA6IFdlYkdMVW5pZm9ybUxvY2F0aW9uXG4gICAgcHJpdmF0ZSByZWFkb25seSBfJHVuaVNjcmVlblNjYWxlOiBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgIHByaXZhdGUgcmVhZG9ubHkgXyR1bmlPcGFjaXR5OiBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgIHByaXZhdGUgcmVhZG9ubHkgdmVydFN0YXRpY0RhdGE6IEZsb2F0MzJBcnJheVxuICAgIC8qKlxuICAgICAqIETDqXRlcm1pbmUgcXVlbGxlIGluc3RhbmNlIGxhIGZvbmN0aW9uXG4gICAgICogYHBva2VWZXJ0U3RhdGljRGF0YSgpYCBtZXQgw6Agam91ci5cbiAgICAgKiBJbCBzJ2luY3LDqW1lbnRlIMOgIGNoYXF1ZSBhcHBlbCBkZSBgcG9rZVZlcnRTdGF0aWNEYXRhKClgXG4gICAgICovXG4gICAgcHVibGljIHZlcnRTdGF0aWNDdXJzb3IgPSAwXG4gICAgcHJpdmF0ZSByZWFkb25seSBpbnN0RXZlcnk3U3RhdGljRGF0YTogRmxvYXQzMkFycmF5XG4gICAgLyoqXG4gICAgICogRMOpdGVybWluZSBxdWVsIHZlcnRleCBsYSBmb25jdGlvblxuICAgICAqIGBwb2tlSW5zdEV2ZXJ5N1N0YXRpY0RhdGEoKWAgbWV0IMOgIGpvdXIuXG4gICAgICogSWwgcydpbmNyw6ltZW50ZSDDoCBjaGFxdWUgYXBwZWwgZGUgYHBva2VJbnN0RXZlcnk3U3RhdGljRGF0YSgpYFxuICAgICAqL1xuICAgIHB1YmxpYyBpbnN0RXZlcnk3U3RhdGljQ3Vyc29yID0gMFxuICAgIHByaXZhdGUgcmVhZG9ubHkgaW5zdFN0YXRpY0RhdGE6IEZsb2F0MzJBcnJheVxuICAgIC8qKlxuICAgICAqIETDqXRlcm1pbmUgcXVlbCB2ZXJ0ZXggbGEgZm9uY3Rpb25cbiAgICAgKiBgcG9rZUluc3RTdGF0aWNEYXRhKClgIG1ldCDDoCBqb3VyLlxuICAgICAqIElsIHMnaW5jcsOpbWVudGUgw6AgY2hhcXVlIGFwcGVsIGRlIGBwb2tlSW5zdFN0YXRpY0RhdGEoKWBcbiAgICAgKi9cbiAgICBwdWJsaWMgaW5zdFN0YXRpY0N1cnNvciA9IDBcbiAgICBwcml2YXRlIHJlYWRvbmx5IHByZzogV2ViR0xQcm9ncmFtXG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0LFxuICAgICAgICBwdWJsaWMgdmVydENvdW50OiBudW1iZXIsXG4gICAgICAgIHB1YmxpYyBpbnN0Q291bnQ6IG51bWJlclxuICAgICkge1xuICAgICAgICBjb25zdCBwcmcgPSBnbC5jcmVhdGVQcm9ncmFtKClcbiAgICAgICAgaWYgKCFwcmcpIHRocm93IEVycm9yKFwiVW5hYmxlIHRvIGNyZWF0ZSBhIFdlYkdMIFByb2dyYW0hXCIpXG4gICAgICAgIFBhaW50ZXIuY3JlYXRlU2hhZGVyKGdsLCBwcmcsIGdsLlZFUlRFWF9TSEFERVIsIFBhaW50ZXIuVkVSVClcbiAgICAgICAgUGFpbnRlci5jcmVhdGVTaGFkZXIoZ2wsIHByZywgZ2wuRlJBR01FTlRfU0hBREVSLCBQYWludGVyLkZSQUcpXG4gICAgICAgIGdsLmxpbmtQcm9ncmFtKHByZylcbiAgICAgICAgdGhpcy5wcmcgPSBwcmdcbiAgICAgICAgdGhpcy5fJHVuaVRyaWFuZ2xlc1NjYWxlID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHByZywgXCJ1bmlUcmlhbmdsZXNTY2FsZVwiKSBhcyBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgICAgICB0aGlzLl8kdW5pQW5nbGVTdGVwID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHByZywgXCJ1bmlBbmdsZVN0ZXBcIikgYXMgV2ViR0xVbmlmb3JtTG9jYXRpb25cbiAgICAgICAgdGhpcy5fJHVuaVNjcmVlblNjYWxlID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHByZywgXCJ1bmlTY3JlZW5TY2FsZVwiKSBhcyBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgICAgICB0aGlzLl8kdW5pT3BhY2l0eSA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIFwidW5pT3BhY2l0eVwiKSBhcyBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgICAgICBjb25zdCB2ZXJ0QXJyYXkgPSBnbC5jcmVhdGVWZXJ0ZXhBcnJheSgpXG4gICAgICAgIGlmICghdmVydEFycmF5KSB0aHJvdyBFcnJvcihcIlVuYWJsZSB0byBjcmVhdGUgVmVydGV4IEFycmF5IE9iamVjdCFcIilcbiAgICAgICAgdGhpcy52ZXJ0QXJyYXkgPSB2ZXJ0QXJyYXlcbiAgICAgICAgZ2wuYmluZFZlcnRleEFycmF5KHZlcnRBcnJheSlcbiAgICAgICAgY29uc3QgQlBFID0gRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXG4gICAgICAgIGNvbnN0IHN0cmlkZVZlcnRTdGF0aWMgPSAzICogQlBFXG4gICAgICAgIGNvbnN0IHZlcnRTdGF0aWNCdWZmID0gZ2wuY3JlYXRlQnVmZmVyKClcbiAgICAgICAgaWYgKCF2ZXJ0U3RhdGljQnVmZikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIEJ1ZmZlciAodmVydFN0YXRpYykhXCIpXG4gICAgICAgIHRoaXMudmVydFN0YXRpY0J1ZmYgPSB2ZXJ0U3RhdGljQnVmZlxuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgdmVydFN0YXRpY0J1ZmYpXG4gICAgICAgIHRoaXMudmVydFN0YXRpY0RhdGEgPSBuZXcgRmxvYXQzMkFycmF5KDMgKiB2ZXJ0Q291bnQpXG4gICAgICAgIGdsLmJ1ZmZlckRhdGEoZ2wuQVJSQVlfQlVGRkVSLCB0aGlzLnZlcnRTdGF0aWNEYXRhLCBnbC5TVEFUSUNfRFJBVylcbiAgICAgICAgY29uc3QgX2F0dFZlcnRleFBvbGFyQ29vcmRzID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24ocHJnLCBcImF0dFZlcnRleFBvbGFyQ29vcmRzXCIpXG4gICAgICAgIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KF9hdHRWZXJ0ZXhQb2xhckNvb3JkcylcbiAgICAgICAgZ2wudmVydGV4QXR0cmliUG9pbnRlcihfYXR0VmVydGV4UG9sYXJDb29yZHMsIDMsIGdsLkZMT0FULCBmYWxzZSwgc3RyaWRlVmVydFN0YXRpYywgMCAqIEJQRSlcbiAgICAgICAgZ2wudmVydGV4QXR0cmliRGl2aXNvcihfYXR0VmVydGV4UG9sYXJDb29yZHMsIDApXG4gICAgICAgIGNvbnN0IHN0cmlkZUluc3RFdmVyeTdTdGF0aWMgPSAzICogQlBFXG4gICAgICAgIGNvbnN0IGluc3RFdmVyeTdTdGF0aWNCdWZmID0gZ2wuY3JlYXRlQnVmZmVyKClcbiAgICAgICAgaWYgKCFpbnN0RXZlcnk3U3RhdGljQnVmZikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIEJ1ZmZlciAoaW5zdEV2ZXJ5N1N0YXRpYykhXCIpXG4gICAgICAgIHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0J1ZmYgPSBpbnN0RXZlcnk3U3RhdGljQnVmZlxuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgaW5zdEV2ZXJ5N1N0YXRpY0J1ZmYpXG4gICAgICAgIHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0RhdGEgPSBuZXcgRmxvYXQzMkFycmF5KDMgKiBNYXRoLmZsb29yKGluc3RDb3VudCAvIDcpKVxuICAgICAgICBnbC5idWZmZXJEYXRhKGdsLkFSUkFZX0JVRkZFUiwgdGhpcy5pbnN0RXZlcnk3U3RhdGljRGF0YSwgZ2wuU1RBVElDX0RSQVcpXG4gICAgICAgIGNvbnN0IF9hdHRJbnN0YW5jZUNvbG9yID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24ocHJnLCBcImF0dEluc3RhbmNlQ29sb3JcIilcbiAgICAgICAgZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoX2F0dEluc3RhbmNlQ29sb3IpXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYlBvaW50ZXIoX2F0dEluc3RhbmNlQ29sb3IsIDMsIGdsLkZMT0FULCBmYWxzZSwgc3RyaWRlSW5zdEV2ZXJ5N1N0YXRpYywgMCAqIEJQRSlcbiAgICAgICAgZ2wudmVydGV4QXR0cmliRGl2aXNvcihfYXR0SW5zdGFuY2VDb2xvciwgNylcbiAgICAgICAgY29uc3Qgc3RyaWRlSW5zdFN0YXRpYyA9IDEgKiBCUEVcbiAgICAgICAgY29uc3QgaW5zdFN0YXRpY0J1ZmYgPSBnbC5jcmVhdGVCdWZmZXIoKVxuICAgICAgICBpZiAoIWluc3RTdGF0aWNCdWZmKSB0aHJvdyBFcnJvcihcIlVuYWJsZSB0byBjcmVhdGUgV2ViR0wgQnVmZmVyIChpbnN0U3RhdGljKSFcIilcbiAgICAgICAgdGhpcy5pbnN0U3RhdGljQnVmZiA9IGluc3RTdGF0aWNCdWZmXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBpbnN0U3RhdGljQnVmZilcbiAgICAgICAgdGhpcy5pbnN0U3RhdGljRGF0YSA9IG5ldyBGbG9hdDMyQXJyYXkoMSAqIGluc3RDb3VudClcbiAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHRoaXMuaW5zdFN0YXRpY0RhdGEsIGdsLlNUQVRJQ19EUkFXKVxuICAgICAgICBjb25zdCBfYXR0SW5zdGFuY2VBbmdsZSA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHByZywgXCJhdHRJbnN0YW5jZUFuZ2xlXCIpXG4gICAgICAgIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KF9hdHRJbnN0YW5jZUFuZ2xlKVxuICAgICAgICBnbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKF9hdHRJbnN0YW5jZUFuZ2xlLCAxLCBnbC5GTE9BVCwgZmFsc2UsIHN0cmlkZUluc3RTdGF0aWMsIDAgKiBCUEUpXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYkRpdmlzb3IoX2F0dEluc3RhbmNlQW5nbGUsIDEpXG4gICAgICAgIGdsLmJpbmRWZXJ0ZXhBcnJheShudWxsKVxuICAgIH1cblxuICAgIFxuXG4gICAgcHVibGljIHB1c2hWZXJ0U3RhdGljQXJyYXkoKSB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIHZlcnRTdGF0aWNCdWZmIH0gPSB0aGlzXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCB2ZXJ0U3RhdGljQnVmZilcbiAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHRoaXMudmVydFN0YXRpY0RhdGEsIGdsLlNUQVRJQ19EUkFXKVxuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gc3RhcnQgRmlyc3QgdmVydGV4IGluZGV4IHRvIHB1c2hcbiAgICAgKiBAcGFyYW0gZW5kIEZpcnN0IHZlcnRleCBpbmRleCB0byBOT1QgcHVzaC5cbiAgICAgKi9cbiAgICBwdWJsaWMgcHVzaFZlcnRTdGF0aWNTdWJBcnJheShzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlcikge1xuICAgICAgICBjb25zdCB7IGdsLCB2ZXJ0U3RhdGljQnVmZiB9ID0gdGhpc1xuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgdmVydFN0YXRpY0J1ZmYpXG4gICAgICAgIGNvbnN0IHN1YkRhdGEgPSB0aGlzLnZlcnRTdGF0aWNEYXRhLnN1YmFycmF5KHN0YXJ0ICogMywgZW5kICogMylcbiAgICAgICAgZ2wuYnVmZmVyU3ViRGF0YShcbiAgICAgICAgICAgIGdsLkFSUkFZX0JVRkZFUiwgXG4gICAgICAgICAgICBzdGFydCAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCAqIDMsXG4gICAgICAgICAgICBzdWJEYXRhXG4gICAgICAgIClcbiAgICB9XG4gICAgXG4gICAgcHVibGljIHB1c2hJbnN0RXZlcnk3U3RhdGljQXJyYXkoKSB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIGluc3RFdmVyeTdTdGF0aWNCdWZmIH0gPSB0aGlzXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBpbnN0RXZlcnk3U3RhdGljQnVmZilcbiAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0RhdGEsIGdsLlNUQVRJQ19EUkFXKVxuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gc3RhcnQgRmlyc3QgdmVydGV4IGluZGV4IHRvIHB1c2hcbiAgICAgKiBAcGFyYW0gZW5kIEZpcnN0IHZlcnRleCBpbmRleCB0byBOT1QgcHVzaC5cbiAgICAgKi9cbiAgICBwdWJsaWMgcHVzaEluc3RFdmVyeTdTdGF0aWNTdWJBcnJheShzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlcikge1xuICAgICAgICBjb25zdCB7IGdsLCBpbnN0RXZlcnk3U3RhdGljQnVmZiB9ID0gdGhpc1xuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgaW5zdEV2ZXJ5N1N0YXRpY0J1ZmYpXG4gICAgICAgIGNvbnN0IHN1YkRhdGEgPSB0aGlzLmluc3RFdmVyeTdTdGF0aWNEYXRhLnN1YmFycmF5KHN0YXJ0ICogMywgZW5kICogMylcbiAgICAgICAgZ2wuYnVmZmVyU3ViRGF0YShcbiAgICAgICAgICAgIGdsLkFSUkFZX0JVRkZFUiwgXG4gICAgICAgICAgICBzdGFydCAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCAqIDMsXG4gICAgICAgICAgICBzdWJEYXRhXG4gICAgICAgIClcbiAgICB9XG4gICAgXG4gICAgcHVibGljIHB1c2hJbnN0U3RhdGljQXJyYXkoKSB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIGluc3RTdGF0aWNCdWZmIH0gPSB0aGlzXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBpbnN0U3RhdGljQnVmZilcbiAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHRoaXMuaW5zdFN0YXRpY0RhdGEsIGdsLlNUQVRJQ19EUkFXKVxuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gc3RhcnQgRmlyc3QgdmVydGV4IGluZGV4IHRvIHB1c2hcbiAgICAgKiBAcGFyYW0gZW5kIEZpcnN0IHZlcnRleCBpbmRleCB0byBOT1QgcHVzaC5cbiAgICAgKi9cbiAgICBwdWJsaWMgcHVzaEluc3RTdGF0aWNTdWJBcnJheShzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlcikge1xuICAgICAgICBjb25zdCB7IGdsLCBpbnN0U3RhdGljQnVmZiB9ID0gdGhpc1xuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgaW5zdFN0YXRpY0J1ZmYpXG4gICAgICAgIGNvbnN0IHN1YkRhdGEgPSB0aGlzLmluc3RTdGF0aWNEYXRhLnN1YmFycmF5KHN0YXJ0ICogMSwgZW5kICogMSlcbiAgICAgICAgZ2wuYnVmZmVyU3ViRGF0YShcbiAgICAgICAgICAgIGdsLkFSUkFZX0JVRkZFUiwgXG4gICAgICAgICAgICBzdGFydCAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCAqIDEsXG4gICAgICAgICAgICBzdWJEYXRhXG4gICAgICAgIClcbiAgICB9XG5cbiAgICBwdWJsaWMgcG9rZVZlcnRTdGF0aWNEYXRhKFxuICAgICAgICBhdHRWZXJ0ZXhQb2xhckNvb3Jkc19YOiBudW1iZXIsXG4gICAgICAgIGF0dFZlcnRleFBvbGFyQ29vcmRzX1k6IG51bWJlcixcbiAgICAgICAgYXR0VmVydGV4UG9sYXJDb29yZHNfWjogbnVtYmVyXG4gICAgKSB7XG4gICAgICAgIGNvbnN0IHZlcnRJbmRleCA9IHRoaXMudmVydFN0YXRpY0N1cnNvclxuICAgICAgICBpZiAodmVydEluZGV4IDwgMCB8fCB2ZXJ0SW5kZXggPj0gdGhpcy52ZXJ0Q291bnQpIHRocm93IEVycm9yKGBbcG9rZVZlcnRTdGF0aWNEYXRhXSBDdXJzb3Igb3V0IG9mIHJhbmdlOiB2ZXJ0U3RhdGljQ3Vyc29yID0gJHt2ZXJ0SW5kZXh9YClcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMudmVydFN0YXRpY0RhdGFcbiAgICAgICAgbGV0IGluZGV4ID0gdmVydEluZGV4ICogM1xuICAgICAgICBkYXRhW2luZGV4KytdID0gYXR0VmVydGV4UG9sYXJDb29yZHNfWCxcbiAgICAgICAgZGF0YVtpbmRleCsrXSA9IGF0dFZlcnRleFBvbGFyQ29vcmRzX1ksXG4gICAgICAgIGRhdGFbaW5kZXgrK10gPSBhdHRWZXJ0ZXhQb2xhckNvb3Jkc19aXG4gICAgICAgIHRoaXMudmVydFN0YXRpY0N1cnNvcisrXG4gICAgfVxuICAgIHB1YmxpYyBwb2tlSW5zdEV2ZXJ5N1N0YXRpY0RhdGEoXG4gICAgICAgIGF0dEluc3RhbmNlQ29sb3JfWDogbnVtYmVyLFxuICAgICAgICBhdHRJbnN0YW5jZUNvbG9yX1k6IG51bWJlcixcbiAgICAgICAgYXR0SW5zdGFuY2VDb2xvcl9aOiBudW1iZXJcbiAgICApIHtcbiAgICAgICAgY29uc3QgdmVydEluZGV4ID0gdGhpcy5pbnN0RXZlcnk3U3RhdGljQ3Vyc29yXG4gICAgICAgIGlmICh2ZXJ0SW5kZXggPCAwIHx8IHZlcnRJbmRleCA+PSBNYXRoLmZsb29yKHRoaXMuaW5zdENvdW50IC8gNykpIHRocm93IEVycm9yKGBbcG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhXSBDdXJzb3Igb3V0IG9mIHJhbmdlOiBpbnN0RXZlcnk3U3RhdGljQ3Vyc29yID0gJHt2ZXJ0SW5kZXh9YClcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0RhdGFcbiAgICAgICAgbGV0IGluZGV4ID0gdmVydEluZGV4ICogM1xuICAgICAgICBkYXRhW2luZGV4KytdID0gYXR0SW5zdGFuY2VDb2xvcl9YLFxuICAgICAgICBkYXRhW2luZGV4KytdID0gYXR0SW5zdGFuY2VDb2xvcl9ZLFxuICAgICAgICBkYXRhW2luZGV4KytdID0gYXR0SW5zdGFuY2VDb2xvcl9aXG4gICAgICAgIHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0N1cnNvcisrXG4gICAgfVxuICAgIHB1YmxpYyBwb2tlSW5zdFN0YXRpY0RhdGEoXG4gICAgICAgIGF0dEluc3RhbmNlQW5nbGU6IG51bWJlclxuICAgICkge1xuICAgICAgICBjb25zdCB2ZXJ0SW5kZXggPSB0aGlzLmluc3RTdGF0aWNDdXJzb3JcbiAgICAgICAgaWYgKHZlcnRJbmRleCA8IDAgfHwgdmVydEluZGV4ID49IHRoaXMuaW5zdENvdW50KSB0aHJvdyBFcnJvcihgW3Bva2VJbnN0U3RhdGljRGF0YV0gQ3Vyc29yIG91dCBvZiByYW5nZTogaW5zdFN0YXRpY0N1cnNvciA9ICR7dmVydEluZGV4fWApXG4gICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLmluc3RTdGF0aWNEYXRhXG4gICAgICAgIGxldCBpbmRleCA9IHZlcnRJbmRleCAqIDFcbiAgICAgICAgZGF0YVtpbmRleCsrXSA9IGF0dEluc3RhbmNlQW5nbGVcbiAgICAgICAgdGhpcy5pbnN0U3RhdGljQ3Vyc29yKytcbiAgICB9XG5cbiAgICBcblxuICAgIHB1YmxpYyBkZXN0cm95KCkge1xuICAgICAgICBjb25zdCB7IGdsLCBwcmcsIHZlcnRTdGF0aWNCdWZmLCBpbnN0RXZlcnk3U3RhdGljQnVmZiwgaW5zdFN0YXRpY0J1ZmYgfSA9IHRoaXNcbiAgICAgICAgZ2wuZGVsZXRlQnVmZmVyKHZlcnRTdGF0aWNCdWZmKVxuICAgICAgICBnbC5kZWxldGVCdWZmZXIoaW5zdEV2ZXJ5N1N0YXRpY0J1ZmYpXG4gICAgICAgIGdsLmRlbGV0ZUJ1ZmZlcihpbnN0U3RhdGljQnVmZilcbiAgICAgICAgZ2wuZGVsZXRlUHJvZ3JhbShwcmcpXG4gICAgICAgIGdsLmRlbGV0ZVZlcnRleEFycmF5KHRoaXMudmVydEFycmF5KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZvbmN0aW9uIMOgIGFwcGVsZXIgZGFucyB1biBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYC5cbiAgICAgKiBAcGFyYW0gdGltZSBUZW1wcyBlbiBtaWxsaXNlY29uZGVzXG4gICAgICogQHBhcmFtIG9uUGFpbnQgRm9uY3Rpb24gw6AgdXRpbGlzZXIgcG91cjpcbiAgICAgKiAtIG1ldHRyZSDDoCBqb3VyIGRlcyB1bmlmb3Jtc1xuICAgICAqIC0gYWN0aXZlciBkZXMgZm9uY3Rpb25uYWxpdMOpIGRlIFdlYkdMIChkZXB0aCB0ZXN0LCBjb21waXNpdGluZywgLi4uKVxuICAgICAqIC0gLi4uXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IHBhaW50ID0gKFxuICAgICAgICB0aW1lOiBudW1iZXIsXG4gICAgICAgIG9uUGFpbnQ/OiAocGFpbnRlcjogUGFpbnRlciwgdGltZTogbnVtYmVyKSA9PiB2b2lkXG4gICAgKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIHByZyB9ID0gdGhpc1xuICAgICAgICBnbC51c2VQcm9ncmFtKHByZylcbiAgICAgICAgaWYgKG9uUGFpbnQpIG9uUGFpbnQodGhpcywgdGltZSlcbiAgICAgICAgZ2wuYmluZFZlcnRleEFycmF5KHRoaXMudmVydEFycmF5KVxuICAgICAgICBnbC5kcmF3QXJyYXlzSW5zdGFuY2VkKGdsLlRSSUFOR0xFUywgMCwgdGhpcy52ZXJ0Q291bnQsIHRoaXMuaW5zdENvdW50KVxuICAgICAgICBnbC5iaW5kVmVydGV4QXJyYXkobnVsbClcbiAgICB9XG5cbiAgICAkdW5pVHJpYW5nbGVzU2NhbGUodmFsdWU6IG51bWJlcikge1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLl8kdW5pVHJpYW5nbGVzU2NhbGUsIHZhbHVlKVxuICAgIH1cbiAgICBcbiAgICAkdW5pQW5nbGVTdGVwKHZhbHVlOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5fJHVuaUFuZ2xlU3RlcCwgdmFsdWUpXG4gICAgfVxuICAgIFxuICAgICR1bmlTY3JlZW5TY2FsZSh4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZih0aGlzLl8kdW5pU2NyZWVuU2NhbGUsIHgsIHkpXG4gICAgfVxuICAgIFxuICAgICR1bmlPcGFjaXR5KHZhbHVlOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5fJHVuaU9wYWNpdHksIHZhbHVlKVxuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGNyZWF0ZVNoYWRlcihnbDogV2ViR0wyUmVuZGVyaW5nQ29udGV4dCwgcHJnOiBXZWJHTFByb2dyYW0sIHR5cGU6IG51bWJlciwgY29kZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IHNoYWRlciA9IGdsLmNyZWF0ZVNoYWRlcih0eXBlKVxuICAgICAgICBpZiAoIXNoYWRlcikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIFNoYWRlciFcIilcbiAgICBcbiAgICAgICAgZ2wuc2hhZGVyU291cmNlKHNoYWRlciwgY29kZSlcbiAgICAgICAgZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpXG4gICAgICAgIGdsLmF0dGFjaFNoYWRlcihwcmcsIHNoYWRlcilcbiAgICB9XG5cbiAgICBzdGF0aWMgcmVhZG9ubHkgVkVSVCA9IGAjdmVyc2lvbiAzMDAgZXNcbnVuaWZvcm0gdmVjMiB1bmlTY3JlZW5TY2FsZTtcbnVuaWZvcm0gZmxvYXQgdW5pQW5nbGVTdGVwO1xudW5pZm9ybSBmbG9hdCB1bmlUcmlhbmdsZXNTY2FsZTtcbmluIHZlYzMgYXR0VmVydGV4UG9sYXJDb29yZHM7XG5pbiB2ZWMzIGF0dEluc3RhbmNlQ29sb3I7XG5pbiBmbG9hdCBhdHRJbnN0YW5jZUFuZ2xlO1xub3V0IHZlYzMgdmFyQ29sb3I7XG5jb25zdCBmbG9hdCBSQURfUEVSX0RFRz0wLjAxNzQ1MzI5MjUxOTk0MzI5NTtcbnZvaWQgbWFpbigpe3ZhckNvbG9yPWF0dEluc3RhbmNlQ29sb3IqdmVjMyhhdHRWZXJ0ZXhQb2xhckNvb3Jkcy56KTtcbmZsb2F0IGluc3RBbmc9dW5pQW5nbGVTdGVwKmZsb2F0KDErZ2xfSW5zdGFuY2VJRCkqUkFEX1BFUl9ERUc7XG5mbG9hdCBpbnN0RGlzPTAuNzUtZmxvYXQoZ2xfSW5zdGFuY2VJRCkqMC4wMTM4ODg4ODg4ODg5O1xuZmxvYXQgdmVydEFuZz1pbnN0QW5nKyhhdHRWZXJ0ZXhQb2xhckNvb3Jkcy54K2F0dEluc3RhbmNlQW5nbGUpKlJBRF9QRVJfREVHO1xuZmxvYXQgdmVydERpcz1hdHRWZXJ0ZXhQb2xhckNvb3Jkcy55Kmluc3REaXMqdW5pVHJpYW5nbGVzU2NhbGU7XG5mbG9hdCB4PXZlcnREaXMqY29zKHZlcnRBbmcpO1xuZmxvYXQgeT12ZXJ0RGlzKnNpbih2ZXJ0QW5nKTtcbmZsb2F0IGN4PWluc3REaXMqY29zKGluc3RBbmcpO1xuZmxvYXQgY3k9aW5zdERpcypzaW4oaW5zdEFuZyk7XG5nbF9Qb3NpdGlvbj12ZWM0KHVuaVNjcmVlblNjYWxlKnZlYzIoY3greCxjeSt5KSwwLjAsMS4wKTt9YFxuICAgIHN0YXRpYyByZWFkb25seSBGUkFHID0gYCN2ZXJzaW9uIDMwMCBlc1xucHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XG51bmlmb3JtIGZsb2F0IHVuaU9wYWNpdHk7XG5pbiB2ZWMzIHZhckNvbG9yO1xub3V0IHZlYzQgRnJhZ0NvbG9yO1xudm9pZCBtYWluKCl7RnJhZ0NvbG9yPXZlYzQodmFyQ29sb3IsdW5pT3BhY2l0eSk7fWBcbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgQ29kZSBmcm9tIFwiQC92aWV3L2NvZGVcIlxuaW1wb3J0IENvZGVDb250ZW50IGZyb20gXCIuL2NvbnRleHQuY29kZVwiXG5pbXBvcnQgQ29kZUhUTUwgZnJvbSBcIi4vaHRtbC5jb2RlXCJcbmltcG9ydCBNYXJrZG93biBmcm9tIFwiQC92aWV3L21hcmtkb3duXCJcbmltcG9ydCBQYWludGVyIGZyb20gXCIuL3BhaW50ZXJcIlxuaW1wb3J0IFNjZW5lLCB7IFBhaW50RnVuYyB9IGZyb20gXCJAL3ZpZXcvc2NlbmVcIlxuaW1wb3J0IFRleHQxIGZyb20gXCIuL3RleHQuMS5tZFwiXG5pbXBvcnQgXCIuL2F0dHJpYnV0ZXMtdmlldy5jc3NcIlxuXG5leHBvcnQgaW50ZXJmYWNlIEF0dHJpYnV0ZXNWaWV3UHJvcHMge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBdHRyaWJ1dGVzVmlldyhwcm9wczogQXR0cmlidXRlc1ZpZXdQcm9wcykge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxhcnRpY2xlIGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9PlxuICAgICAgICAgICAgPFNjZW5lIGNsYXNzTmFtZT1cIm1hcmdpbi1sZWZ0XCIgb25Jbml0PXtyZW5kZXJ9IC8+XG4gICAgICAgICAgICA8TWFya2Rvd25cbiAgICAgICAgICAgICAgICB0cz17e1xuICAgICAgICAgICAgICAgICAgICBjb2RlOiBDb2RlQ29udGVudFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge1RleHQxfVxuICAgICAgICAgICAgPC9NYXJrZG93bj5cbiAgICAgICAgPC9hcnRpY2xlPlxuICAgIClcbn1cblxuZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lcyhwcm9wczogQXR0cmlidXRlc1ZpZXdQcm9wcyk6IHN0cmluZyB7XG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IFtcImN1c3RvbVwiLCBcInBhZ2VzLWFydGljbGVzLUF0dHJpYnV0ZXNWaWV3XCJdXG4gICAgaWYgKHR5cGVvZiBwcm9wcy5jbGFzc05hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKHByb3BzLmNsYXNzTmFtZSlcbiAgICB9XG5cbiAgICByZXR1cm4gY2xhc3NOYW1lcy5qb2luKFwiIFwiKVxufVxuXG5hc3luYyBmdW5jdGlvbiByZW5kZXIoZ2w6IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQpOiBQcm9taXNlPFBhaW50RnVuYz4ge1xuICAgIGNvbnN0IHBhaW50ZXIgPSBuZXcgUGFpbnRlcihnbClcbiAgICBwYWludGVyLmNyZWF0ZVZlcnREYXRhQXJyYXkoNilcbiAgICBwYWludGVyLnBva2VWZXJ0RGF0YSgwLCAtMC44LCAtMC42KVxuICAgIHBhaW50ZXIucG9rZVZlcnREYXRhKDEsICswLjIsIC0wLjYpXG4gICAgcGFpbnRlci5wb2tlVmVydERhdGEoMiwgLTAuMywgKzAuNilcbiAgICBwYWludGVyLnBva2VWZXJ0RGF0YSgzLCArMC44LCArMC42KVxuICAgIHBhaW50ZXIucG9rZVZlcnREYXRhKDQsIC0wLjIsICswLjYpXG4gICAgcGFpbnRlci5wb2tlVmVydERhdGEoNSwgKzAuMywgLTAuNilcbiAgICBwYWludGVyLnB1c2hWZXJ0RGF0YSgpXG4gICAgZ2wuY2xlYXJDb2xvcigwLDAuNCwgMC44NjY2NywgMSlcbiAgICByZXR1cm4gKHRpbWU6IG51bWJlcikgPT4ge1xuICAgICAgICBnbC5jbGVhcihnbC5DT0xPUl9CVUZGRVJfQklUKVxuICAgICAgICBwYWludGVyLnBhaW50KHRpbWUpXG4gICAgfVxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vYXR0cmlidXRlcy12aWV3J1xuIiwiLyoqXG4gKiBDb2RlIGfDqW7DqXLDqSBhdXRvbWF0aXF1ZW1lbnQgbGUgMDQvMDQvMjAyMlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYWludGVyIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHZlcnRCdWZmOiBXZWJHTEJ1ZmZlclxuICAgIHByaXZhdGUgcmVhZG9ubHkgdmVydEFycmF5OiBXZWJHTFZlcnRleEFycmF5T2JqZWN0XG5cbiAgICBwcml2YXRlIHN0YXRpYyBBVFRSSUJTX0NPVU5UID0gMlxuICAgIHByaXZhdGUgdmVydERhdGEgPSBuZXcgRmxvYXQzMkFycmF5KClcbiAgICBwcml2YXRlIHZlcnRDb3VudCA9IDBcbiAgICBwcml2YXRlIHJlYWRvbmx5IHByZzogV2ViR0xQcm9ncmFtXG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgZ2w6IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQpIHtcbiAgICAgICAgY29uc3QgcHJnID0gZ2wuY3JlYXRlUHJvZ3JhbSgpXG4gICAgICAgIGlmICghcHJnKSB0aHJvdyBFcnJvcihcIlVuYWJsZSB0byBjcmVhdGUgYSBXZWJHTCBQcm9ncmFtIVwiKVxuICAgICAgICBQYWludGVyLmNyZWF0ZVNoYWRlcihnbCwgcHJnLCBnbC5WRVJURVhfU0hBREVSLCBQYWludGVyLlZFUlQpXG4gICAgICAgIFBhaW50ZXIuY3JlYXRlU2hhZGVyKGdsLCBwcmcsIGdsLkZSQUdNRU5UX1NIQURFUiwgUGFpbnRlci5GUkFHKVxuICAgICAgICBnbC5saW5rUHJvZ3JhbShwcmcpXG4gICAgICAgIHRoaXMucHJnID0gcHJnXG4gICAgICAgIGNvbnN0IHZlcnRCdWZmID0gZ2wuY3JlYXRlQnVmZmVyKClcbiAgICAgICAgaWYgKCF2ZXJ0QnVmZikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIEJ1ZmZlciFcIilcbiAgICAgICAgdGhpcy52ZXJ0QnVmZiA9IHZlcnRCdWZmXG5cbiAgICAgICAgY29uc3QgdmVydEFycmF5ID0gZ2wuY3JlYXRlVmVydGV4QXJyYXkoKVxuICAgICAgICBpZiAoIXZlcnRBcnJheSkgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFZlcnRleCBBcnJheSBPYmplY3QhXCIpXG4gICAgICAgIHRoaXMudmVydEFycmF5ID0gdmVydEFycmF5XG4gICAgICAgIGdsLmJpbmRWZXJ0ZXhBcnJheSh2ZXJ0QXJyYXkpXG4gICAgICAgIGNvbnN0IEJQRSA9IEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVFxuICAgICAgICBjb25zdCBzdHJpZGUgPSBQYWludGVyLkFUVFJJQlNfQ09VTlQgKiBCUEVcbiAgICAgICAgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsIHRoaXMudmVydEJ1ZmYpXG4gICAgICAgIGNvbnN0IF9hdHRQb3MgPSBnbC5nZXRBdHRyaWJMb2NhdGlvbihwcmcsIFwiYXR0UG9zXCIpXG4gICAgICAgIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KF9hdHRQb3MpXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYlBvaW50ZXIoX2F0dFBvcywgMiwgZ2wuRkxPQVQsIGZhbHNlLCBzdHJpZGUsIDAgKiBCUEUpXG4gICAgfVxuXG4gICAgcHVibGljIGNyZWF0ZVZlcnREYXRhQXJyYXkodmVydENvdW50OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy52ZXJ0Q291bnQgPSB2ZXJ0Q291bnRcbiAgICAgICAgdGhpcy52ZXJ0RGF0YSA9IG5ldyBGbG9hdDMyQXJyYXkodmVydENvdW50ICogMilcbiAgICB9XG4gICAgcHVibGljIHB1c2hWZXJ0RGF0YSgpIHtcbiAgICAgICAgY29uc3QgeyBnbCB9ID0gdGhpc1xuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgdGhpcy52ZXJ0QnVmZilcbiAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHRoaXMudmVydERhdGEsIGdsLlNUQVRJQ19EUkFXKVxuICAgIH1cblxuICAgIHB1YmxpYyBwb2tlVmVydERhdGEoXG4gICAgICAgIHZlcnRleEluZGV4OiBudW1iZXIsXG4gICAgICAgIGF0dFBvc19YOiBudW1iZXIsXG4gICAgICAgIGF0dFBvc19ZOiBudW1iZXJcbiAgICApIHtcbiAgICAgICAgbGV0IGluZGV4ID0gdmVydGV4SW5kZXggKiBQYWludGVyLkFUVFJJQlNfQ09VTlRcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMudmVydERhdGFcbiAgICAgICAgOyhkYXRhW2luZGV4KytdID0gYXR0UG9zX1gpLCAoZGF0YVtpbmRleCsrXSA9IGF0dFBvc19ZKVxuICAgIH1cblxuICAgIHB1YmxpYyBkZXN0cm95KCkge1xuICAgICAgICBjb25zdCB7IGdsLCBwcmcsIHZlcnRCdWZmIH0gPSB0aGlzXG4gICAgICAgIGdsLmRlbGV0ZUJ1ZmZlcih2ZXJ0QnVmZilcbiAgICAgICAgZ2wuZGVsZXRlUHJvZ3JhbShwcmcpXG4gICAgICAgIGdsLmRlbGV0ZVZlcnRleEFycmF5KHRoaXMudmVydEFycmF5KVxuICAgIH1cblxuICAgIHB1YmxpYyByZWFkb25seSBwYWludCA9IChcbiAgICAgICAgdGltZTogbnVtYmVyLFxuICAgICAgICBvblBhaW50PzogKHBhaW50ZXI6IFBhaW50ZXIsIHRpbWU6IG51bWJlcikgPT4gdm9pZFxuICAgICkgPT4ge1xuICAgICAgICBjb25zdCB7IGdsLCBwcmcgfSA9IHRoaXNcbiAgICAgICAgZ2wudXNlUHJvZ3JhbShwcmcpXG4gICAgICAgIGlmIChvblBhaW50KSBvblBhaW50KHRoaXMsIHRpbWUpXG4gICAgICAgIGdsLmJpbmRWZXJ0ZXhBcnJheSh0aGlzLnZlcnRBcnJheSlcbiAgICAgICAgZ2wuZHJhd0FycmF5cyhnbC5UUklBTkdMRVMsIDAsIHRoaXMudmVydENvdW50KVxuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGNyZWF0ZVNoYWRlcihcbiAgICAgICAgZ2w6IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQsXG4gICAgICAgIHByZzogV2ViR0xQcm9ncmFtLFxuICAgICAgICB0eXBlOiBudW1iZXIsXG4gICAgICAgIGNvZGU6IHN0cmluZ1xuICAgICkge1xuICAgICAgICBjb25zdCBzaGFkZXIgPSBnbC5jcmVhdGVTaGFkZXIodHlwZSlcbiAgICAgICAgaWYgKCFzaGFkZXIpIHRocm93IEVycm9yKFwiVW5hYmxlIHRvIGNyZWF0ZSBXZWJHTCBTaGFkZXIhXCIpXG5cbiAgICAgICAgZ2wuc2hhZGVyU291cmNlKHNoYWRlciwgY29kZSlcbiAgICAgICAgZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpXG4gICAgICAgIGdsLmF0dGFjaFNoYWRlcihwcmcsIHNoYWRlcilcbiAgICB9XG5cbiAgICBzdGF0aWMgcmVhZG9ubHkgVkVSVCA9IGAjdmVyc2lvbiAzMDAgZXNcbmluIHZlYzIgYXR0UG9zO1xudm9pZCBtYWluKCl7Z2xfUG9zaXRpb249dmVjNChhdHRQb3MsMC4wLDEuMCk7fWBcbiAgICBzdGF0aWMgcmVhZG9ubHkgRlJBRyA9IGAjdmVyc2lvbiAzMDAgZXNcbnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xub3V0IHZlYzQgRnJhZ0NvbG9yO1xudm9pZCBtYWluKCl7RnJhZ0NvbG9yPXZlYzQoMS4wLDAuNSwwLjAsMS4wKTt9YFxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vd2ViZ2wyY29udGV4dC12aWV3J1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBDb2RlIGZyb20gXCJAL3ZpZXcvY29kZVwiXG5pbXBvcnQgQ29kZUNvbnRlbnQgZnJvbSBcIi4vY29udGV4dC5jb2RlXCJcbmltcG9ydCBDb2RlSFRNTCBmcm9tIFwiLi9odG1sLmNvZGVcIlxuaW1wb3J0IE1hcmtkb3duIGZyb20gXCJAL3ZpZXcvbWFya2Rvd25cIlxuaW1wb3J0IFNjZW5lLCB7IFBhaW50RnVuYyB9IGZyb20gXCJAL3ZpZXcvc2NlbmVcIlxuaW1wb3J0IFRleHQxIGZyb20gXCIuL3RleHQuMS5tZFwiXG5pbXBvcnQgXCIuL3dlYmdsMmNvbnRleHQtdmlldy5jc3NcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFdlYmdsMmNvbnRleHRWaWV3UHJvcHMge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBXZWJnbDJjb250ZXh0Vmlldyhwcm9wczogV2ViZ2wyY29udGV4dFZpZXdQcm9wcykge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxhcnRpY2xlIGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9PlxuICAgICAgICAgICAgPFNjZW5lIGNsYXNzTmFtZT1cInNtYWxsIG1hcmdpbi1sZWZ0XCIgb25Jbml0PXtyZW5kZXJ9IC8+XG4gICAgICAgICAgICA8TWFya2Rvd25cbiAgICAgICAgICAgICAgICB0cz17e1xuICAgICAgICAgICAgICAgICAgICBjb2RlOiBDb2RlQ29udGVudFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge1RleHQxfVxuICAgICAgICAgICAgPC9NYXJrZG93bj5cbiAgICAgICAgICAgIDxDb2RlXG4gICAgICAgICAgICAgICAgZXhwYW5kZWQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIGxhbmc9XCJodG1sXCJcbiAgICAgICAgICAgICAgICBsYWJlbD1cIkxlIGNvZGUgY29tcGxldCBkYW5zIHVuZSBwYWdlIEhUTUxcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXtDb2RlSFRNTH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgIDwvYXJ0aWNsZT5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IFdlYmdsMmNvbnRleHRWaWV3UHJvcHMpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBbXCJjdXN0b21cIiwgXCJwYWdlcy1hcnRpY2xlcy1XZWJnbDJjb250ZXh0Vmlld1wiXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cblxuYXN5bmMgZnVuY3Rpb24gcmVuZGVyKGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0KTogUHJvbWlzZTxQYWludEZ1bmM+IHtcbiAgICByZXR1cm4gKHRpbWU6IG51bWJlcikgPT4ge1xuICAgICAgICBjb25zdCByZWQgPSBNYXRoLmFicyhNYXRoLmNvcyh0aW1lICogMC4wMDA1MTE1KSlcbiAgICAgICAgY29uc3QgZ3JlZW4gPSBNYXRoLmFicyhNYXRoLmNvcyh0aW1lICogMC4wMDA4MTcyKSlcbiAgICAgICAgY29uc3QgYmx1ZSA9IE1hdGguYWJzKE1hdGguY29zKHRpbWUgKiAwLjAwMDYxMzEpKVxuICAgICAgICBjb25zdCBhbHBoYSA9IDFcbiAgICAgICAgZ2wuY2xlYXJDb2xvcihyZWQsIGdyZWVuLCBibHVlLCBhbHBoYSlcbiAgICAgICAgZ2wuY2xlYXIoZ2wuQ09MT1JfQlVGRkVSX0JJVClcbiAgICB9XG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi93ZWxjb21lJ1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBNYXJrZG93biBmcm9tIFwiQC92aWV3L21hcmtkb3duXCJcbmltcG9ydCBXZWxjb21lQ29udGVudCBmcm9tIFwiLi93ZWxjb21lLm1kXCJcbmltcG9ydCBcIi4vd2VsY29tZS5jc3NcIlxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgV2VsY29tZVByb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gV2VsY29tZShwcm9wczogV2VsY29tZVByb3BzKSB7XG4gICAgcmV0dXJuIDxhcnRpY2xlIGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9PlxuICAgICAgICA8TWFya2Rvd24+e1dlbGNvbWVDb250ZW50fTwvTWFya2Rvd24+XG4gICAgPC9hcnRpY2xlPlxufVxuXG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IFdlbGNvbWVQcm9wcyk6IHN0cmluZyB7XG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IFsnY3VzdG9tJywgJ3BhZ2VzLXRvb2xzLVdlbGNvbWUnXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cblxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oJyAnKVxufVxuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBCdXR0b24gZnJvbSBcIkAvdWkvdmlldy9idXR0b25cIlxuaW1wb3J0IENoZWNrYm94IGZyb20gXCJAL3VpL3ZpZXcvY2hlY2tib3hcIlxuaW1wb3J0IENvZGUgZnJvbSBcIkAvdmlldy9jb2RlXCJcbmltcG9ydCBDb21ibyBmcm9tIFwiQC91aS92aWV3L3NpbXBsZS1jb21ib1wiXG5pbXBvcnQgeyBDb2RlT3B0aW9ucyB9IGZyb20gXCIuL3R5cGVzXCJcbmltcG9ydCB7IG1ha2VQYWludGVyQ2xhc3NDb2RlIH0gZnJvbSBcIi4vY29kZS9jbGFzc1wiXG5pbXBvcnQgeyBQcm9ncmFtQW5hbHlzZSB9IGZyb20gXCJAL3dlYmdsMi9hbmFseXNlLXByb2dyYW1cIlxuaW1wb3J0IHsgdXNlUGVyc2lzdGVudFN0YXRlIH0gZnJvbSBcIkAvdG9vbHMvcGVyc2lzdGVuY2VcIlxuaW1wb3J0IFwiLi9jb2RlLWdlbmVyYXRvci12aWV3LmNzc1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29kZUdlbmVyYXRvclZpZXdQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgcHJvamVjdDogc3RyaW5nXG4gICAgb3B0aW9uczogQ29kZU9wdGlvbnNcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29kZUdlbmVyYXRvclZpZXcocHJvcHM6IENvZGVHZW5lcmF0b3JWaWV3UHJvcHMpIHtcbiAgICBjb25zdCBjb2RlID0gbWFrZVBhaW50ZXJDbGFzc0NvZGUocHJvcHMub3B0aW9ucylcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9PlxuICAgICAgICAgICAgPENvZGVcbiAgICAgICAgICAgICAgICBsYWJlbD17YENvZGUgZHUgUGFpbnRlciAoJHtjb2RlLmxlbmd0aH0gb2N0ZXRzKWB9XG4gICAgICAgICAgICAgICAgdmFsdWU9e2NvZGV9XG4gICAgICAgICAgICAgICAgbGFuZz1cInR5cGVzY3JpcHRcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBDb2RlR2VuZXJhdG9yVmlld1Byb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gW1wiY3VzdG9tXCIsIFwicGFnZXMtdG9vbHMtcGFpbnRlci1Db2RlR2VuZXJhdG9yVmlld1wiXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cblxuYXN5bmMgZnVuY3Rpb24gY29weShjb2RlOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICB0cnkge1xuICAgICAgICBhd2FpdCBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChjb2RlKVxuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJVbmFibGUgdG8gY29weSB0byB0aGUgY2xpcGJvYXJkOlwiLCBleClcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBBdHRyaWJ1dGVEZXNjcmlwdGlvbiB9IGZyb20gXCJAL3dlYmdsMi9hbmFseXNlLXByb2dyYW0vYXR0cmlidXRlc1wiXG5pbXBvcnQgeyBjYXBpdGFsaXplIH0gZnJvbSBcIkAvdG9vbHMvc3RyaW5nc1wiXG5pbXBvcnQgeyBDb2RlT3B0aW9ucyB9IGZyb20gXCIuLi90eXBlc1wiXG5pbXBvcnQgeyBnZXREaXZpc29yRm9yQXR0aWJ1dGUsIGdldER5bmFtaWNNb2RlRm9yQXR0aWJ1dGUgfSBmcm9tIFwiLi4vLi4vY29tbW9uXCJcblxuZXhwb3J0IGludGVyZmFjZSBBdHRyaWJ1dGVzR3JvdXAge1xuICAgIGF0dHJpYnV0ZXM6IEF0dHJpYnV0ZURlc2NyaXB0aW9uW11cbiAgICAvKiogV2lsbCBiZSB1cGRhdGVkIG9mdGVuLiAqL1xuICAgIGR5bmFtaWM6IGJvb2xlYW5cbiAgICAvKiogSW50ZWdlci4gSWYgbW9yZSB0aGFuIDAsIHRoaXMgaXMgYW4gaW5zdGFuY2UgYXR0cmlidXRlLiAqL1xuICAgIGRpdmlzb3I6IG51bWJlclxuICAgIC8qKlxuICAgICAqIEV4YW1wbGVzIG9mIGJhc2UgbmFtZXMgZm9yOlxuICAgICAqIC0gYSBzdGF0aWMgdmVydGV4IGF0dHJpYnV0ZTogXCJ2ZXJ0XCJcbiAgICAgKiAtIGEgZHluYW1pYyB2ZXJ0ZXggYXR0cmlidXRlOiBcInZlcnREeW5cIlxuICAgICAqIC0gYSBzdGF0aWMgaW5zdGFuY2UgYXR0cmlidXRlOiBcImluc3RcIlxuICAgICAqIC0gYSBkeW5hbWljIGluc3RhbmNlIGF0dHJpYnV0ZTogXCJpbnN0RHluXCJcbiAgICAgKiAtIGEgc3RhdGljIGluc3RhbmNlIGF0dHJpYnV0ZSB3aXRoIGRpdmlzb3IgMzogXCJpbnN0RXZlcnkzXCJcbiAgICAgKiAtIGEgZHluYW1pYyBpbnN0YW5jZSBhdHRyaWJ1dGUgd2l0aCBkaXZpc29yIDM6IFwiaW5zdEV2ZXJ5M0R5blwiXG4gICAgICovXG4gICAgYmFzZU5hbWU6IHN0cmluZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZUF0dHJpYnV0ZXNMb2NhdGlvbnNDb2RlKG9wdGlvbnM6IENvZGVPcHRpb25zKTogc3RyaW5nIHtcbiAgICByZXR1cm4gb3B0aW9ucy5hdHRyaWJ1dGVzXG4gICAgICAgIC5tYXAoXG4gICAgICAgICAgICAoYXR0KSA9PlxuICAgICAgICAgICAgICAgIGBwcml2YXRlIHJlYWRvbmx5IF8ke1xuICAgICAgICAgICAgICAgICAgICBhdHQubmFtZVxuICAgICAgICAgICAgICAgIH06IG51bWJlcmBcbiAgICAgICAgKVxuICAgICAgICAuam9pbihcIlxcblwiKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZUJpbmRBdHRyaWJ1dGVzQ29kZShvcHRpb25zOiBDb2RlT3B0aW9ucyk6IHN0cmluZyB7XG4gICAgY29uc3QgY29kZSA9IFtcbiAgICAgICAgXCJjb25zdCB2ZXJ0QXJyYXkgPSBnbC5jcmVhdGVWZXJ0ZXhBcnJheSgpXCIsXG4gICAgICAgICdpZiAoIXZlcnRBcnJheSkgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFZlcnRleCBBcnJheSBPYmplY3QhXCIpJyxcbiAgICAgICAgXCJ0aGlzLnZlcnRBcnJheSA9IHZlcnRBcnJheVwiLFxuICAgICAgICBcImdsLmJpbmRWZXJ0ZXhBcnJheSh2ZXJ0QXJyYXkpXCIsXG4gICAgICAgIFwiY29uc3QgQlBFID0gRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXCIsXG4gICAgXVxuICAgIGNvbnN0IGdyb3VwcyA9IG1ha2VBdHRyaWJ1dGVzR3JvdXBzKG9wdGlvbnMpXG4gICAgZm9yIChjb25zdCBncm91cCBvZiBncm91cHMpIHtcbiAgICAgICAgY29uc3QgeyBhdHRyaWJ1dGVzIH0gPSBncm91cFxuICAgICAgICBjb25zdCBhdHRyaWJ1dGVzTGVuZ3RoID0gY29tcHV0ZUF0dHJpYnV0ZXNUb3RhbExlbmd0aChhdHRyaWJ1dGVzKVxuICAgICAgICBjb25zdCBiYXNlID0gZ3JvdXAuYmFzZU5hbWVcbiAgICAgICAgY29uc3QgQmFzZSA9IGNhcGl0YWxpemUoYmFzZSlcbiAgICAgICAgY29kZS5wdXNoKFxuICAgICAgICAgICAgYGNvbnN0IHN0cmlkZSR7QmFzZX0gPSAke2F0dHJpYnV0ZXNMZW5ndGh9ICogQlBFYCxcbiAgICAgICAgICAgIGBjb25zdCAke2Jhc2V9QnVmZiA9IGdsLmNyZWF0ZUJ1ZmZlcigpYCxcbiAgICAgICAgICAgIGBpZiAoISR7YmFzZX1CdWZmKSB0aHJvdyBFcnJvcihcIlVuYWJsZSB0byBjcmVhdGUgV2ViR0wgQnVmZmVyICgke2Jhc2V9KSFcIilgLFxuICAgICAgICAgICAgYHRoaXMuJHtiYXNlfUJ1ZmYgPSAke2Jhc2V9QnVmZmAsXG4gICAgICAgICAgICBgZ2wuYmluZEJ1ZmZlcihnbC5BUlJBWV9CVUZGRVIsICR7YmFzZX1CdWZmKWAsXG4gICAgICAgICAgICBgdGhpcy4ke2Jhc2V9RGF0YSA9IG5ldyBGbG9hdDMyQXJyYXkoJHthdHRyaWJ1dGVzTGVuZ3RofSAqICR7Z2V0VmVydE9ySW5zdENvdW50KFxuICAgICAgICAgICAgICAgIGdyb3VwXG4gICAgICAgICAgICApfSlgLFxuICAgICAgICAgICAgYGdsLmJ1ZmZlckRhdGEoZ2wuQVJSQVlfQlVGRkVSLCB0aGlzLiR7YmFzZX1EYXRhLCBnbC4ke1xuICAgICAgICAgICAgICAgIGdyb3VwLmR5bmFtaWMgPyBcIkRZTkFNSUNcIiA6IFwiU1RBVElDXCJcbiAgICAgICAgICAgIH1fRFJBVylgXG4gICAgICAgIClcbiAgICAgICAgbGV0IG9mZnNldCA9IDBcbiAgICAgICAgZm9yIChjb25zdCBhdHQgb2YgYXR0cmlidXRlcykge1xuICAgICAgICAgICAgY29kZS5wdXNoKFxuICAgICAgICAgICAgICAgIGBjb25zdCBfJHthdHQubmFtZX0gPSBnbC5nZXRBdHRyaWJMb2NhdGlvbihwcmcsIFwiJHthdHQubmFtZX1cIilgLFxuICAgICAgICAgICAgICAgIGBnbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheShfJHthdHQubmFtZX0pYCxcbiAgICAgICAgICAgICAgICBgZ2wudmVydGV4QXR0cmliUG9pbnRlcihfJHthdHQubmFtZX0sICR7YXR0LnNpemV9LCBnbC5GTE9BVCwgZmFsc2UsIHN0cmlkZSR7QmFzZX0sICR7b2Zmc2V0fSAqIEJQRSlgLFxuICAgICAgICAgICAgICAgIGBnbC52ZXJ0ZXhBdHRyaWJEaXZpc29yKF8ke2F0dC5uYW1lfSwgJHtnZXREaXZpc29yRm9yQXR0aWJ1dGUoXG4gICAgICAgICAgICAgICAgICAgIGF0dC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zXG4gICAgICAgICAgICAgICAgKX0pYFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgb2Zmc2V0ICs9IGF0dC5zaXplICogYXR0Lmxlbmd0aFxuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChvcHRpb25zLmRyYXdFbGVtZW50cykge1xuICAgICAgICBjb2RlLnB1c2goXG4gICAgICAgICAgICBgY29uc3QgZWxlbUJ1ZmYgPSBnbC5jcmVhdGVCdWZmZXIoKWAsXG4gICAgICAgICAgICBgaWYgKCFlbGVtQnVmZikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIEJ1ZmZlciAoZWxlbSkhXCIpYCxcbiAgICAgICAgICAgIGB0aGlzLmVsZW1CdWZmID0gZWxlbUJ1ZmZgLFxuICAgICAgICAgICAgXCJnbC5iaW5kQnVmZmVyKGdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLCBlbGVtQnVmZilcIlxuICAgICAgICApXG4gICAgfVxuICAgIGNvZGUucHVzaChcImdsLmJpbmRWZXJ0ZXhBcnJheShudWxsKVwiKVxuICAgIHJldHVybiBjb2RlLmpvaW4oXCJcXG5cIilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVBdHRyaWJ1dGVzVG90YWxMZW5ndGgoXG4gICAgYXR0cmlidXRlczogQXR0cmlidXRlRGVzY3JpcHRpb25bXVxuKTogbnVtYmVyIHtcbiAgICBsZXQgbGVuZ3RoID0gMFxuICAgIGZvciAoY29uc3QgYXR0IG9mIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgbGVuZ3RoICs9IGF0dC5sZW5ndGggKiBhdHQuc2l6ZVxuICAgIH1cbiAgICByZXR1cm4gbGVuZ3RoXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlQXR0cmlidXRlc0dyb3VwcyhvcHRpb25zOiBDb2RlT3B0aW9ucyk6IEF0dHJpYnV0ZXNHcm91cFtdIHtcbiAgICBjb25zdCBtYXAgPSBuZXcgTWFwPHN0cmluZywgQXR0cmlidXRlc0dyb3VwPigpXG4gICAgZm9yIChjb25zdCBhdHQgb2Ygb3B0aW9ucy5hdHRyaWJ1dGVzKSB7XG4gICAgICAgIGNvbnN0IGRpdmlzb3IgPSBnZXREaXZpc29yRm9yQXR0aWJ1dGUoYXR0Lm5hbWUsIG9wdGlvbnMpXG4gICAgICAgIGNvbnN0IGR5bmFtaWMgPSBnZXREeW5hbWljTW9kZUZvckF0dGlidXRlKGF0dC5uYW1lLCBvcHRpb25zKVxuICAgICAgICBjb25zdCBrZXkgPSBgJHtkaXZpc29yfSR7ZHluYW1pY31gXG4gICAgICAgIGlmICghbWFwLmhhcyhrZXkpKVxuICAgICAgICAgICAgbWFwLnNldChrZXksIHtcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXSxcbiAgICAgICAgICAgICAgICBiYXNlTmFtZTogbWFrZUdyb3VwQmFzZU5hbWUoZGl2aXNvciwgZHluYW1pYyksXG4gICAgICAgICAgICAgICAgZHluYW1pYyxcbiAgICAgICAgICAgICAgICBkaXZpc29yLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgY29uc3QgZ3JvdXAgPSBtYXAuZ2V0KGtleSlcbiAgICAgICAgaWYgKCFncm91cCkgY29udGludWVcblxuICAgICAgICBncm91cC5hdHRyaWJ1dGVzLnB1c2goYXR0KVxuICAgIH1cbiAgICByZXR1cm4gQXJyYXkuZnJvbShtYXAudmFsdWVzKCkpXG59XG5cbmZ1bmN0aW9uIG1ha2VHcm91cEJhc2VOYW1lKGRpdmlzb3I6IG51bWJlciwgZHluYW1pYzogYm9vbGVhbikge1xuICAgIGNvbnN0IHN1ZmZpeCA9IGR5bmFtaWMgPyBcIkR5bmFtaWNcIiA6IFwiU3RhdGljXCJcbiAgICBpZiAoZGl2aXNvciA9PT0gMSkgcmV0dXJuIGBpbnN0JHtzdWZmaXh9YFxuICAgIGlmIChkaXZpc29yID4gMSkgcmV0dXJuIGBpbnN0RXZlcnkke2Rpdmlzb3J9JHtzdWZmaXh9YFxuICAgIHJldHVybiBgdmVydCR7c3VmZml4fWBcbn1cblxuZnVuY3Rpb24gZ2V0VmVydE9ySW5zdENvdW50KGdyb3VwOiBBdHRyaWJ1dGVzR3JvdXApIHtcbiAgICBjb25zdCB7IGRpdmlzb3IgfSA9IGdyb3VwXG4gICAgc3dpdGNoIChkaXZpc29yKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIHJldHVybiBcInZlcnRDb3VudFwiXG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIHJldHVybiBcImluc3RDb3VudFwiXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gYE1hdGguZmxvb3IoaW5zdENvdW50IC8gJHtkaXZpc29yfSlgXG4gICAgfVxufVxuIiwiaW1wb3J0IHsgQ29kZU9wdGlvbnMgfSBmcm9tIFwiLi8uLi90eXBlc1wiXG5pbXBvcnQgeyBtYWtlQXR0cmlidXRlc0dyb3VwcyB9IGZyb20gXCIuL2F0dHJpYnV0ZVwiXG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlQnVmZmVyc0NvZGUob3B0aW9uczogQ29kZU9wdGlvbnMpIHtcbiAgICBjb25zdCBidWZmZXJzOiBzdHJpbmdbXSA9IFtdXG4gICAgY29uc3QgZ3JvdXBzID0gbWFrZUF0dHJpYnV0ZXNHcm91cHMob3B0aW9ucylcbiAgICBmb3IgKGNvbnN0IGdyb3VwIG9mIGdyb3Vwcykge1xuICAgICAgICBidWZmZXJzLnB1c2goZ3JvdXAuYmFzZU5hbWUpXG4gICAgfVxuICAgIGlmIChvcHRpb25zLmRyYXdFbGVtZW50cykgYnVmZmVycy5wdXNoKFwiZWxlbVwiKVxuICAgIHJldHVybiBidWZmZXJzXG4gICAgICAgIC5tYXAoXG4gICAgICAgICAgICAobmFtZSkgPT5cbiAgICAgICAgICAgICAgICBgcHJpdmF0ZSByZWFkb25seSAke25hbWV9QnVmZjogV2ViR0xCdWZmZXJgXG4gICAgICAgIClcbiAgICAgICAgLmpvaW4oXCJcXG5cIilcbn1cbiIsImltcG9ydCB7IGNhcGl0YWxpemUgfSBmcm9tIFwiQC90b29scy9zdHJpbmdzXCJcbmltcG9ydCB7IENvZGVPcHRpb25zIH0gZnJvbSBcIi4uL3R5cGVzXCJcbmltcG9ydCB7IGdldEFycmF5VHlwZUZvckVsZW1lbnQgfSBmcm9tIFwiLi4vLi4vY29tbW9uXCJcbmltcG9ydCB7IGluZGVudCB9IGZyb20gXCIuL2NvbW1vblwiXG5pbXBvcnQgeyBtYWtlQXR0cmlidXRlc0dyb3VwcyB9IGZyb20gXCIuL2F0dHJpYnV0ZVwiXG5pbXBvcnQgeyBtYWtlQnVmZmVyc0NvZGUgfSBmcm9tIFwiLi9idWZmZXJcIlxuaW1wb3J0IHsgbWFrZUNvbnN0cnVjdG9yQ29kZSB9IGZyb20gXCIuL2NvbnN0cnVjdG9yXCJcbmltcG9ydCB7IG1ha2VDcmVhdGVTaGFkZXJGdW5jdGlvbkNvZGUgfSBmcm9tIFwiLi9jcmVhdGVcIlxuaW1wb3J0IHsgbWFrZURlc3Ryb3lGdW5jdGlvbkNvZGUgfSBmcm9tIFwiLi9kZXN0cm95XCJcbmltcG9ydCB7IG1ha2VQYWludEZ1bmN0aW9uQ29kZSB9IGZyb20gXCIuL3BhaW50XCJcbmltcG9ydCB7IG1ha2VVbmlmb3Jtc0NvZGUsIG1ha2VVbmlmb3Jtc0xvY2F0aW9uc0NvZGUgfSBmcm9tIFwiLi91bmlmb3JtXCJcbmltcG9ydCB7XG4gICAgbWFrZUNyZWF0ZURhdGFBcnJheUZ1bmN0aW9uQ29kZSxcbiAgICBtYWtlUG9rZURhdGFGdW5jdGlvbkNvZGUsXG4gICAgbWFrZVB1c2hEYXRhLFxuICAgIG1ha2VTd2FwRGF0YUZ1bmN0aW9uQ29kZSxcbn0gZnJvbSBcIi4vZGF0YVwiXG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlUGFpbnRlckNsYXNzQ29kZShvcHRpb25zOiBDb2RlT3B0aW9ucyk6IHN0cmluZyB7XG4gICAgY29uc3QgZGF0ZUZvcm1hdHRlciA9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KFwiZnJcIilcbiAgICByZXR1cm4gYC8qKlxuICogQ29kZSBnw6luw6lyw6kgYXV0b21hdGlxdWVtZW50IGxlICR7ZGF0ZUZvcm1hdHRlci5mb3JtYXQobmV3IERhdGUoKSl9XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzICR7b3B0aW9ucy5jbGFzc05hbWV9IHtcbiR7aW5kZW50KG1ha2VCdWZmZXJzQ29kZShvcHRpb25zKSl9XG4ke2luZGVudChtYWtlVmVydGV4QXJyYXlPYmplY3Qob3B0aW9ucykpfVxuJHtpbmRlbnQobWFrZVVuaWZvcm1zTG9jYXRpb25zQ29kZShvcHRpb25zKSl9XG4ke2luZGVudChtYWtlVmVydGV4QW5kSW5zdGFuY2VGbG9hdDMyQXJyYXlzKG9wdGlvbnMpKX1cbiAgICBwcml2YXRlIHJlYWRvbmx5IHByZzogV2ViR0xQcm9ncmFtXG5cbiR7aW5kZW50KG1ha2VDb25zdHJ1Y3RvckNvZGUob3B0aW9ucykpfVxuXG4ke2luZGVudChtYWtlQ3JlYXRlRGF0YUFycmF5RnVuY3Rpb25Db2RlKG9wdGlvbnMpKX1cblxuJHtpbmRlbnQobWFrZVB1c2hEYXRhKG9wdGlvbnMpKX1cblxuJHtpbmRlbnQobWFrZVBva2VEYXRhRnVuY3Rpb25Db2RlKG9wdGlvbnMpKX1cblxuJHtpbmRlbnQobWFrZVN3YXBEYXRhRnVuY3Rpb25Db2RlKG9wdGlvbnMpKX1cblxuJHtpbmRlbnQobWFrZURlc3Ryb3lGdW5jdGlvbkNvZGUob3B0aW9ucykpfVxuXG4ke2luZGVudChtYWtlUGFpbnRGdW5jdGlvbkNvZGUob3B0aW9ucykpfVxuXG4ke2luZGVudChtYWtlVW5pZm9ybXNDb2RlKG9wdGlvbnMpKX1cblxuJHtpbmRlbnQobWFrZUNyZWF0ZVNoYWRlckZ1bmN0aW9uQ29kZShvcHRpb25zKSl9XG5cbiAgICBzdGF0aWMgcmVhZG9ubHkgVkVSVCA9IFxcYCR7XG4gICAgICAgIG9wdGlvbnMubWluaWZ5U2hhZGVyQ29kZVxuICAgICAgICAgICAgPyBjb21wcmVzc0dMU0wob3B0aW9ucy52ZXJ0Q29kZSlcbiAgICAgICAgICAgIDogb3B0aW9ucy52ZXJ0Q29kZVxuICAgIH1cXGBcbiAgICBzdGF0aWMgcmVhZG9ubHkgRlJBRyA9IFxcYCR7XG4gICAgICAgIG9wdGlvbnMubWluaWZ5U2hhZGVyQ29kZVxuICAgICAgICAgICAgPyBjb21wcmVzc0dMU0wob3B0aW9ucy5mcmFnQ29kZSlcbiAgICAgICAgICAgIDogb3B0aW9ucy5mcmFnQ29kZVxuICAgIH1cXGBcbn1cbmBcbn1cblxuLyoqXG4gKiBNaW5pZnkgR0xTTCBjb2RlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcHJlc3NHTFNMKGNvZGU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgbGV0IHRleHQgPSBjb2RlXG4gICAgdGV4dCA9IHJlcGxhY2VBbGwodGV4dCwgL1xcL1xcL1teXFxuXFxyXSpcXG4vZywgXCJcIilcbiAgICB0ZXh0ID0gcmVwbGFjZUFsbCh0ZXh0LCAvXFwvXFwqLis/XFwqXFwvfFxcL1xcLy4qKD89W1xcblxccl0pL2csIFwiXCIpXG4gICAgdGV4dCA9IHRleHQuc3BsaXQoL1sgXFx0XSpcXG5bIFxcdFxcblxccl0qLykuam9pbihcIlxcblwiKVxuICAgIHRleHQgPSByZXBsYWNlQWxsKHRleHQsIC9cXHMqXFwrXFxzKi9nLCBcIitcIilcbiAgICB0ZXh0ID0gcmVwbGFjZUFsbCh0ZXh0LCAvXFxzKlxcKlxccyovZywgXCIqXCIpXG4gICAgdGV4dCA9IHJlcGxhY2VBbGwodGV4dCwgL1xccypcXC9cXHMqL2csIFwiL1wiKVxuICAgIHRleHQgPSByZXBsYWNlQWxsKHRleHQsIC9cXHMqLVxccyovZywgXCItXCIpXG4gICAgdGV4dCA9IHJlcGxhY2VBbGwodGV4dCwgL1xccyo9XFxzKi9nLCBcIj1cIilcbiAgICB0ZXh0ID0gcmVwbGFjZUFsbCh0ZXh0LCAvXFxzKixcXHMqL2csIFwiLFwiKVxuICAgIHRleHQgPSByZXBsYWNlQWxsKHRleHQsIC9cXHMqXFwoXFxzKi9nLCBcIihcIilcbiAgICB0ZXh0ID0gcmVwbGFjZUFsbCh0ZXh0LCAvXFxzKlxcKVxccyovZywgXCIpXCIpXG4gICAgdGV4dCA9IHJlcGxhY2VBbGwodGV4dCwgL1xccypcXHtcXHMqL2csIFwie1wiKVxuICAgIHRleHQgPSByZXBsYWNlQWxsKHRleHQsIC9cXHMqXFx9XFxzKi9nLCBcIn1cIilcbiAgICByZXR1cm4gdGV4dFxufVxuXG5mdW5jdGlvbiByZXBsYWNlQWxsKHRleHQ6IHN0cmluZywgc291cmNlOiBSZWdFeHAsIGRlc3RpbmF0aW9uOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiB0ZXh0LnNwbGl0KHNvdXJjZSkuam9pbihkZXN0aW5hdGlvbilcbn1cblxuZnVuY3Rpb24gbWFrZVZlcnRleEFuZEluc3RhbmNlRmxvYXQzMkFycmF5cyhvcHRpb25zOiBDb2RlT3B0aW9ucyk6IHN0cmluZyB7XG4gICAgY29uc3QgY29kZTogc3RyaW5nW10gPSBbXVxuICAgIGNvbnN0IGdyb3VwcyA9IG1ha2VBdHRyaWJ1dGVzR3JvdXBzKG9wdGlvbnMpXG4gICAgZm9yIChjb25zdCBncm91cCBvZiBncm91cHMpIHtcbiAgICAgICAgY29kZS5wdXNoKFxuICAgICAgICAgICAgYHByaXZhdGUgcmVhZG9ubHkgJHtncm91cC5iYXNlTmFtZX1EYXRhOiBGbG9hdDMyQXJyYXlgLCBcbiAgICAgICAgICAgIGAvKipgLFxuICAgICAgICAgICAgYCAqIETDqXRlcm1pbmUgcXVlbCR7Z3JvdXAuZGl2aXNvcj4wID8gXCIgdmVydGV4XCI6IFwibGUgaW5zdGFuY2VcIn0gbGEgZm9uY3Rpb25gLFxuICAgICAgICAgICAgYCAqIFxcYHBva2Uke2NhcGl0YWxpemUoZ3JvdXAuYmFzZU5hbWUpfURhdGEoKVxcYCBtZXQgw6Agam91ci5gLFxuICAgICAgICAgICAgYCAqIElsIHMnaW5jcsOpbWVudGUgw6AgY2hhcXVlIGFwcGVsIGRlIFxcYHBva2Uke2NhcGl0YWxpemUoZ3JvdXAuYmFzZU5hbWUpfURhdGEoKVxcYGAsXG4gICAgICAgICAgICBgICovYCxcbiAgICAgICAgICAgIGBwdWJsaWMgJHtncm91cC5iYXNlTmFtZX1DdXJzb3IgPSAwYClcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuZHJhd0VsZW1lbnRzKVxuICAgICAgICBjb2RlLnB1c2goXG4gICAgICAgICAgICBgcHJpdmF0ZSByZWFkb25seSBlbGVtRGF0YTogJHtnZXRBcnJheVR5cGVGb3JFbGVtZW50KG9wdGlvbnMpfWBcbiAgICAgICAgKVxuICAgIHJldHVybiBjb2RlLmpvaW4oXCJcXG5cIilcbn1cblxuZnVuY3Rpb24gbWFrZVZlcnRleEFycmF5T2JqZWN0KG9wdGlvbnM6IENvZGVPcHRpb25zKTogc3RyaW5nIHtcbiAgICByZXR1cm4gXCJwcml2YXRlIHJlYWRvbmx5IHZlcnRBcnJheTogV2ViR0xWZXJ0ZXhBcnJheU9iamVjdFwiXG59XG4iLCJleHBvcnQgZnVuY3Rpb24gaW5kZW50KGNvZGU6IHN0cmluZywgaW5kZW50YXRpb246IG51bWJlciA9IDQpIHtcbiAgICBjb25zdCBwcmVmaXggPSBBcnJheShpbmRlbnRhdGlvbikuZmlsbChcIiBcIikuam9pbihcIlwiKVxuICAgIHJldHVybiBjb2RlXG4gICAgICAgIC5zcGxpdChcIlxcblwiKVxuICAgICAgICAubWFwKChsaW5lKSA9PiBgJHtwcmVmaXh9JHtsaW5lfWApXG4gICAgICAgIC5qb2luKFwiXFxuXCIpXG59XG4iLCJpbXBvcnQgeyBDb2RlT3B0aW9ucyB9IGZyb20gXCIuLi90eXBlc1wiXG5pbXBvcnQgeyBnZXREaXZpc29yRm9yQXR0aWJ1dGUgfSBmcm9tIFwiLi4vLi4vY29tbW9uXCJcbmltcG9ydCB7IGluZGVudCB9IGZyb20gXCIuL2NvbW1vblwiXG5pbXBvcnQgeyBtYWtlQmluZEF0dHJpYnV0ZXNDb2RlIH0gZnJvbSBcIi4vYXR0cmlidXRlXCJcblxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VDb25zdHJ1Y3RvckNvZGUob3B0aW9uczogQ29kZU9wdGlvbnMpIHtcbiAgICBjb25zdCBoYXNJbnN0YW5jZXMgPVxuICAgICAgICBvcHRpb25zLmF0dHJpYnV0ZXMuZmlsdGVyKFxuICAgICAgICAgICAgKGF0dCkgPT4gZ2V0RGl2aXNvckZvckF0dGlidXRlKGF0dC5uYW1lLCBvcHRpb25zKSA+IDBcbiAgICAgICAgKS5sZW5ndGggPiAwXG4gICAgcmV0dXJuIGBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcmVhZG9ubHkgZ2w6IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQsXG4gICAgcHVibGljIHZlcnRDb3VudDogbnVtYmVyJHtcbiAgICAgICAgaGFzSW5zdGFuY2VzID8gXCIsXFxuICAgIHB1YmxpYyBpbnN0Q291bnQ6IG51bWJlclwiIDogXCJcIlxuICAgIH1cbikge1xuICAgIGNvbnN0IHByZyA9IGdsLmNyZWF0ZVByb2dyYW0oKVxuICAgIGlmICghcHJnKSB0aHJvdyBFcnJvcihcIlVuYWJsZSB0byBjcmVhdGUgYSBXZWJHTCBQcm9ncmFtIVwiKVxuICAgICR7b3B0aW9ucy5jbGFzc05hbWV9LmNyZWF0ZVNoYWRlcihnbCwgcHJnLCBnbC5WRVJURVhfU0hBREVSLCAke1xuICAgICAgICBvcHRpb25zLmNsYXNzTmFtZVxuICAgIH0uVkVSVClcbiAgICAke29wdGlvbnMuY2xhc3NOYW1lfS5jcmVhdGVTaGFkZXIoZ2wsIHByZywgZ2wuRlJBR01FTlRfU0hBREVSLCAke1xuICAgICAgICBvcHRpb25zLmNsYXNzTmFtZVxuICAgIH0uRlJBRylcbiAgICBnbC5saW5rUHJvZ3JhbShwcmcpXG4gICAgdGhpcy5wcmcgPSBwcmdcbiAgICAke21ha2VVbmlmb3Jtc0xvY2F0aW9uc0NvZGUob3B0aW9ucyl9XG4ke2luZGVudChtYWtlQmluZEF0dHJpYnV0ZXNDb2RlKG9wdGlvbnMpKX1cbn1gXG59XG5cbmZ1bmN0aW9uIG1ha2VVbmlmb3Jtc0xvY2F0aW9uc0NvZGUob3B0aW9uczogQ29kZU9wdGlvbnMpIHtcbiAgICByZXR1cm4gb3B0aW9ucy51bmlmb3Jtc1xuICAgICAgICAubWFwKFxuICAgICAgICAgICAgKHVuaSkgPT5cbiAgICAgICAgICAgICAgICBgdGhpcy5fJCR7dW5pLm5hbWV9ID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHByZywgXCIke1xuICAgICAgICAgICAgICAgICAgICB1bmkubmFtZVxuICAgICAgICAgICAgICAgIH1cIikgYXMgV2ViR0xVbmlmb3JtTG9jYXRpb25gXG4gICAgICAgIClcbiAgICAgICAgLmpvaW4oXCJcXG4gICAgXCIpXG59XG5cbmZ1bmN0aW9uIG1ha2VCdWZmZXJzQ29kZShvcHRpb25zOiBDb2RlT3B0aW9ucykge1xuICAgIGNvbnN0IGJ1ZmZlcnMgPSBbXCJ2ZXJ0XCJdXG4gICAgaWYgKG9wdGlvbnMuZHJhd0VsZW1lbnRzKSBidWZmZXJzLnB1c2goXCJlbGVtXCIpXG4gICAgcmV0dXJuIGJ1ZmZlcnNcbiAgICAgICAgLm1hcChcbiAgICAgICAgICAgIChuYW1lKSA9PiBgY29uc3QgJHtuYW1lfUJ1ZmYgPSBnbC5jcmVhdGVCdWZmZXIoKVxuICAgIGlmICghJHtuYW1lfUJ1ZmYpIHRocm93IEVycm9yKFwiVW5hYmxlIHRvIGNyZWF0ZSBXZWJHTCBCdWZmZXIhXCIpXG4gICAgdGhpcy4ke25hbWV9QnVmZiA9ICR7bmFtZX1CdWZmYFxuICAgICAgICApXG4gICAgICAgIC5qb2luKFwiXFxuICAgIFwiKVxufVxuIiwiaW1wb3J0IHsgQ29kZU9wdGlvbnMgfSBmcm9tIFwiLi4vdHlwZXNcIlxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZUNyZWF0ZVNoYWRlckZ1bmN0aW9uQ29kZShvcHRpb25zOiBDb2RlT3B0aW9ucykge1xuICAgIHJldHVybiBgcHJpdmF0ZSBzdGF0aWMgY3JlYXRlU2hhZGVyKGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0LCBwcmc6IFdlYkdMUHJvZ3JhbSwgdHlwZTogbnVtYmVyLCBjb2RlOiBzdHJpbmcpIHtcbiAgICBjb25zdCBzaGFkZXIgPSBnbC5jcmVhdGVTaGFkZXIodHlwZSlcbiAgICBpZiAoIXNoYWRlcikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIFNoYWRlciFcIilcblxuICAgIGdsLnNoYWRlclNvdXJjZShzaGFkZXIsIGNvZGUpXG4gICAgZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpXG4gICAgZ2wuYXR0YWNoU2hhZGVyKHByZywgc2hhZGVyKVxufWBcbn1cbiIsImltcG9ydCB7IGNhcGl0YWxpemUgfSBmcm9tIFwiQC90b29scy9zdHJpbmdzXCJcbmltcG9ydCB7IENvZGVPcHRpb25zIH0gZnJvbSBcIi4vLi4vdHlwZXNcIlxuaW1wb3J0IHsgY29tcHV0ZUF0dHJpYnV0ZXNUb3RhbExlbmd0aCwgbWFrZUF0dHJpYnV0ZXNHcm91cHMgfSBmcm9tIFwiLi9hdHRyaWJ1dGVcIlxuaW1wb3J0IHsgZ2V0QXJyYXlUeXBlRm9yRWxlbWVudCB9IGZyb20gXCIuLi8uLi9jb21tb25cIlxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZUNyZWF0ZURhdGFBcnJheUZ1bmN0aW9uQ29kZShvcHRpb25zOiBDb2RlT3B0aW9ucykge1xuICAgIGNvbnN0IGNvZGU6IHN0cmluZ1tdID0gW11cbiAgICBpZiAob3B0aW9ucy5kcmF3RWxlbWVudHMpIHtcbiAgICAgICAgY29kZS5wdXNoKGBwdWJsaWMgc2V0RWxlbURhdGEoZWxlbURhdGE6ICR7Z2V0QXJyYXlUeXBlRm9yRWxlbWVudChvcHRpb25zKX0pOiB2b2lkIHtcbiAgICB0aGlzLnZlcnRDb3VudCA9IGVsZW1EYXRhLmxlbmd0aFxuICAgIGNvbnN0IHsgZ2wsIHZlcnRDb3VudCB9ID0gdGhpc1xuICAgIGdsLmJpbmRCdWZmZXIoZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIHRoaXMuZWxlbUJ1ZmYpXG4gICAgZ2wuYnVmZmVyRGF0YShnbC5FTEVNRU5UX0FSUkFZX0JVRkZFUiwgZWxlbURhdGEsIGdsLlNUQVRJQ19EUkFXKVxufWApXG4gICAgfVxuICAgIHJldHVybiBjb2RlLmpvaW4oXCJcXG5cIilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VQb2tlRGF0YUZ1bmN0aW9uQ29kZShvcHRpb25zOiBDb2RlT3B0aW9ucykge1xuICAgIGNvbnN0IGNvZGU6IHN0cmluZ1tdID0gW11cbiAgICBjb25zdCBncm91cHMgPSBtYWtlQXR0cmlidXRlc0dyb3VwcyhvcHRpb25zKVxuICAgIGZvciAoY29uc3QgZ3JvdXAgb2YgZ3JvdXBzKSB7XG4gICAgICAgIGNvbnN0IHsgYXR0cmlidXRlcyB9ID0gZ3JvdXBcbiAgICAgICAgY29uc3QgYmFzZSA9IGdyb3VwLmJhc2VOYW1lXG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZXNMZW5ndGggPSBjb21wdXRlQXR0cmlidXRlc1RvdGFsTGVuZ3RoKGF0dHJpYnV0ZXMpXG4gICAgICAgIGNvbnN0IHZhck5hbWVzOiBzdHJpbmdbXSA9IFtdXG4gICAgICAgIGZvciAoY29uc3QgYXR0IG9mIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgbmFtZSwgc2l6ZSB9ID0gYXR0XG4gICAgICAgICAgICBpZiAoc2l6ZSA9PT0gMSkgdmFyTmFtZXMucHVzaChuYW1lKVxuICAgICAgICAgICAgZWxzZSBpZiAoc2l6ZSA9PT0gMikgdmFyTmFtZXMucHVzaChgJHtuYW1lfV9YYCwgYCR7bmFtZX1fWWApXG4gICAgICAgICAgICBlbHNlIGlmIChzaXplID09PSAzKVxuICAgICAgICAgICAgICAgIHZhck5hbWVzLnB1c2goYCR7bmFtZX1fWGAsIGAke25hbWV9X1lgLCBgJHtuYW1lfV9aYClcbiAgICAgICAgICAgIGVsc2UgaWYgKHNpemUgPT09IDQpXG4gICAgICAgICAgICAgICAgdmFyTmFtZXMucHVzaChcbiAgICAgICAgICAgICAgICAgICAgYCR7bmFtZX1fWGAsXG4gICAgICAgICAgICAgICAgICAgIGAke25hbWV9X1lgLFxuICAgICAgICAgICAgICAgICAgICBgJHtuYW1lfV9aYCxcbiAgICAgICAgICAgICAgICAgICAgYCR7bmFtZX1fV2BcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICBlbHNlIHRocm93IEVycm9yKGBVbmV4cGVjdGVkIHNpemUgJHtzaXplfSBmb3IgYXR0cmlidXRlIFwiJHtuYW1lfVwiIWApXG4gICAgICAgIH1cbiAgICAgICAgY29kZS5wdXNoKGBwdWJsaWMgcG9rZSR7Y2FwaXRhbGl6ZShiYXNlKX1EYXRhKFxuICAgICR7dmFyTmFtZXMubWFwKChuYW1lKSA9PiBgJHtuYW1lfTogbnVtYmVyYCkuam9pbihcIixcXG4gICAgXCIpfVxuKSB7XG4gICAgY29uc3QgdmVydEluZGV4ID0gdGhpcy4ke2Jhc2V9Q3Vyc29yXG4gICAgaWYgKHZlcnRJbmRleCA8IDAgfHwgdmVydEluZGV4ID49ICR7XG4gICAgICAgIGdyb3VwLmRpdmlzb3IgPT09IDAgP1xuICAgICAgICBcInRoaXMudmVydENvdW50XCIgOiAoXG4gICAgICAgICAgICBncm91cC5kaXZpc29yID09PSAxID9cbiAgICAgICAgICAgIFwidGhpcy5pbnN0Q291bnRcIiA6XG4gICAgICAgICAgICBgTWF0aC5mbG9vcih0aGlzLmluc3RDb3VudCAvICR7Z3JvdXAuZGl2aXNvcn0pYFxuICAgICAgICApXG4gICAgfSkgdGhyb3cgRXJyb3IoXFxgW3Bva2Uke2NhcGl0YWxpemUoYmFzZSl9RGF0YV0gQ3Vyc29yIG91dCBvZiByYW5nZTogJHtiYXNlfUN1cnNvciA9IFxcJHt2ZXJ0SW5kZXh9XFxgKVxuICAgIGNvbnN0IGRhdGEgPSB0aGlzLiR7YmFzZX1EYXRhXG4gICAgbGV0IGluZGV4ID0gdmVydEluZGV4ICogJHthdHRyaWJ1dGVzTGVuZ3RofVxuICAgICR7dmFyTmFtZXMubWFwKChuYW1lKSA9PiBgZGF0YVtpbmRleCsrXSA9ICR7bmFtZX1gKS5qb2luKFwiLFxcbiAgICBcIil9XG4gICAgdGhpcy4ke2Jhc2V9Q3Vyc29yKytcbn1gKVxuICAgIH1cbiAgICByZXR1cm4gY29kZS5qb2luKFwiXFxuXCIpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlU3dhcERhdGFGdW5jdGlvbkNvZGUob3B0aW9uczogQ29kZU9wdGlvbnMpIHtcbiAgICBjb25zdCBjb2RlOiBzdHJpbmdbXSA9IFtdXG4gICAgY29uc3QgZ3JvdXBzID0gbWFrZUF0dHJpYnV0ZXNHcm91cHMob3B0aW9ucylcbiAgICBmb3IgKGNvbnN0IGdyb3VwIG9mIGdyb3Vwcykge1xuICAgICAgICAvLyBXZSBwcm92aWRlIHN3YXAgb25seSBmb3IgZHluYW1pYyBhdHRyaWJ1dGVzLlxuICAgICAgICBpZiAoIWdyb3VwLmR5bmFtaWMpIGNvbnRpbnVlXG5cbiAgICAgICAgY29uc3QgeyBhdHRyaWJ1dGVzIH0gPSBncm91cFxuICAgICAgICBjb25zdCBhdHRyaWJ1dGVzTGVuZ3RoID0gY29tcHV0ZUF0dHJpYnV0ZXNUb3RhbExlbmd0aChhdHRyaWJ1dGVzKVxuICAgICAgICBjb2RlLnB1c2goYHB1YmxpYyBzdGF0aWMgc3dhcCR7Y2FwaXRhbGl6ZShncm91cC5iYXNlTmFtZSl9RGF0YShcbiAgICBkYXRhOiBGbG9hdDMyQXJyYXksXG4gICAgaW5kZXhBOiBudW1iZXIsXG4gICAgaW5kZXhCOiBudW1iZXIgICAgICAgIFxuKSB7XG4gICAgbGV0IHB0ckEgPSBpbmRleEEgKiAke2F0dHJpYnV0ZXNMZW5ndGh9XG4gICAgbGV0IHB0ckIgPSBpbmRleEIgKiAke2F0dHJpYnV0ZXNMZW5ndGh9XG4gICAgbGV0IHRtcDogbnVtYmVyID0gMFxuICAgICR7cmVwZWF0KFxuICAgICAgICBhdHRyaWJ1dGVzTGVuZ3RoLFxuICAgICAgICBgdG1wID0gZGF0YVtwdHJBXVxuICAgIGRhdGFbcHRyQSsrXSA9IGRhdGFbcHRyQl1cbiAgICBkYXRhW3B0ckIrK10gPSB0bXBgXG4gICAgKS5qb2luKFwiXFxuICAgIFwiKX1cbn1gKVxuICAgIH1cbiAgICByZXR1cm4gY29kZS5qb2luKFwiXFxuXCIpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlUHVzaERhdGEob3B0aW9uczogQ29kZU9wdGlvbnMpIHtcbiAgICByZXR1cm4gbWFrZUF0dHJpYnV0ZXNHcm91cHMob3B0aW9ucylcbiAgICAgICAgLm1hcCgoZ3JwKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBhdHRyaWJ1dGVzTGVuZ3RoID0gY29tcHV0ZUF0dHJpYnV0ZXNUb3RhbExlbmd0aChncnAuYXR0cmlidXRlcylcbiAgICAgICAgICAgIHJldHVybiBgcHVibGljIHB1c2gke2NhcGl0YWxpemUoXG4gICAgICAgICAgICAgICAgZ3JwLmJhc2VOYW1lXG4gICAgICAgICAgICApfUFycmF5KCkge1xuICAgIGNvbnN0IHsgZ2wsICR7Z3JwLmJhc2VOYW1lfUJ1ZmYgfSA9IHRoaXNcbiAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgJHtncnAuYmFzZU5hbWV9QnVmZilcbiAgICBnbC5idWZmZXJEYXRhKGdsLkFSUkFZX0JVRkZFUiwgdGhpcy4ke2dycC5iYXNlTmFtZX1EYXRhLCAke1xuICAgICAgICBncnAuZHluYW1pYyA/IFwiZ2wuRFlOQU1JQ19EUkFXXCIgOiBcImdsLlNUQVRJQ19EUkFXXCJcbiAgICB9KVxufVxuXG4vKipcbiAqIEBwYXJhbSBzdGFydCBGaXJzdCB2ZXJ0ZXggaW5kZXggdG8gcHVzaFxuICogQHBhcmFtIGVuZCBGaXJzdCB2ZXJ0ZXggaW5kZXggdG8gTk9UIHB1c2guXG4gKi9cbnB1YmxpYyBwdXNoJHtjYXBpdGFsaXplKFxuICAgICAgICAgICAgICAgIGdycC5iYXNlTmFtZVxuICAgICAgICAgICAgKX1TdWJBcnJheShzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlcikge1xuICAgIGNvbnN0IHsgZ2wsICR7Z3JwLmJhc2VOYW1lfUJ1ZmYgfSA9IHRoaXNcbiAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgJHtncnAuYmFzZU5hbWV9QnVmZilcbiAgICBjb25zdCBzdWJEYXRhID0gdGhpcy4ke2dycC5iYXNlTmFtZX1EYXRhLnN1YmFycmF5KHN0YXJ0ICogJHthdHRyaWJ1dGVzTGVuZ3RofSwgZW5kICogJHthdHRyaWJ1dGVzTGVuZ3RofSlcbiAgICBnbC5idWZmZXJTdWJEYXRhKFxuICAgICAgICBnbC5BUlJBWV9CVUZGRVIsIFxuICAgICAgICBzdGFydCAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCAqICR7YXR0cmlidXRlc0xlbmd0aH0sXG4gICAgICAgIHN1YkRhdGFcbiAgICApXG59YFxuICAgICAgICB9KVxuICAgICAgICAuam9pbihcIlxcblxcblwiKVxufVxuXG5mdW5jdGlvbiByZXBlYXQoY291bnQ6IG51bWJlciwgdGV4dDogc3RyaW5nKSB7XG4gICAgY29uc3QgYXJyOiBzdHJpbmdbXSA9IFtdXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSBhcnIucHVzaCh0ZXh0KVxuICAgIHJldHVybiBhcnJcbn1cbiIsImltcG9ydCB7IENvZGVPcHRpb25zIH0gZnJvbSBcIi4uL3R5cGVzXCJcbmltcG9ydCB7IG1ha2VBdHRyaWJ1dGVzR3JvdXBzIH0gZnJvbSBcIi4vYXR0cmlidXRlXCJcbmV4cG9ydCBmdW5jdGlvbiBtYWtlRGVzdHJveUZ1bmN0aW9uQ29kZShvcHRpb25zOiBDb2RlT3B0aW9ucykge1xuICAgIGNvbnN0IGJ1ZmZlcnMgPSBtYWtlQXR0cmlidXRlc0dyb3VwcyhvcHRpb25zKS5tYXAoXG4gICAgICAgIChncm91cCkgPT4gYCR7Z3JvdXAuYmFzZU5hbWV9QnVmZmBcbiAgICApXG4gICAgaWYgKG9wdGlvbnMuZHJhd0VsZW1lbnRzKSBidWZmZXJzLnB1c2goXCJlbGVtQnVmZlwiKVxuICAgIHJldHVybiBgcHVibGljIGRlc3Ryb3koKSB7XG4gICAgY29uc3QgeyBnbCwgcHJnLCAke2J1ZmZlcnMubWFwKChuYW1lKSA9PiBgJHtuYW1lfWApLmpvaW4oXCIsIFwiKX0gfSA9IHRoaXNcbiAgICAke2J1ZmZlcnMubWFwKChuYW1lKSA9PiBgZ2wuZGVsZXRlQnVmZmVyKCR7bmFtZX0pYCkuam9pbihcIlxcbiAgICBcIil9XG4gICAgZ2wuZGVsZXRlUHJvZ3JhbShwcmcpXG4gICAgZ2wuZGVsZXRlVmVydGV4QXJyYXkodGhpcy52ZXJ0QXJyYXkpXG59YFxufVxuIiwiaW1wb3J0IHsgQ29kZU9wdGlvbnMgfSBmcm9tIFwiLi8uLi90eXBlc1wiXG5pbXBvcnQgeyBpbmRlbnQgfSBmcm9tIFwiLi9jb21tb25cIlxuaW1wb3J0IHsgbWFrZUF0dHJpYnV0ZXNHcm91cHMgfSBmcm9tIFwiLi9hdHRyaWJ1dGVcIlxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZVBhaW50RnVuY3Rpb25Db2RlKG9wdGlvbnM6IENvZGVPcHRpb25zKSB7XG4gICAgbGV0IGNvZGUgPSBgLyoqXG4gKiBGb25jdGlvbiDDoCBhcHBlbGVyIGRhbnMgdW4gXFxgcmVxdWVzdEFuaW1hdGlvbkZyYW1lXFxgLlxuICogQHBhcmFtIHRpbWUgVGVtcHMgZW4gbWlsbGlzZWNvbmRlc1xuICogQHBhcmFtIG9uUGFpbnQgRm9uY3Rpb24gw6AgdXRpbGlzZXIgcG91cjpcbiAqIC0gbWV0dHJlIMOgIGpvdXIgZGVzIHVuaWZvcm1zXG4gKiAtIGFjdGl2ZXIgZGVzIGZvbmN0aW9ubmFsaXTDqSBkZSBXZWJHTCAoZGVwdGggdGVzdCwgY29tcGlzaXRpbmcsIC4uLilcbiAqIC0gLi4uXG4gKi9cbnB1YmxpYyByZWFkb25seSBwYWludCA9IChcbiAgICB0aW1lOiBudW1iZXIsXG4gICAgb25QYWludD86IChwYWludGVyOiAke29wdGlvbnMuY2xhc3NOYW1lfSwgdGltZTogbnVtYmVyKSA9PiB2b2lkXG4pID0+IHtcbiAgICBjb25zdCB7IGdsLCBwcmcgfSA9IHRoaXNcbiAgICBnbC51c2VQcm9ncmFtKHByZylcbiAgICBpZiAob25QYWludCkgb25QYWludCh0aGlzLCB0aW1lKVxuICAgIGdsLmJpbmRWZXJ0ZXhBcnJheSh0aGlzLnZlcnRBcnJheSlcbmBcbiAgICBpZiAob3B0aW9ucy5kcmF3RWxlbWVudHMpIHtcbiAgICAgICAgaWYgKGhhc0luc3RhbmNlcyhvcHRpb25zKSkge1xuICAgICAgICAgICAgY29kZSArPSBgICAgIGdsLmRyYXdFbGVtZW50cyhnbC4ke29wdGlvbnMucHJpbWl0aXZlfSwgdGhpcy5lbGVtQ291bnQsIGdsLiR7b3B0aW9ucy5lbGVtZW50c1NpemV9LCAwKWBcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvZGUgKz0gYCAgICBnbC5kcmF3RWxlbWVudHMoZ2wuJHtvcHRpb25zLnByaW1pdGl2ZX0sIHRoaXMuZWxlbUNvdW50LCBnbC4ke29wdGlvbnMuZWxlbWVudHNTaXplfSwgMClgXG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoaGFzSW5zdGFuY2VzKG9wdGlvbnMpKSB7XG4gICAgICAgICAgICBjb2RlICs9IGAgICAgZ2wuZHJhd0FycmF5c0luc3RhbmNlZChnbC4ke29wdGlvbnMucHJpbWl0aXZlfSwgMCwgdGhpcy52ZXJ0Q291bnQsIHRoaXMuaW5zdENvdW50KWBcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvZGUgKz0gYCAgICBnbC5kcmF3QXJyYXlzKGdsLiR7b3B0aW9ucy5wcmltaXRpdmV9LCAwLCB0aGlzLnZlcnRDb3VudClgXG4gICAgICAgIH1cbiAgICB9XG4gICAgY29kZSArPSBgXG4gICAgZ2wuYmluZFZlcnRleEFycmF5KG51bGwpXG59YFxuICAgIHJldHVybiBjb2RlXG59XG5cbmZ1bmN0aW9uIGhhc0luc3RhbmNlcyhvcHRpb25zOiBDb2RlT3B0aW9ucykge1xuICAgIGNvbnN0IGdyb3VwcyA9IG1ha2VBdHRyaWJ1dGVzR3JvdXBzKG9wdGlvbnMpXG4gICAgY29uc3QgaW5zdGFuY2VzID0gZ3JvdXBzLmZpbHRlcihncnAgPT4gZ3JwLmRpdmlzb3IgPiAwKVxuICAgIHJldHVybiBpbnN0YW5jZXMubGVuZ3RoID4gMFxufVxuXG4iLCJpbXBvcnQgeyBDb2RlT3B0aW9ucyB9IGZyb20gXCIuLi90eXBlc1wiXG5pbXBvcnQgeyBVbmlmb3JtRGVzY3JpcHRpb24gfSBmcm9tIFwiQC93ZWJnbDIvYW5hbHlzZS1wcm9ncmFtL3VuaWZvcm1zXCJcblxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VVbmlmb3Jtc0NvZGUob3B0aW9uczogQ29kZU9wdGlvbnMpOiBzdHJpbmcge1xuICAgIGNvbnN0IHsgdW5pZm9ybXMgfSA9IG9wdGlvbnNcbiAgICBjb25zdCBjb2RlcyA9IHVuaWZvcm1zLm1hcCgodW5pZm9ybSkgPT4gbWFrZVVuaWZvcm1Db2RlKHVuaWZvcm0pKVxuICAgIHJldHVybiBjb2Rlcy5qb2luKFwiXFxuXFxuXCIpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlVW5pZm9ybXNMb2NhdGlvbnNDb2RlKG9wdGlvbnM6IENvZGVPcHRpb25zKTogc3RyaW5nIHtcbiAgICByZXR1cm4gb3B0aW9ucy51bmlmb3Jtc1xuICAgICAgICAubWFwKFxuICAgICAgICAgICAgKHVuaSkgPT5cbiAgICAgICAgICAgICAgICBgcHJpdmF0ZSByZWFkb25seSBfJCR7XG4gICAgICAgICAgICAgICAgICAgIHVuaS5uYW1lXG4gICAgICAgICAgICAgICAgfTogV2ViR0xVbmlmb3JtTG9jYXRpb25gXG4gICAgICAgIClcbiAgICAgICAgLmpvaW4oXCJcXG5cIilcbn1cblxuZnVuY3Rpb24gbWFrZVVuaWZvcm1Db2RlKHVuaWZvcm06IFVuaWZvcm1EZXNjcmlwdGlvbik6IHN0cmluZyB7XG4gICAgaWYgKHVuaWZvcm0uc2l6ZSA9PT0gMSkgcmV0dXJuIG1ha2VVbmlmb3JtQ29kZUZvckF0b20odW5pZm9ybSlcbiAgICByZXR1cm4gYC8qIEBUT0RPOiBVbmlmb3JtIFwiJHt1bmlmb3JtLm5hbWV9XCIgb2YgdHlwZSAke3VuaWZvcm0udHlwZX1bJHt1bmlmb3JtLnNpemV9XSAqL2Bcbn1cblxuZnVuY3Rpb24gbWFrZVVuaWZvcm1Db2RlRm9yQXRvbSh1bmlmb3JtOiBVbmlmb3JtRGVzY3JpcHRpb24pOiBzdHJpbmcge1xuICAgIHN3aXRjaCAodW5pZm9ybS50eXBlKSB7XG4gICAgICAgIGNhc2UgXCJGTE9BVFwiOlxuICAgICAgICAgICAgcmV0dXJuIG1ha2VVbmlmb3JtQ29kZUZvckZsb2F0KHVuaWZvcm0pXG4gICAgICAgIGNhc2UgXCJGTE9BVF9WRUMyXCI6XG4gICAgICAgICAgICByZXR1cm4gbWFrZVVuaWZvcm1Db2RlRm9yVmVjdG9yKHVuaWZvcm0sIDIpXG4gICAgICAgIGNhc2UgXCJGTE9BVF9WRUMzXCI6XG4gICAgICAgICAgICByZXR1cm4gbWFrZVVuaWZvcm1Db2RlRm9yVmVjdG9yKHVuaWZvcm0sIDMpXG4gICAgICAgIGNhc2UgXCJGTE9BVF9WRUM0XCI6XG4gICAgICAgICAgICByZXR1cm4gbWFrZVVuaWZvcm1Db2RlRm9yVmVjdG9yKHVuaWZvcm0sIDQpXG4gICAgICAgIGNhc2UgXCJTQU1QTEVSXzJEXCI6XG4gICAgICAgICAgICByZXR1cm4gbWFrZVVuaWZvcm1Db2RlRm9yVGV4dHVyZSh1bmlmb3JtKVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGAvKiBAVE9ETzogVW5pZm9ybSBcIiR7dW5pZm9ybS5uYW1lfVwiIG9mIHR5cGUgJHt1bmlmb3JtLnR5cGV9ICovYFxuICAgIH1cbn1cblxuZnVuY3Rpb24gbWFrZVVuaWZvcm1Db2RlRm9yVmVjdG9yKFxuICAgIHVuaWZvcm06IFVuaWZvcm1EZXNjcmlwdGlvbixcbiAgICBkaW1lbnNpb246IG51bWJlclxuKTogc3RyaW5nIHtcbiAgICBjb25zdCBwYXJhbXMgPSBcInh5endcIi5zdWJzdHJpbmcoMCwgZGltZW5zaW9uKS5zcGxpdChcIlwiKVxuICAgIHJldHVybiBgJCR7dW5pZm9ybS5uYW1lfSgke3BhcmFtc1xuICAgICAgICAubWFwKChuYW1lKSA9PiBgJHtuYW1lfTogbnVtYmVyYClcbiAgICAgICAgLmpvaW4oXCIsIFwiKX0pIHtcbiAgICB0aGlzLmdsLnVuaWZvcm0ke3BhcmFtcy5sZW5ndGh9Zih0aGlzLl8kJHt1bmlmb3JtLm5hbWV9LCAke3BhcmFtcy5qb2luKFwiLCBcIil9KVxufWBcbn1cblxuZnVuY3Rpb24gbWFrZVVuaWZvcm1Db2RlRm9yRmxvYXQodW5pZm9ybTogVW5pZm9ybURlc2NyaXB0aW9uKSB7XG4gICAgcmV0dXJuIGAkJHt1bmlmb3JtLm5hbWV9KHZhbHVlOiBudW1iZXIpIHtcbiAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLl8kJHt1bmlmb3JtLm5hbWV9LCB2YWx1ZSlcbn1gXG59XG5cbmZ1bmN0aW9uIG1ha2VVbmlmb3JtQ29kZUZvclRleHR1cmUodW5pZm9ybTogVW5pZm9ybURlc2NyaXB0aW9uKSB7XG4gICAgY29uc3QgeyBuYW1lLCBzbG90IH0gPSB1bmlmb3JtXG4gICAgcmV0dXJuIGAkJHtuYW1lfSh0ZXh0dXJlOiBXZWJHTFRleHR1cmUpIHtcbiAgICBjb25zdCB7IGdsIH0gPSB0aGlzXG4gICAgZ2wuYWN0aXZlVGV4dHVyZShnbC5URVhUVVJFJHtzbG90fSlcbiAgICBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCB0ZXh0dXJlKVxuICAgIGdsLnVuaWZvcm0xaSh0aGlzLl8kJHt1bmlmb3JtLm5hbWV9LCAke3Nsb3R9KVxufWBcbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2NvZGUtZ2VuZXJhdG9yLXZpZXcnXG4iLCJpbXBvcnQgeyBBdHRyaWJ1dGVEZXNjcmlwdGlvbiB9IGZyb20gXCJAL3dlYmdsMi9hbmFseXNlLXByb2dyYW0vYXR0cmlidXRlc1wiXG5pbXBvcnQgeyBVbmlmb3JtRGVzY3JpcHRpb24gfSBmcm9tIFwiQC93ZWJnbDIvYW5hbHlzZS1wcm9ncmFtL3VuaWZvcm1zXCJcbmltcG9ydCB7XG4gICAgYXNzZXJ0Qm9vbGVhbixcbiAgICBhc3NlcnRPYmplY3QsXG4gICAgYXNzZXJ0U3RyaW5nLFxuICAgIGFzc2VydEFycmF5LFxufSBmcm9tIFwiQC90b29scy90eXBlLWd1YXJkc1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29kZU9wdGlvbnMge1xuICAgIHZlcnRDb2RlOiBzdHJpbmdcbiAgICBmcmFnQ29kZTogc3RyaW5nXG4gICAgdW5pZm9ybXM6IFVuaWZvcm1EZXNjcmlwdGlvbltdXG4gICAgYXR0cmlidXRlczogQXR0cmlidXRlRGVzY3JpcHRpb25bXVxuICAgIGF0dHJpYnV0ZXNEaXZpc29yczogeyBbYXR0TmFtZTogc3RyaW5nXTogbnVtYmVyIH1cbiAgICBhdHRyaWJ1dGVzRHluYW1pY01vZGVzOiB7IFthdHROYW1lOiBzdHJpbmddOiBib29sZWFuIH1cbiAgICBjbGFzc05hbWU6IHN0cmluZ1xuICAgIG1pbmlmeVNoYWRlckNvZGU6IGJvb2xlYW5cbiAgICBkcmF3RWxlbWVudHM6IGJvb2xlYW5cbiAgICBlbGVtZW50c1NpemU6IHN0cmluZyAvLyBcIlVOU0lHTkVEX0JZVEVcIiB8IFwiVU5TSUdORURfU0hPUlRcIiB8IFwiVU5TSUdORURfSU5UXCJcbiAgICBwcmltaXRpdmU6IHN0cmluZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNDb2RlT3B0aW9ucyhkYXRhOiB1bmtub3duKTogZGF0YSBpcyBDb2RlT3B0aW9ucyB7XG4gICAgdHJ5IHtcbiAgICAgICAgYXNzZXJ0T2JqZWN0KGRhdGEpXG4gICAgICAgIGFzc2VydFN0cmluZyhkYXRhLnZlcnRDb2RlLCBcImRhdGEudmVydENvZGVcIilcbiAgICAgICAgYXNzZXJ0U3RyaW5nKGRhdGEuZnJhZ0NvZGUsIFwiZGF0YS5mcmFnQ29kZVwiKVxuICAgICAgICBhc3NlcnRTdHJpbmcoZGF0YS5jbGFzc05hbWUsIFwiZGF0YS5jbGFzc05hbWVcIilcbiAgICAgICAgYXNzZXJ0U3RyaW5nKGRhdGEucHJpbWl0aXZlLCBcImRhdGEucHJpbWl0aXZlXCIpXG4gICAgICAgIGFzc2VydEJvb2xlYW4oZGF0YS5taW5pZnlTaGFkZXJDb2RlLCBcImRhdGEubWluaWZ5U2hhZGVyQ29kZVwiKVxuICAgICAgICBhc3NlcnRCb29sZWFuKGRhdGEuZHJhd0VsZW1lbnRzLCBcImRhdGEuZHJhd0VsZW1lbnRzXCIpXG4gICAgICAgIGFzc2VydEFycmF5KGRhdGEudW5pZm9ybXMsIFwiZGF0YS51bmlmb3Jtc1wiKVxuICAgICAgICBhc3NlcnRBcnJheShkYXRhLmF0dHJpYnV0ZXMsIFwiZGF0YS5hdHRyaWJ1dGVzXCIpXG4gICAgICAgIGFzc2VydE9iamVjdChkYXRhLmF0dHJpYnV0ZXNEaXZpc29ycywgXCJkYXRhLmF0dHJpYnV0ZXNEaXZpc29yc1wiKVxuICAgICAgICBhc3NlcnRPYmplY3QoZGF0YS5hdHRyaWJ1dGVzRHluYW1pY01vZGVzLCBcImRhdGEuYXR0cmlidXRlc0R5bmFtaWNNb2Rlc1wiKVxuICAgICAgICBhc3NlcnRTdHJpbmcoZGF0YS5lbGVtZW50c1NpemUsIFwiZGF0YS5lbGVtZW50c1NpemVcIilcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgIVtcIlVOU0lHTkVEX0JZVEVcIiwgXCJVTlNJR05FRF9TSE9SVFwiLCBcIlVOU0lHTkVEX0lOVFwiXS5pbmNsdWRlcyhcbiAgICAgICAgICAgICAgICBkYXRhLmVsZW1lbnRzU2l6ZVxuICAgICAgICAgICAgKVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiSW52YWxpZCBkYXRhLmVsZW1lbnRzU2l6ZSFcIilcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXgpXG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgQ2hlY2tib3ggZnJvbSBcIkAvdWkvdmlldy9jaGVja2JveFwiXG5pbXBvcnQgQ29kZSBmcm9tIFwiQC92aWV3L2NvZGVcIlxuaW1wb3J0IENvbWJvIGZyb20gXCJAL3VpL3ZpZXcvc2ltcGxlLWNvbWJvXCJcbmltcG9ydCBJbnB1dEludGVnZXIgZnJvbSBcIkAvdWkvdmlldy9pbnB1dC9pbnRlZ2VyXCJcbmltcG9ydCB7IENvZGVPcHRpb25zIH0gZnJvbSBcIi4uL2NvZGUtZ2VuZXJhdG9yL3R5cGVzXCJcbmltcG9ydCB7IFVuaWZvcm1EZXNjcmlwdGlvbiB9IGZyb20gXCJAL3dlYmdsMi9hbmFseXNlLXByb2dyYW0vdW5pZm9ybXNcIlxuaW1wb3J0IFwiLi9jb2RlLW9wdGlvbnMtdmlldy5jc3NcIlxuaW1wb3J0IHtcbiAgICBnZXREaXZpc29yRm9yQXR0aWJ1dGUsXG4gICAgZ2V0RHluYW1pY01vZGVGb3JBdHRpYnV0ZSxcbiAgICBzZXREaXZpc29yRm9yQXR0aWJ1dGUsXG4gICAgc2V0RHluYW1pY01vZGVGb3JBdHRpYnV0ZSxcbn0gZnJvbSBcIi4uL2NvbW1vblwiXG5cbmNvbnN0IFBSSU1JVElWRVMgPSB7XG4gICAgUE9JTlRTOiBcIlBPSU5UU1wiLFxuICAgIExJTkVfU1RSSVA6IFwiTElORV9TVFJJUFwiLFxuICAgIExJTkVfTE9PUDogXCJMSU5FX0xPT1BcIixcbiAgICBMSU5FUzogXCJMSU5FU1wiLFxuICAgIFRSSUFOR0xFX1NUUklQOiBcIlRSSUFOR0xFX1NUUklQXCIsXG4gICAgVFJJQU5HTEVfRkFOOiBcIlRSSUFOR0xFX0ZBTlwiLFxuICAgIFRSSUFOR0xFUzogXCJUUklBTkdMRVNcIixcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDb2RlT3B0aW9uc1ZpZXdQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgdmFsdWU6IENvZGVPcHRpb25zXG4gICAgb25DaGFuZ2UodmFsdWU6IENvZGVPcHRpb25zKTogdm9pZFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb2RlT3B0aW9uc1ZpZXcocHJvcHM6IENvZGVPcHRpb25zVmlld1Byb3BzKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHByb3BzLnZhbHVlXG4gICAgY29uc3QgdXBkYXRlID0gKHZhbHVlOiBQYXJ0aWFsPENvZGVPcHRpb25zPikgPT4ge1xuICAgICAgICBwcm9wcy5vbkNoYW5nZSh7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgLi4udmFsdWUsXG4gICAgICAgIH0pXG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgICAgICA8Q29tYm9cbiAgICAgICAgICAgICAgICBvcHRpb25zPXtQUklNSVRJVkVTfVxuICAgICAgICAgICAgICAgIHZhbHVlPXtvcHRpb25zLnByaW1pdGl2ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17KHByaW1pdGl2ZSkgPT4gdXBkYXRlKHsgcHJpbWl0aXZlIH0pfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxDaGVja2JveFxuICAgICAgICAgICAgICAgIGxhYmVsPVwiZHJhd0VsZW1lbnRzXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17b3B0aW9ucy5kcmF3RWxlbWVudHN9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhkcmF3RWxlbWVudHMpID0+IHVwZGF0ZSh7IGRyYXdFbGVtZW50cyB9KX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7b3B0aW9ucy5kcmF3RWxlbWVudHMgJiYgKFxuICAgICAgICAgICAgICAgIDxDb21ib1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICBVTlNJR05FRF9CWVRFOiBcIkJ5dGUgKDI1NilcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFVOU0lHTkVEX1NIT1JUOiBcIlNob3J0ICg2NSc1MzUpXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBVTlNJR05FRF9JTlQ6IFwiSW50ICg0JzI5NCc5NjcnMjk3KVwiLFxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17b3B0aW9ucy5lbGVtZW50c1NpemV9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZWxlbWVudHNTaXplKSA9PiB1cGRhdGUoeyBlbGVtZW50c1NpemUgfSl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8Q2hlY2tib3hcbiAgICAgICAgICAgICAgICBsYWJlbD1cIk1pbmlmaWVyXCJcbiAgICAgICAgICAgICAgICB2YWx1ZT17b3B0aW9ucy5taW5pZnlTaGFkZXJDb2RlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsobWluaWZ5U2hhZGVyQ29kZSkgPT4gdXBkYXRlKHsgbWluaWZ5U2hhZGVyQ29kZSB9KX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8aDE+QXR0cmlidXRlczwvaDE+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQtM1wiPlxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaGludFwiXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiTGVzIGF0dHJpYnV0ZXMgZHluYW1pcXVlcyBzb250IHN1c2NlcHRpYmxlcyBkJ8OqdHJlIG1pcyDDoCBqb3VyIHNvdXZlbnRcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgRHluYW1pcXVlXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoaW50XCI+Tm9tPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoaW50XCI+RGl2aXNldXI8L2Rpdj5cbiAgICAgICAgICAgICAgICB7b3B0aW9ucy5hdHRyaWJ1dGVzLm1hcCgoYXR0KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17YCR7YXR0Lm5hbWV9LTFgfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Q2hlY2tib3hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2dldER5bmFtaWNNb2RlRm9yQXR0aWJ1dGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHQubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhkeW5hbWljKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXREeW5hbWljTW9kZUZvckF0dGlidXRlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHluYW1pY1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlKHsgLi4ub3B0aW9ucyB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtgJHthdHQubmFtZX0tMmB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPnthdHQubmFtZX08L2I+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtgJHthdHQubmFtZX0tM2B9IHRpdGxlPXthdHQudHlwZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPElucHV0SW50ZWdlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzbWFsbC1pbnB1dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtnZXREaXZpc29yRm9yQXR0aWJ1dGUoYXR0Lm5hbWUsIG9wdGlvbnMpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGRpdmlzb3IpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldERpdmlzb3JGb3JBdHRpYnV0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHQubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpdmlzb3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZSh7IC4uLm9wdGlvbnMgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8aDE+VW5pZm9ybXM8L2gxPlxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICB7b3B0aW9ucy51bmlmb3Jtcy5tYXAoKHVuaSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8Q29kZVxuICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtgJHt1bmkubmFtZX1gfVxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2Ake3VuaS50eXBlfSAke3VuaS5uYW1lfWB9XG4gICAgICAgICAgICAgICAgICAgICAgICBleHBhbmRlZD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICBsYW5nPVwidHlwZXNjcmlwdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Z2V0RXhhbXBsZUNvZGVGb3JVbmlmb3JtKHVuaSl9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBDb2RlT3B0aW9uc1ZpZXdQcm9wcyk6IHN0cmluZyB7XG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IFtcImN1c3RvbVwiLCBcInBhZ2VzLXRvb2xzLXBhaW50ZXItQ29kZU9wdGlvbnNWaWV3XCJdXG4gICAgaWYgKHR5cGVvZiBwcm9wcy5jbGFzc05hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKHByb3BzLmNsYXNzTmFtZSlcbiAgICB9XG5cbiAgICByZXR1cm4gY2xhc3NOYW1lcy5qb2luKFwiIFwiKVxufVxuXG5mdW5jdGlvbiBnZXRFeGFtcGxlQ29kZUZvclVuaWZvcm0odW5pOiBVbmlmb3JtRGVzY3JpcHRpb24pOiBzdHJpbmcge1xuICAgIHN3aXRjaCAodW5pLnR5cGUpIHtcbiAgICAgICAgY2FzZSBcIlNBTVBMRVJfMkRcIjpcbiAgICAgICAgICAgIHJldHVybiBgY29uc3QgdGV4dHVyZTogV2ViR0xUZXh0dXJlID0gZ2wuY3JlYXRlVGV4dHVyZSgpXG4uLi5cbnBhaW50ZXIuJCR7dW5pLm5hbWV9KHRleHR1cmUpYFxuICAgICAgICBjYXNlIFwiRkxPQVRcIjpcbiAgICAgICAgICAgIHJldHVybiBgcGFpbnRlci4kJHt1bmkubmFtZX0oJHsxMDAgKiBNYXRoLnJhbmRvbSgpfSlgXG4gICAgICAgIGNhc2UgXCJGTE9BVF9WRUMyXCI6XG4gICAgICAgICAgICByZXR1cm4gYHBhaW50ZXIuJCR7dW5pLm5hbWV9KCR7MTAwICogTWF0aC5yYW5kb20oKX0sICR7XG4gICAgICAgICAgICAgICAgMTAwICogTWF0aC5yYW5kb20oKVxuICAgICAgICAgICAgfSlgXG4gICAgICAgIGNhc2UgXCJGTE9BVF9WRUMzXCI6XG4gICAgICAgICAgICByZXR1cm4gYHBhaW50ZXIuJCR7dW5pLm5hbWV9KCR7MTAwICogTWF0aC5yYW5kb20oKX0sICR7XG4gICAgICAgICAgICAgICAgMTAwICogTWF0aC5yYW5kb20oKVxuICAgICAgICAgICAgfSwgJHsxMDAgKiBNYXRoLnJhbmRvbSgpfSlgXG4gICAgICAgIGNhc2UgXCJGTE9BVF9WRUM0XCI6XG4gICAgICAgICAgICByZXR1cm4gYHBhaW50ZXIuJCR7dW5pLm5hbWV9KCR7MTAwICogTWF0aC5yYW5kb20oKX0sICR7XG4gICAgICAgICAgICAgICAgMTAwICogTWF0aC5yYW5kb20oKVxuICAgICAgICAgICAgfSwgJHsxMDAgKiBNYXRoLnJhbmRvbSgpfSwgJHsxMDAgKiBNYXRoLnJhbmRvbSgpfSlgXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gYC8vIFBhcyBlbmNvcmUgc3VwcG9ydMOpIDogJHt1bmkudHlwZX1gXG4gICAgfVxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vY29kZS1vcHRpb25zLXZpZXcnXG4iLCJpbXBvcnQgeyBDb2RlT3B0aW9ucyB9IGZyb20gXCIuL2NvZGUtZ2VuZXJhdG9yL3R5cGVzXCJcblxuZXhwb3J0IGZ1bmN0aW9uIGdldERpdmlzb3JGb3JBdHRpYnV0ZShcbiAgICBhdHROYW1lOiBzdHJpbmcsXG4gICAgb3B0aW9uczogQ29kZU9wdGlvbnNcbik6IG51bWJlciB7XG4gICAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGguZmxvb3Iob3B0aW9ucy5hdHRyaWJ1dGVzRGl2aXNvcnNbYXR0TmFtZV0gPz8gMCkpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXREaXZpc29yRm9yQXR0aWJ1dGUoXG4gICAgYXR0TmFtZTogc3RyaW5nLFxuICAgIG9wdGlvbnM6IENvZGVPcHRpb25zLFxuICAgIGRpdmlzb3I6IG51bWJlclxuKSB7XG4gICAgb3B0aW9ucy5hdHRyaWJ1dGVzRGl2aXNvcnNbYXR0TmFtZV0gPSBkaXZpc29yXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREeW5hbWljTW9kZUZvckF0dGlidXRlKFxuICAgIGF0dE5hbWU6IHN0cmluZyxcbiAgICBvcHRpb25zOiBDb2RlT3B0aW9uc1xuKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIG9wdGlvbnMuYXR0cmlidXRlc0R5bmFtaWNNb2Rlc1thdHROYW1lXSA/PyBmYWxzZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0RHluYW1pY01vZGVGb3JBdHRpYnV0ZShcbiAgICBhdHROYW1lOiBzdHJpbmcsXG4gICAgb3B0aW9uczogQ29kZU9wdGlvbnMsXG4gICAgRHluYW1pY01vZGU6IGJvb2xlYW5cbikge1xuICAgIG9wdGlvbnMuYXR0cmlidXRlc0R5bmFtaWNNb2Rlc1thdHROYW1lXSA9IER5bmFtaWNNb2RlXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRBcnJheVR5cGVGb3JFbGVtZW50KG9wdGlvbnM6IENvZGVPcHRpb25zKTogc3RyaW5nIHtcbiAgICBjb25zdCB7IGVsZW1lbnRzU2l6ZSB9ID0gb3B0aW9uc1xuICAgIGlmIChlbGVtZW50c1NpemUuZW5kc1dpdGgoXCJCWVRFXCIpKSByZXR1cm4gXCJVaW50OEFycmF5XCJcbiAgICBpZiAoZWxlbWVudHNTaXplLmVuZHNXaXRoKFwiU0hPUlRcIikpIHJldHVybiBcIlVpbnQxNkFycmF5XCJcbiAgICByZXR1cm4gXCJVaW50MzJBcnJheVwiXG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi4vcGFpbnRlci10b29sc1wiIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBDb2RlR2VuZXJhdG9yIGZyb20gXCIuL2NvZGUtZ2VuZXJhdG9yXCJcbmltcG9ydCBDb2RlT3B0aW9uc1ZpZXcgZnJvbSBcIi4vY29kZS1vcHRpb25zXCJcbmltcG9ydCBQcm9ncmFtQ29kZUVkaXRvciBmcm9tIFwiLi9wcm9ncmFtLWNvZGUtZWRpdG9yXCJcbmltcG9ydCBUYWJTdHJpcCBmcm9tIFwiQC91aS92aWV3L3RhYnN0cmlwXCJcbmltcG9ydCB7IENvZGVPcHRpb25zLCBpc0NvZGVPcHRpb25zIH0gZnJvbSBcIi4vY29kZS1nZW5lcmF0b3IvdHlwZXNcIlxuaW1wb3J0IHsgUHJvZ3JhbUFuYWx5c2UgfSBmcm9tIFwiQC93ZWJnbDIvYW5hbHlzZS1wcm9ncmFtXCJcbmltcG9ydCB7IHVzZVBlcnNpc3RlbnRTdGF0ZSB9IGZyb20gXCJAL3Rvb2xzL3BlcnNpc3RlbmNlXCJcbmltcG9ydCBcIi4vcGFpbnRlci10b29scy5jc3NcIlxuXG5jb25zdCBERUZBVUxUX0NPREVfT1BUSU9OUzogQ29kZU9wdGlvbnMgPSB7XG4gICAgYXR0cmlidXRlczogW10sXG4gICAgYXR0cmlidXRlc0Rpdmlzb3JzOiB7fSxcbiAgICBhdHRyaWJ1dGVzRHluYW1pY01vZGVzOiB7fSxcbiAgICBjbGFzc05hbWU6IFwiUGFpbnRlclwiLFxuICAgIGRyYXdFbGVtZW50czogZmFsc2UsXG4gICAgZWxlbWVudHNTaXplOiBcIlVOU0lHTkVEX1NIT1JUXCIsXG4gICAgZnJhZ0NvZGU6IFwiXCIsXG4gICAgbWluaWZ5U2hhZGVyQ29kZTogdHJ1ZSxcbiAgICBwcmltaXRpdmU6IFwiVFJJQU5HTEVTXCIsXG4gICAgdW5pZm9ybXM6IFtdLFxuICAgIHZlcnRDb2RlOiBcIlwiLFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQYWludGVyVG9vbHMoKSB7XG4gICAgY29uc3QgW3Byb2plY3QsIHNldFByb2plY3RdID0gUmVhY3QudXNlU3RhdGUoXCJtYWluXCIpXG4gICAgY29uc3QgW29wdGlvbnMsIHNldE9wdGlvbnNdID0gdXNlUGVyc2lzdGVudFN0YXRlPENvZGVPcHRpb25zPihcbiAgICAgICAgXCJjb2RlLW9wdGlvbnNcIixcbiAgICAgICAgcHJvamVjdCxcbiAgICAgICAgREVGQVVMVF9DT0RFX09QVElPTlMsXG4gICAgICAgIGlzQ29kZU9wdGlvbnNcbiAgICApXG4gICAgY29uc3QgW2FuYWx5c2UsIHNldEFuYWx5c2VdID0gUmVhY3QudXNlU3RhdGU8bnVsbCB8IFByb2dyYW1BbmFseXNlPihudWxsKVxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICghYW5hbHlzZSkgcmV0dXJuXG5cbiAgICAgICAgc2V0T3B0aW9ucyh7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgdmVydENvZGU6IGFuYWx5c2UudmVydENvZGUsXG4gICAgICAgICAgICBmcmFnQ29kZTogYW5hbHlzZS5mcmFnQ29kZSxcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IGFuYWx5c2UuYXR0cmlidXRlcyxcbiAgICAgICAgICAgIHVuaWZvcm1zOiBhbmFseXNlLnVuaWZvcm1zLFxuICAgICAgICB9KVxuICAgIH0sIFthbmFseXNlXSlcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZ2VzLXRvb2xzLXBhaW50ZXItUGFpbnRlclRvb2xzXCI+XG4gICAgICAgICAgICA8VGFiU3RyaXAgY2xhc3NOYW1lPVwidGFiLXN0cmlwXCIgaGVhZGVycz17W1wiU2hhZGVyc1wiLCBcIlLDqXN1bHRhdFwiXX0+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPFByb2dyYW1Db2RlRWRpdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0PXtwcm9qZWN0fVxuICAgICAgICAgICAgICAgICAgICAgICAgb25BbmFseXNlPXtzZXRBbmFseXNlfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8Q29kZU9wdGlvbnNWaWV3IHZhbHVlPXtvcHRpb25zfSBvbkNoYW5nZT17c2V0T3B0aW9uc30gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8Q29kZUdlbmVyYXRvciBwcm9qZWN0PXtwcm9qZWN0fSBvcHRpb25zPXtvcHRpb25zfSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9UYWJTdHJpcD5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vcHJvZ3JhbS1jb2RlLWVkaXRvci12aWV3J1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBTaGFkZXJDb2RlRWRpdG9yIGZyb20gXCJAL3ZpZXcvc2hhZGVyLWNvZGUtZWRpdG9yXCJcbmltcG9ydCB7IGFuYWx5c2VQcm9ncmFtLCBQcm9ncmFtQW5hbHlzZSB9IGZyb20gXCJAL3dlYmdsMi9hbmFseXNlLXByb2dyYW1cIlxuaW1wb3J0IHsgaXNTdHJpbmcgfSBmcm9tIFwiQC90b29scy90eXBlLWd1YXJkc1wiXG5pbXBvcnQgeyB1c2VQZXJzaXN0ZW50U3RhdGUgfSBmcm9tIFwiQC90b29scy9wZXJzaXN0ZW5jZVwiXG5pbXBvcnQgXCIuL3Byb2dyYW0tY29kZS1lZGl0b3Itdmlldy5jc3NcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFByb2dyYW1Db2RlRWRpdG9yVmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICBwcm9qZWN0OiBzdHJpbmdcbiAgICBvbkFuYWx5c2UoYW5hbHlzZTogUHJvZ3JhbUFuYWx5c2UpOiB2b2lkXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFByb2dyYW1Db2RlRWRpdG9yVmlldyhcbiAgICBwcm9wczogUHJvZ3JhbUNvZGVFZGl0b3JWaWV3UHJvcHNcbikge1xuICAgIGNvbnN0IFt2ZXJ0Q29kZSwgc2V0VmVydENvZGVdID0gdXNlUGVyc2lzdGVudFN0YXRlKFxuICAgICAgICBcInZlcnQtY29kZVwiLFxuICAgICAgICBwcm9wcy5wcm9qZWN0LFxuICAgICAgICBcIlwiLFxuICAgICAgICBpc1N0cmluZ1xuICAgIClcbiAgICBjb25zdCBbdmVydEVycm9yLCBzZXRWZXJ0RXJyb3JdID0gUmVhY3QudXNlU3RhdGU8bnVsbCB8IHN0cmluZz4oXCJcIilcbiAgICBjb25zdCBbZnJhZ0NvZGUsIHNldEZyYWdDb2RlXSA9IHVzZVBlcnNpc3RlbnRTdGF0ZShcbiAgICAgICAgXCJmcmFnLWNvZGVcIixcbiAgICAgICAgcHJvcHMucHJvamVjdCxcbiAgICAgICAgXCJcIixcbiAgICAgICAgaXNTdHJpbmdcbiAgICApXG4gICAgY29uc3QgW2ZyYWdFcnJvciwgc2V0RnJhZ0Vycm9yXSA9IFJlYWN0LnVzZVN0YXRlPG51bGwgfCBzdHJpbmc+KFwiXCIpXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgYW5hbHlzZSA9IGFuYWx5c2VQcm9ncmFtKHtcbiAgICAgICAgICAgIHZlcnQ6IGVuc3VyZUdMU0wzMDAodmVydENvZGUpLFxuICAgICAgICAgICAgZnJhZzogZW5zdXJlR0xTTDMwMChmcmFnQ29kZSksXG4gICAgICAgIH0pXG4gICAgICAgIHNldFZlcnRFcnJvcihhbmFseXNlLnZlcnRFcnJvcilcbiAgICAgICAgc2V0RnJhZ0Vycm9yKGFuYWx5c2UuZnJhZ0Vycm9yKVxuICAgICAgICBpZiAoIWFuYWx5c2UudmVydEVycm9yICYmICFhbmFseXNlLmZyYWdFcnJvcikge1xuICAgICAgICAgICAgcHJvcHMub25BbmFseXNlKGFuYWx5c2UpXG4gICAgICAgIH1cbiAgICB9LCBbdmVydENvZGUsIGZyYWdDb2RlXSlcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9PlxuICAgICAgICAgICAgPFNoYWRlckNvZGVFZGl0b3JcbiAgICAgICAgICAgICAgICBsYWJlbD1cIlZlcnRleCBTaGFkZXJcIlxuICAgICAgICAgICAgICAgIGVycm9yPXt2ZXJ0RXJyb3J9XG4gICAgICAgICAgICAgICAgdmFsdWU9e2Vuc3VyZUdMU0wzMDAodmVydENvZGUpfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXRWZXJ0Q29kZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8U2hhZGVyQ29kZUVkaXRvclxuICAgICAgICAgICAgICAgIGxhYmVsPVwiRnJhZ21lbnQgU2hhZGVyXCJcbiAgICAgICAgICAgICAgICBlcnJvcj17ZnJhZ0Vycm9yfVxuICAgICAgICAgICAgICAgIHZhbHVlPXtlbnN1cmVHTFNMMzAwKGZyYWdDb2RlKX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0RnJhZ0NvZGV9XG4gICAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IFByb2dyYW1Db2RlRWRpdG9yVmlld1Byb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gW1wiY3VzdG9tXCIsIFwicGFnZXMtdG9vbHMtcGFpbnRlci1Qcm9ncmFtQ29kZUVkaXRvclZpZXdcIl1cbiAgICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cblxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oXCIgXCIpXG59XG5cbmZ1bmN0aW9uIGVuc3VyZUdMU0wzMDAoZnJhZ0NvZGU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgaWYgKGZyYWdDb2RlLnN0YXJ0c1dpdGgoXCIjdmVyc2lvbiAzMDAgZXNcXG5cIikpIHJldHVybiBmcmFnQ29kZVxuICAgIHJldHVybiBgI3ZlcnNpb24gMzAwIGVzXFxuXFxuJHtmcmFnQ29kZX1gXG59XG5cbiIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL3Rlc3QtcGFnZSdcbiIsIi8qKlxuICogQ29kZSBnw6luw6lyw6kgYXV0b21hdGlxdWVtZW50IGxlIDA4LzA0LzIwMjJcbiAqL1xuIGV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhaW50ZXIge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgdmVydFN0YXRpY0J1ZmY6IFdlYkdMQnVmZmVyXG4gICAgcHJpdmF0ZSByZWFkb25seSBpbnN0RXZlcnk3U3RhdGljQnVmZjogV2ViR0xCdWZmZXJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGluc3RTdGF0aWNCdWZmOiBXZWJHTEJ1ZmZlclxuICAgIHByaXZhdGUgcmVhZG9ubHkgdmVydEFycmF5OiBXZWJHTFZlcnRleEFycmF5T2JqZWN0XG4gICAgcHJpdmF0ZSByZWFkb25seSBfJHVuaVRyaWFuZ2xlc1NjYWxlOiBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgIHByaXZhdGUgcmVhZG9ubHkgXyR1bmlBbmdsZVN0ZXA6IFdlYkdMVW5pZm9ybUxvY2F0aW9uXG4gICAgcHJpdmF0ZSByZWFkb25seSBfJHVuaVNjcmVlblNjYWxlOiBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgIHByaXZhdGUgcmVhZG9ubHkgXyR1bmlPcGFjaXR5OiBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgIHByaXZhdGUgcmVhZG9ubHkgdmVydFN0YXRpY0RhdGE6IEZsb2F0MzJBcnJheVxuICAgIC8qKlxuICAgICAqIETDqXRlcm1pbmUgcXVlbGxlIGluc3RhbmNlIGxhIGZvbmN0aW9uXG4gICAgICogYHBva2VWZXJ0U3RhdGljRGF0YSgpYCBtZXQgw6Agam91ci5cbiAgICAgKiBJbCBzJ2luY3LDqW1lbnRlIMOgIGNoYXF1ZSBhcHBlbCBkZSBgcG9rZVZlcnRTdGF0aWNEYXRhKClgXG4gICAgICovXG4gICAgcHVibGljIHZlcnRTdGF0aWNDdXJzb3IgPSAwXG4gICAgcHJpdmF0ZSByZWFkb25seSBpbnN0RXZlcnk3U3RhdGljRGF0YTogRmxvYXQzMkFycmF5XG4gICAgLyoqXG4gICAgICogRMOpdGVybWluZSBxdWVsIHZlcnRleCBsYSBmb25jdGlvblxuICAgICAqIGBwb2tlSW5zdEV2ZXJ5N1N0YXRpY0RhdGEoKWAgbWV0IMOgIGpvdXIuXG4gICAgICogSWwgcydpbmNyw6ltZW50ZSDDoCBjaGFxdWUgYXBwZWwgZGUgYHBva2VJbnN0RXZlcnk3U3RhdGljRGF0YSgpYFxuICAgICAqL1xuICAgIHB1YmxpYyBpbnN0RXZlcnk3U3RhdGljQ3Vyc29yID0gMFxuICAgIHByaXZhdGUgcmVhZG9ubHkgaW5zdFN0YXRpY0RhdGE6IEZsb2F0MzJBcnJheVxuICAgIC8qKlxuICAgICAqIETDqXRlcm1pbmUgcXVlbCB2ZXJ0ZXggbGEgZm9uY3Rpb25cbiAgICAgKiBgcG9rZUluc3RTdGF0aWNEYXRhKClgIG1ldCDDoCBqb3VyLlxuICAgICAqIElsIHMnaW5jcsOpbWVudGUgw6AgY2hhcXVlIGFwcGVsIGRlIGBwb2tlSW5zdFN0YXRpY0RhdGEoKWBcbiAgICAgKi9cbiAgICBwdWJsaWMgaW5zdFN0YXRpY0N1cnNvciA9IDBcbiAgICBwcml2YXRlIHJlYWRvbmx5IHByZzogV2ViR0xQcm9ncmFtXG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0LFxuICAgICAgICBwdWJsaWMgdmVydENvdW50OiBudW1iZXIsXG4gICAgICAgIHB1YmxpYyBpbnN0Q291bnQ6IG51bWJlclxuICAgICkge1xuICAgICAgICBjb25zdCBwcmcgPSBnbC5jcmVhdGVQcm9ncmFtKClcbiAgICAgICAgaWYgKCFwcmcpIHRocm93IEVycm9yKFwiVW5hYmxlIHRvIGNyZWF0ZSBhIFdlYkdMIFByb2dyYW0hXCIpXG4gICAgICAgIFBhaW50ZXIuY3JlYXRlU2hhZGVyKGdsLCBwcmcsIGdsLlZFUlRFWF9TSEFERVIsIFBhaW50ZXIuVkVSVClcbiAgICAgICAgUGFpbnRlci5jcmVhdGVTaGFkZXIoZ2wsIHByZywgZ2wuRlJBR01FTlRfU0hBREVSLCBQYWludGVyLkZSQUcpXG4gICAgICAgIGdsLmxpbmtQcm9ncmFtKHByZylcbiAgICAgICAgdGhpcy5wcmcgPSBwcmdcbiAgICAgICAgdGhpcy5fJHVuaVRyaWFuZ2xlc1NjYWxlID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHByZywgXCJ1bmlUcmlhbmdsZXNTY2FsZVwiKSBhcyBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgICAgICB0aGlzLl8kdW5pQW5nbGVTdGVwID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHByZywgXCJ1bmlBbmdsZVN0ZXBcIikgYXMgV2ViR0xVbmlmb3JtTG9jYXRpb25cbiAgICAgICAgdGhpcy5fJHVuaVNjcmVlblNjYWxlID0gZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHByZywgXCJ1bmlTY3JlZW5TY2FsZVwiKSBhcyBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgICAgICB0aGlzLl8kdW5pT3BhY2l0eSA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIFwidW5pT3BhY2l0eVwiKSBhcyBXZWJHTFVuaWZvcm1Mb2NhdGlvblxuICAgICAgICBjb25zdCB2ZXJ0QXJyYXkgPSBnbC5jcmVhdGVWZXJ0ZXhBcnJheSgpXG4gICAgICAgIGlmICghdmVydEFycmF5KSB0aHJvdyBFcnJvcihcIlVuYWJsZSB0byBjcmVhdGUgVmVydGV4IEFycmF5IE9iamVjdCFcIilcbiAgICAgICAgdGhpcy52ZXJ0QXJyYXkgPSB2ZXJ0QXJyYXlcbiAgICAgICAgZ2wuYmluZFZlcnRleEFycmF5KHZlcnRBcnJheSlcbiAgICAgICAgY29uc3QgQlBFID0gRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXG4gICAgICAgIGNvbnN0IHN0cmlkZVZlcnRTdGF0aWMgPSAzICogQlBFXG4gICAgICAgIGNvbnN0IHZlcnRTdGF0aWNCdWZmID0gZ2wuY3JlYXRlQnVmZmVyKClcbiAgICAgICAgaWYgKCF2ZXJ0U3RhdGljQnVmZikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIEJ1ZmZlciAodmVydFN0YXRpYykhXCIpXG4gICAgICAgIHRoaXMudmVydFN0YXRpY0J1ZmYgPSB2ZXJ0U3RhdGljQnVmZlxuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgdmVydFN0YXRpY0J1ZmYpXG4gICAgICAgIHRoaXMudmVydFN0YXRpY0RhdGEgPSBuZXcgRmxvYXQzMkFycmF5KDMgKiB2ZXJ0Q291bnQpXG4gICAgICAgIGdsLmJ1ZmZlckRhdGEoZ2wuQVJSQVlfQlVGRkVSLCB0aGlzLnZlcnRTdGF0aWNEYXRhLCBnbC5TVEFUSUNfRFJBVylcbiAgICAgICAgY29uc3QgX2F0dFZlcnRleFBvbGFyQ29vcmRzID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24ocHJnLCBcImF0dFZlcnRleFBvbGFyQ29vcmRzXCIpXG4gICAgICAgIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KF9hdHRWZXJ0ZXhQb2xhckNvb3JkcylcbiAgICAgICAgZ2wudmVydGV4QXR0cmliUG9pbnRlcihfYXR0VmVydGV4UG9sYXJDb29yZHMsIDMsIGdsLkZMT0FULCBmYWxzZSwgc3RyaWRlVmVydFN0YXRpYywgMCAqIEJQRSlcbiAgICAgICAgZ2wudmVydGV4QXR0cmliRGl2aXNvcihfYXR0VmVydGV4UG9sYXJDb29yZHMsIDApXG4gICAgICAgIGNvbnN0IHN0cmlkZUluc3RFdmVyeTdTdGF0aWMgPSAzICogQlBFXG4gICAgICAgIGNvbnN0IGluc3RFdmVyeTdTdGF0aWNCdWZmID0gZ2wuY3JlYXRlQnVmZmVyKClcbiAgICAgICAgaWYgKCFpbnN0RXZlcnk3U3RhdGljQnVmZikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIEJ1ZmZlciAoaW5zdEV2ZXJ5N1N0YXRpYykhXCIpXG4gICAgICAgIHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0J1ZmYgPSBpbnN0RXZlcnk3U3RhdGljQnVmZlxuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgaW5zdEV2ZXJ5N1N0YXRpY0J1ZmYpXG4gICAgICAgIHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0RhdGEgPSBuZXcgRmxvYXQzMkFycmF5KDMgKiBNYXRoLmZsb29yKGluc3RDb3VudCAvIDcpKVxuICAgICAgICBnbC5idWZmZXJEYXRhKGdsLkFSUkFZX0JVRkZFUiwgdGhpcy5pbnN0RXZlcnk3U3RhdGljRGF0YSwgZ2wuU1RBVElDX0RSQVcpXG4gICAgICAgIGNvbnN0IF9hdHRJbnN0YW5jZUNvbG9yID0gZ2wuZ2V0QXR0cmliTG9jYXRpb24ocHJnLCBcImF0dEluc3RhbmNlQ29sb3JcIilcbiAgICAgICAgZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoX2F0dEluc3RhbmNlQ29sb3IpXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYlBvaW50ZXIoX2F0dEluc3RhbmNlQ29sb3IsIDMsIGdsLkZMT0FULCBmYWxzZSwgc3RyaWRlSW5zdEV2ZXJ5N1N0YXRpYywgMCAqIEJQRSlcbiAgICAgICAgZ2wudmVydGV4QXR0cmliRGl2aXNvcihfYXR0SW5zdGFuY2VDb2xvciwgNylcbiAgICAgICAgY29uc3Qgc3RyaWRlSW5zdFN0YXRpYyA9IDEgKiBCUEVcbiAgICAgICAgY29uc3QgaW5zdFN0YXRpY0J1ZmYgPSBnbC5jcmVhdGVCdWZmZXIoKVxuICAgICAgICBpZiAoIWluc3RTdGF0aWNCdWZmKSB0aHJvdyBFcnJvcihcIlVuYWJsZSB0byBjcmVhdGUgV2ViR0wgQnVmZmVyIChpbnN0U3RhdGljKSFcIilcbiAgICAgICAgdGhpcy5pbnN0U3RhdGljQnVmZiA9IGluc3RTdGF0aWNCdWZmXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBpbnN0U3RhdGljQnVmZilcbiAgICAgICAgdGhpcy5pbnN0U3RhdGljRGF0YSA9IG5ldyBGbG9hdDMyQXJyYXkoMSAqIGluc3RDb3VudClcbiAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHRoaXMuaW5zdFN0YXRpY0RhdGEsIGdsLlNUQVRJQ19EUkFXKVxuICAgICAgICBjb25zdCBfYXR0SW5zdGFuY2VBbmdsZSA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHByZywgXCJhdHRJbnN0YW5jZUFuZ2xlXCIpXG4gICAgICAgIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KF9hdHRJbnN0YW5jZUFuZ2xlKVxuICAgICAgICBnbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKF9hdHRJbnN0YW5jZUFuZ2xlLCAxLCBnbC5GTE9BVCwgZmFsc2UsIHN0cmlkZUluc3RTdGF0aWMsIDAgKiBCUEUpXG4gICAgICAgIGdsLnZlcnRleEF0dHJpYkRpdmlzb3IoX2F0dEluc3RhbmNlQW5nbGUsIDEpXG4gICAgICAgIGdsLmJpbmRWZXJ0ZXhBcnJheShudWxsKVxuICAgIH1cblxuICAgIFxuXG4gICAgcHVibGljIHB1c2hWZXJ0U3RhdGljQXJyYXkoKSB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIHZlcnRTdGF0aWNCdWZmIH0gPSB0aGlzXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCB2ZXJ0U3RhdGljQnVmZilcbiAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHRoaXMudmVydFN0YXRpY0RhdGEsIGdsLlNUQVRJQ19EUkFXKVxuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gc3RhcnQgRmlyc3QgdmVydGV4IGluZGV4IHRvIHB1c2hcbiAgICAgKiBAcGFyYW0gZW5kIEZpcnN0IHZlcnRleCBpbmRleCB0byBOT1QgcHVzaC5cbiAgICAgKi9cbiAgICBwdWJsaWMgcHVzaFZlcnRTdGF0aWNTdWJBcnJheShzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlcikge1xuICAgICAgICBjb25zdCB7IGdsLCB2ZXJ0U3RhdGljQnVmZiB9ID0gdGhpc1xuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgdmVydFN0YXRpY0J1ZmYpXG4gICAgICAgIGNvbnN0IHN1YkRhdGEgPSB0aGlzLnZlcnRTdGF0aWNEYXRhLnN1YmFycmF5KHN0YXJ0ICogMywgZW5kICogMylcbiAgICAgICAgZ2wuYnVmZmVyU3ViRGF0YShcbiAgICAgICAgICAgIGdsLkFSUkFZX0JVRkZFUiwgXG4gICAgICAgICAgICBzdGFydCAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCAqIDMsXG4gICAgICAgICAgICBzdWJEYXRhXG4gICAgICAgIClcbiAgICB9XG4gICAgXG4gICAgcHVibGljIHB1c2hJbnN0RXZlcnk3U3RhdGljQXJyYXkoKSB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIGluc3RFdmVyeTdTdGF0aWNCdWZmIH0gPSB0aGlzXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBpbnN0RXZlcnk3U3RhdGljQnVmZilcbiAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0RhdGEsIGdsLlNUQVRJQ19EUkFXKVxuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gc3RhcnQgRmlyc3QgdmVydGV4IGluZGV4IHRvIHB1c2hcbiAgICAgKiBAcGFyYW0gZW5kIEZpcnN0IHZlcnRleCBpbmRleCB0byBOT1QgcHVzaC5cbiAgICAgKi9cbiAgICBwdWJsaWMgcHVzaEluc3RFdmVyeTdTdGF0aWNTdWJBcnJheShzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlcikge1xuICAgICAgICBjb25zdCB7IGdsLCBpbnN0RXZlcnk3U3RhdGljQnVmZiB9ID0gdGhpc1xuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgaW5zdEV2ZXJ5N1N0YXRpY0J1ZmYpXG4gICAgICAgIGNvbnN0IHN1YkRhdGEgPSB0aGlzLmluc3RFdmVyeTdTdGF0aWNEYXRhLnN1YmFycmF5KHN0YXJ0ICogMywgZW5kICogMylcbiAgICAgICAgZ2wuYnVmZmVyU3ViRGF0YShcbiAgICAgICAgICAgIGdsLkFSUkFZX0JVRkZFUiwgXG4gICAgICAgICAgICBzdGFydCAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCAqIDMsXG4gICAgICAgICAgICBzdWJEYXRhXG4gICAgICAgIClcbiAgICB9XG4gICAgXG4gICAgcHVibGljIHB1c2hJbnN0U3RhdGljQXJyYXkoKSB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIGluc3RTdGF0aWNCdWZmIH0gPSB0aGlzXG4gICAgICAgIGdsLmJpbmRCdWZmZXIoZ2wuQVJSQVlfQlVGRkVSLCBpbnN0U3RhdGljQnVmZilcbiAgICAgICAgZ2wuYnVmZmVyRGF0YShnbC5BUlJBWV9CVUZGRVIsIHRoaXMuaW5zdFN0YXRpY0RhdGEsIGdsLlNUQVRJQ19EUkFXKVxuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gc3RhcnQgRmlyc3QgdmVydGV4IGluZGV4IHRvIHB1c2hcbiAgICAgKiBAcGFyYW0gZW5kIEZpcnN0IHZlcnRleCBpbmRleCB0byBOT1QgcHVzaC5cbiAgICAgKi9cbiAgICBwdWJsaWMgcHVzaEluc3RTdGF0aWNTdWJBcnJheShzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlcikge1xuICAgICAgICBjb25zdCB7IGdsLCBpbnN0U3RhdGljQnVmZiB9ID0gdGhpc1xuICAgICAgICBnbC5iaW5kQnVmZmVyKGdsLkFSUkFZX0JVRkZFUiwgaW5zdFN0YXRpY0J1ZmYpXG4gICAgICAgIGNvbnN0IHN1YkRhdGEgPSB0aGlzLmluc3RTdGF0aWNEYXRhLnN1YmFycmF5KHN0YXJ0ICogMSwgZW5kICogMSlcbiAgICAgICAgZ2wuYnVmZmVyU3ViRGF0YShcbiAgICAgICAgICAgIGdsLkFSUkFZX0JVRkZFUiwgXG4gICAgICAgICAgICBzdGFydCAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCAqIDEsXG4gICAgICAgICAgICBzdWJEYXRhXG4gICAgICAgIClcbiAgICB9XG5cbiAgICBwdWJsaWMgcG9rZVZlcnRTdGF0aWNEYXRhKFxuICAgICAgICBhdHRWZXJ0ZXhQb2xhckNvb3Jkc19YOiBudW1iZXIsXG4gICAgICAgIGF0dFZlcnRleFBvbGFyQ29vcmRzX1k6IG51bWJlcixcbiAgICAgICAgYXR0VmVydGV4UG9sYXJDb29yZHNfWjogbnVtYmVyXG4gICAgKSB7XG4gICAgICAgIGNvbnN0IHZlcnRJbmRleCA9IHRoaXMudmVydFN0YXRpY0N1cnNvclxuICAgICAgICBpZiAodmVydEluZGV4IDwgMCB8fCB2ZXJ0SW5kZXggPj0gdGhpcy52ZXJ0Q291bnQpIHRocm93IEVycm9yKGBbcG9rZVZlcnRTdGF0aWNEYXRhXSBDdXJzb3Igb3V0IG9mIHJhbmdlOiB2ZXJ0U3RhdGljQ3Vyc29yID0gJHt2ZXJ0SW5kZXh9YClcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMudmVydFN0YXRpY0RhdGFcbiAgICAgICAgbGV0IGluZGV4ID0gdmVydEluZGV4ICogM1xuICAgICAgICBkYXRhW2luZGV4KytdID0gYXR0VmVydGV4UG9sYXJDb29yZHNfWCxcbiAgICAgICAgZGF0YVtpbmRleCsrXSA9IGF0dFZlcnRleFBvbGFyQ29vcmRzX1ksXG4gICAgICAgIGRhdGFbaW5kZXgrK10gPSBhdHRWZXJ0ZXhQb2xhckNvb3Jkc19aXG4gICAgICAgIHRoaXMudmVydFN0YXRpY0N1cnNvcisrXG4gICAgfVxuICAgIHB1YmxpYyBwb2tlSW5zdEV2ZXJ5N1N0YXRpY0RhdGEoXG4gICAgICAgIGF0dEluc3RhbmNlQ29sb3JfWDogbnVtYmVyLFxuICAgICAgICBhdHRJbnN0YW5jZUNvbG9yX1k6IG51bWJlcixcbiAgICAgICAgYXR0SW5zdGFuY2VDb2xvcl9aOiBudW1iZXJcbiAgICApIHtcbiAgICAgICAgY29uc3QgdmVydEluZGV4ID0gdGhpcy5pbnN0RXZlcnk3U3RhdGljQ3Vyc29yXG4gICAgICAgIGlmICh2ZXJ0SW5kZXggPCAwIHx8IHZlcnRJbmRleCA+PSBNYXRoLmZsb29yKHRoaXMuaW5zdENvdW50IC8gNykpIHRocm93IEVycm9yKGBbcG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhXSBDdXJzb3Igb3V0IG9mIHJhbmdlOiBpbnN0RXZlcnk3U3RhdGljQ3Vyc29yID0gJHt2ZXJ0SW5kZXh9YClcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0RhdGFcbiAgICAgICAgbGV0IGluZGV4ID0gdmVydEluZGV4ICogM1xuICAgICAgICBkYXRhW2luZGV4KytdID0gYXR0SW5zdGFuY2VDb2xvcl9YLFxuICAgICAgICBkYXRhW2luZGV4KytdID0gYXR0SW5zdGFuY2VDb2xvcl9ZLFxuICAgICAgICBkYXRhW2luZGV4KytdID0gYXR0SW5zdGFuY2VDb2xvcl9aXG4gICAgICAgIHRoaXMuaW5zdEV2ZXJ5N1N0YXRpY0N1cnNvcisrXG4gICAgfVxuICAgIHB1YmxpYyBwb2tlSW5zdFN0YXRpY0RhdGEoXG4gICAgICAgIGF0dEluc3RhbmNlQW5nbGU6IG51bWJlclxuICAgICkge1xuICAgICAgICBjb25zdCB2ZXJ0SW5kZXggPSB0aGlzLmluc3RTdGF0aWNDdXJzb3JcbiAgICAgICAgaWYgKHZlcnRJbmRleCA8IDAgfHwgdmVydEluZGV4ID49IHRoaXMuaW5zdENvdW50KSB0aHJvdyBFcnJvcihgW3Bva2VJbnN0U3RhdGljRGF0YV0gQ3Vyc29yIG91dCBvZiByYW5nZTogaW5zdFN0YXRpY0N1cnNvciA9ICR7dmVydEluZGV4fWApXG4gICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLmluc3RTdGF0aWNEYXRhXG4gICAgICAgIGxldCBpbmRleCA9IHZlcnRJbmRleCAqIDFcbiAgICAgICAgZGF0YVtpbmRleCsrXSA9IGF0dEluc3RhbmNlQW5nbGVcbiAgICAgICAgdGhpcy5pbnN0U3RhdGljQ3Vyc29yKytcbiAgICB9XG5cbiAgICBcblxuICAgIHB1YmxpYyBkZXN0cm95KCkge1xuICAgICAgICBjb25zdCB7IGdsLCBwcmcsIHZlcnRTdGF0aWNCdWZmLCBpbnN0RXZlcnk3U3RhdGljQnVmZiwgaW5zdFN0YXRpY0J1ZmYgfSA9IHRoaXNcbiAgICAgICAgZ2wuZGVsZXRlQnVmZmVyKHZlcnRTdGF0aWNCdWZmKVxuICAgICAgICBnbC5kZWxldGVCdWZmZXIoaW5zdEV2ZXJ5N1N0YXRpY0J1ZmYpXG4gICAgICAgIGdsLmRlbGV0ZUJ1ZmZlcihpbnN0U3RhdGljQnVmZilcbiAgICAgICAgZ2wuZGVsZXRlUHJvZ3JhbShwcmcpXG4gICAgICAgIGdsLmRlbGV0ZVZlcnRleEFycmF5KHRoaXMudmVydEFycmF5KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZvbmN0aW9uIMOgIGFwcGVsZXIgZGFucyB1biBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYC5cbiAgICAgKiBAcGFyYW0gdGltZSBUZW1wcyBlbiBtaWxsaXNlY29uZGVzXG4gICAgICogQHBhcmFtIG9uUGFpbnQgRm9uY3Rpb24gw6AgdXRpbGlzZXIgcG91cjpcbiAgICAgKiAtIG1ldHRyZSDDoCBqb3VyIGRlcyB1bmlmb3Jtc1xuICAgICAqIC0gYWN0aXZlciBkZXMgZm9uY3Rpb25uYWxpdMOpIGRlIFdlYkdMIChkZXB0aCB0ZXN0LCBjb21waXNpdGluZywgLi4uKVxuICAgICAqIC0gLi4uXG4gICAgICovXG4gICAgcHVibGljIHJlYWRvbmx5IHBhaW50ID0gKFxuICAgICAgICB0aW1lOiBudW1iZXIsXG4gICAgICAgIG9uUGFpbnQ/OiAocGFpbnRlcjogUGFpbnRlciwgdGltZTogbnVtYmVyKSA9PiB2b2lkXG4gICAgKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgZ2wsIHByZyB9ID0gdGhpc1xuICAgICAgICBnbC51c2VQcm9ncmFtKHByZylcbiAgICAgICAgaWYgKG9uUGFpbnQpIG9uUGFpbnQodGhpcywgdGltZSlcbiAgICAgICAgZ2wuYmluZFZlcnRleEFycmF5KHRoaXMudmVydEFycmF5KVxuICAgICAgICBnbC5kcmF3QXJyYXlzSW5zdGFuY2VkKGdsLlRSSUFOR0xFUywgMCwgdGhpcy52ZXJ0Q291bnQsIHRoaXMuaW5zdENvdW50KVxuICAgICAgICBnbC5iaW5kVmVydGV4QXJyYXkobnVsbClcbiAgICB9XG5cbiAgICAkdW5pVHJpYW5nbGVzU2NhbGUodmFsdWU6IG51bWJlcikge1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLl8kdW5pVHJpYW5nbGVzU2NhbGUsIHZhbHVlKVxuICAgIH1cbiAgICBcbiAgICAkdW5pQW5nbGVTdGVwKHZhbHVlOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5fJHVuaUFuZ2xlU3RlcCwgdmFsdWUpXG4gICAgfVxuICAgIFxuICAgICR1bmlTY3JlZW5TY2FsZSh4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgICAgICB0aGlzLmdsLnVuaWZvcm0yZih0aGlzLl8kdW5pU2NyZWVuU2NhbGUsIHgsIHkpXG4gICAgfVxuICAgIFxuICAgICR1bmlPcGFjaXR5KHZhbHVlOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5fJHVuaU9wYWNpdHksIHZhbHVlKVxuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGNyZWF0ZVNoYWRlcihnbDogV2ViR0wyUmVuZGVyaW5nQ29udGV4dCwgcHJnOiBXZWJHTFByb2dyYW0sIHR5cGU6IG51bWJlciwgY29kZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IHNoYWRlciA9IGdsLmNyZWF0ZVNoYWRlcih0eXBlKVxuICAgICAgICBpZiAoIXNoYWRlcikgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMIFNoYWRlciFcIilcbiAgICBcbiAgICAgICAgZ2wuc2hhZGVyU291cmNlKHNoYWRlciwgY29kZSlcbiAgICAgICAgZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpXG4gICAgICAgIGdsLmF0dGFjaFNoYWRlcihwcmcsIHNoYWRlcilcbiAgICB9XG5cbiAgICBzdGF0aWMgcmVhZG9ubHkgVkVSVCA9IGAjdmVyc2lvbiAzMDAgZXNcbnVuaWZvcm0gdmVjMiB1bmlTY3JlZW5TY2FsZTtcbnVuaWZvcm0gZmxvYXQgdW5pQW5nbGVTdGVwO1xudW5pZm9ybSBmbG9hdCB1bmlUcmlhbmdsZXNTY2FsZTtcbmluIHZlYzMgYXR0VmVydGV4UG9sYXJDb29yZHM7XG5pbiB2ZWMzIGF0dEluc3RhbmNlQ29sb3I7XG5pbiBmbG9hdCBhdHRJbnN0YW5jZUFuZ2xlO1xub3V0IHZlYzMgdmFyQ29sb3I7XG5jb25zdCBmbG9hdCBSQURfUEVSX0RFRz0wLjAxNzQ1MzI5MjUxOTk0MzI5NTtcbnZvaWQgbWFpbigpe3ZhckNvbG9yPWF0dEluc3RhbmNlQ29sb3IqdmVjMyhhdHRWZXJ0ZXhQb2xhckNvb3Jkcy56KTtcbmZsb2F0IGluc3RBbmc9dW5pQW5nbGVTdGVwKmZsb2F0KDErZ2xfSW5zdGFuY2VJRCkqUkFEX1BFUl9ERUc7XG5mbG9hdCBpbnN0RGlzPTAuNzUtZmxvYXQoZ2xfSW5zdGFuY2VJRCkqMC4wMTM4ODg4ODg4ODg5O1xuZmxvYXQgdmVydEFuZz1pbnN0QW5nKyhhdHRWZXJ0ZXhQb2xhckNvb3Jkcy54K2F0dEluc3RhbmNlQW5nbGUpKlJBRF9QRVJfREVHO1xuZmxvYXQgdmVydERpcz1hdHRWZXJ0ZXhQb2xhckNvb3Jkcy55Kmluc3REaXMqdW5pVHJpYW5nbGVzU2NhbGU7XG5mbG9hdCB4PXZlcnREaXMqY29zKHZlcnRBbmcpO1xuZmxvYXQgeT12ZXJ0RGlzKnNpbih2ZXJ0QW5nKTtcbmZsb2F0IGN4PWluc3REaXMqY29zKGluc3RBbmcpO1xuZmxvYXQgY3k9aW5zdERpcypzaW4oaW5zdEFuZyk7XG5nbF9Qb3NpdGlvbj12ZWM0KHVuaVNjcmVlblNjYWxlKnZlYzIoY3greCxjeSt5KSwwLjAsMS4wKTt9YFxuICAgIHN0YXRpYyByZWFkb25seSBGUkFHID0gYCN2ZXJzaW9uIDMwMCBlc1xucHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XG51bmlmb3JtIGZsb2F0IHVuaU9wYWNpdHk7XG5pbiB2ZWMzIHZhckNvbG9yO1xub3V0IHZlYzQgRnJhZ0NvbG9yO1xudm9pZCBtYWluKCl7RnJhZ0NvbG9yPXZlYzQodmFyQ29sb3IsdW5pT3BhY2l0eSk7fWBcbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgUGFpbnRlciBmcm9tIFwiLi9wYWludGVyXCJcbmltcG9ydCBTY2VuZSwgeyBQYWludEZ1bmMgfSBmcm9tIFwiQC92aWV3L3NjZW5lXCJcbmltcG9ydCBcIi4vdGVzdC5jc3NcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFRlc3RQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRlc3QocHJvcHM6IFRlc3RQcm9wcykge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgICAgICA8U2NlbmUgb25Jbml0PXtyZW5kZXJ9IHBsYXk9e3RydWV9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lcyhwcm9wczogVGVzdFByb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gW1wiY3VzdG9tXCIsIFwiVGVzdFwiXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cblxuZnVuY3Rpb24gcmVuZGVyKGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0KSB7XG4gICAgY29uc3QgcGFpbnRlciA9IG5ldyBQYWludGVyKGdsLCAxMiwgNiAqIDcpXG4gICAgY29uc3QgYSA9IDAuMVxuICAgIGNvbnN0IGIgPSAwLjU1XG4gICAgY29uc3QgYyA9IDFcbiAgICBwYWludGVyLnBva2VJbnN0RXZlcnk3U3RhdGljRGF0YShhLCBiLCBjKVxuICAgIHBhaW50ZXIucG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhKGEsIGMsIGIpXG4gICAgcGFpbnRlci5wb2tlSW5zdEV2ZXJ5N1N0YXRpY0RhdGEoYiwgYSwgYylcbiAgICBwYWludGVyLnBva2VJbnN0RXZlcnk3U3RhdGljRGF0YShjLCBhLCBiKVxuICAgIHBhaW50ZXIucG9rZUluc3RFdmVyeTdTdGF0aWNEYXRhKGIsIGMsIGEpXG4gICAgcGFpbnRlci5wb2tlSW5zdEV2ZXJ5N1N0YXRpY0RhdGEoYywgYiwgYSlcbiAgICBwYWludGVyLnB1c2hJbnN0RXZlcnk3U3RhdGljQXJyYXkoKVxuICAgIGZvciAobGV0IGk9MDsgaTw2Kjc7IGkrKykge1xuICAgICAgICBwYWludGVyLnBva2VJbnN0U3RhdGljRGF0YShpICogMzYwIC8gKDYqNykpXG4gICAgfVxuICAgIHBhaW50ZXIucHVzaEluc3RTdGF0aWNBcnJheSgpXG4gICAgcGFpbnRlci5wb2tlVmVydFN0YXRpY0RhdGEoMCwgMC4zLCAwKVxuICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKDkwLCAwLjQsIDEpXG4gICAgcGFpbnRlci5wb2tlVmVydFN0YXRpY0RhdGEoLTkwLCAwLjQsIDEpXG4gICAgcGFpbnRlci5wb2tlVmVydFN0YXRpY0RhdGEoMCwgMC41LCAyKVxuICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKDEyMCwgMC4yNSwgMC4xKVxuICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKDE4MCwgMCwgMSlcbiAgICBwYWludGVyLnBva2VWZXJ0U3RhdGljRGF0YSgwLCAwLjUsIDIpXG4gICAgcGFpbnRlci5wb2tlVmVydFN0YXRpY0RhdGEoLTEyMCwgMC4yNSwgMC4xKVxuICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKDE4MCwgMCwgMSlcbiAgICBwYWludGVyLnBva2VWZXJ0U3RhdGljRGF0YSgwLCAwLjQsMSlcbiAgICBwYWludGVyLnBva2VWZXJ0U3RhdGljRGF0YSg2MCwgMC40LCAyKVxuICAgIHBhaW50ZXIucG9rZVZlcnRTdGF0aWNEYXRhKC02MCwgMC40LCAyKVxuICAgIHBhaW50ZXIucHVzaFZlcnRTdGF0aWNBcnJheSgpXG4gICAgZ2wuY2xlYXJDb2xvcigwLCAwLCAwLCAxKVxuICAgIHBhaW50ZXIuaW5zdENvdW50ID0gMVxuICAgIHJldHVybiBuZXcgUHJvbWlzZTxQYWludEZ1bmM+KChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHJlc29sdmUoKHRpbWUpID0+IHtcbiAgICAgICAgICAgIHBhaW50ZXIucGFpbnQodGltZSwgKHAsIHQpID0+IHtcbiAgICAgICAgICAgICAgICBnbC5jbGVhcihnbC5DT0xPUl9CVUZGRVJfQklUKVxuICAgICAgICAgICAgICAgIGdsLmVuYWJsZShnbC5CTEVORClcbiAgICAgICAgICAgICAgICBnbC5ibGVuZEZ1bmMoZ2wuU1JDX0FMUEhBLCBnbC5PTkVfTUlOVVNfU1JDX0FMUEhBKVxuICAgICAgICAgICAgICAgIHAuJHVuaU9wYWNpdHkoMSlcbiAgICAgICAgICAgICAgICBwLiR1bmlBbmdsZVN0ZXAodCAqIDAuMDAyKVxuICAgICAgICAgICAgICAgIHAuJHVuaVRyaWFuZ2xlc1NjYWxlKDEgKyAyICogTWF0aC5hYnMoTWF0aC5zaW4odGltZSAqIDAuMDAwNzQ1NDUpKSlcbiAgICAgICAgICAgICAgICBjb25zdCB3ID0gZ2wuZHJhd2luZ0J1ZmZlcldpZHRoXG4gICAgICAgICAgICAgICAgY29uc3QgaCA9IGdsLmRyYXdpbmdCdWZmZXJIZWlnaHRcbiAgICAgICAgICAgICAgICBpZiAodyA+IGgpIHtcbiAgICAgICAgICAgICAgICAgICAgcC4kdW5pU2NyZWVuU2NhbGUoaCAvIHcsIDEpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcC4kdW5pU2NyZWVuU2NhbGUoMSwgdyAvIGgpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9KVxufVxuIiwidHlwZSBBY3Rpb24gPSAoLi4uYXJnczogYW55W10pID0+IHZvaWRcblxuLyoqXG4gKiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBhcyBtdWNoIGFzIHlvdSB3YW50LiBJdCB3aWxsIHBlcmZvcm0gdGhlIGRlYm91Y2UgZm9yIHlvdS5cbiAqIFB1dCBpbiB0aGUgc2FtZSBhcmdzIGFzIHRoZSBgYWN0aW9uYCBmdW5jdGlvbi5cbiAqXG4gKiAqIGFjdGlvbiAtICBBY3Rpb24gdG8gY2FsbC4gVHdvIGNvbnNlY3V0aXZlIGFjdGlvbnMgY2Fubm90IGJlICBjYWxsZWQgaWYgdGhlcmUgaXNcbiAqIGxlc3MgdGhhbiBgZGVsYXlgIG1zIGJldHdlZW4gdGhlbS5cbiAqICogZGVsYXkgLSBOdW1iZXIgb2YgbWlsbGlzZWNvbmRzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhY3Rpb246IEFjdGlvbiwgZGVsYXk6IG51bWJlcik6IEFjdGlvbiB7XG4gICAgbGV0IHRpbWVyID0gMFxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKHRoaXM6IHsgZGVsYXk6IG51bWJlciB9LCAuLi5hcmdzOiBhbnlbXSkge1xuICAgICAgICBpZiAodGltZXIpIHdpbmRvdy5jbGVhclRpbWVvdXQodGltZXIpXG4gICAgICAgIHRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGltZXIgPSAwXG4gICAgICAgICAgICBhY3Rpb24oLi4uYXJncylcbiAgICAgICAgfSwgICAgICAgICAgICAgICAgICAgICAgICBkZWxheSlcbiAgICB9XG59XG4iLCJpbXBvcnQgRGVib3VuY2VyIGZyb20gXCIuL2RlYm91bmNlclwiXG5pbXBvcnQgeyBzbGVlcCB9IGZyb20gXCIuL3NsZWVwXCJcbmltcG9ydCBUaHJvdHRsZXIgZnJvbSBcIi4vdGhyb3R0bGVyXCJcbmltcG9ydCBVcGRhdGVUYXNrcyBmcm9tIFwiLi91cGRhdGUtdGFza3NcIlxuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgRGVib3VuY2VyLFxuICAgIHNsZWVwLFxuICAgIFRocm90dGxlcixcbiAgICBVcGRhdGVUYXNrcyxcbn1cbiIsIi8qKlxuICogV2FpdCBmb3IgYGRlbGF5YCBtaWxsaXNlY29uZHMgdGhlbiByZXNvbHZlLlxuICogQHBhcmFtIGRlbGF5IFRpbWUgdG8gc2xlZXAgaW4gbXNlYy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNsZWVwKGRlbGF5OiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB3aW5kb3cuc2V0VGltZW91dChyZXNvbHZlLCBkZWxheSkpXG59XG4iLCJ0eXBlIEFjdGlvbiA9ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCB8IFByb21pc2U8dm9pZD5cblxuLyoqXG4gKiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBhcyBtdWNoIGFzIHlvdSB3YW50LiBJdCB3aWxsIHBlcmZvcm0gdGhlIGRlYm91Y2UgZm9yIHlvdS5cbiAqIFB1dCBpbiB0aGUgc2FtZSBhcmdzIGFzIHRoZSBgYWN0aW9uYCBmdW5jdGlvbi5cbiAqXG4gKiAqIGFjdGlvbiAtICBBY3Rpb24gdG8gY2FsbC4gVHdvIGNvbnNlY3V0aXZlIGFjdGlvbnMgY2Fubm90IGJlICBjYWxsZWQgaWYgdGhlcmUgaXNcbiAqIGxlc3MgdGhhbiBgZGVsYXlgIG1zIGJldHdlZW4gdGhlbS5cbiAqICogZGVsYXkgLSBOdW1iZXIgb2YgbWlsbGlzZWNvbmRzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiA8VCBleHRlbmRzIEFycmF5PGFueT4+KFxuICAgIGFjdGlvbjogKC4uLmFyZ3M6IFQpID0+ICh2b2lkIHwgUHJvbWlzZTx2b2lkPiksXG4gICAgZGVsYXk6IG51bWJlclxuKTogKC4uLmFyZ3M6IFQpID0+IHZvaWQge1xuICAgIGxldCB0aW1lciA9IDBcbiAgICBsZXQgdGltZXN0YW1wID0gMFxuICAgIGxldCBuZXh0QWN0aW9uOiBBY3Rpb24gPSAoKSA9PiB7XG4gICAgICAgIC8qIEVtcHR5IGFjdGlvbiovXG4gICAgfVxuICAgIGxldCBuZXh0QXJnczogYW55W10gPSBbXVxuICAgIGNvbnN0IHRocm90dGxlQWN0aW9uID0gKCkgPT4ge1xuICAgICAgICB0aW1lciA9IDBcbiAgICAgICAgbmV4dEFjdGlvbiguLi5uZXh0QXJncylcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKHRoaXM6IHsgZGVsYXk6IG51bWJlciB9LCAuLi5hcmdzOiBhbnlbXSkge1xuICAgICAgICBuZXh0QWN0aW9uID0gYWN0aW9uXG4gICAgICAgIG5leHRBcmdzID0gYXJnc1xuICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpXG4gICAgICAgIGNvbnN0IGVsYXBzZWRUaW1lID0gbm93IC0gdGltZXN0YW1wXG4gICAgICAgIHRpbWVzdGFtcCA9IG5vd1xuICAgICAgICBpZiAoZWxhcHNlZFRpbWUgPiBkZWxheSkge1xuICAgICAgICAgICAgdGhyb3R0bGVBY3Rpb24oKVxuICAgICAgICB9IGVsc2UgaWYgKHRpbWVyID09PSAwKSB7XG4gICAgICAgICAgICB0aW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KHRocm90dGxlQWN0aW9uLCBkZWxheSAtIGVsYXBzZWRUaW1lKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwidHlwZSBJVGFzayA9ICgpID0+IFByb21pc2U8dm9pZD5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXBkYXRlVGFza3Mge1xuICAgIHByaXZhdGUgbnh0VGFzaz86IElUYXNrXG4gICAgcHJpdmF0ZSBjdXJUYXNrPzogSVRhc2tcbiAgICBwcml2YXRlIGFjdGlvblJ1bm5pbmcgPSBmYWxzZVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBjbGFzcyBwcmV2ZW50IHR3byB0YXNrcyB0byBiZSBleGVjdXRlZCBpbiBwYXJhbGxlbC5cbiAgICAgKiBTbywgdGhlIHRhc2tzIGFyZSBxdWV1ZWQuIEJ1dCB0aGlzIGlzIGEgc21hc2hpbmctcXVldWUuXG4gICAgICogV2hpY2ggbWVhbnMgdGhhdCB0aGUgcXVldWUga2VlcHMgb25seSB0d28gZWxlbWVudHMsXG4gICAgICogdGhlIGZpcnN0IG9uZSBhbmQgdGhlIGxhc3Qgb25lLlxuICAgICAqL1xuICAgIGV4ZWModGFzazogSVRhc2spIHtcbiAgICAgICAgaWYgKHRoaXMuY3VyVGFzaykge1xuICAgICAgICAgICAgdGhpcy5ueHRUYXNrID0gdGFza1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jdXJUYXNrID0gdGFza1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5hY3Rpb25SdW5uaW5nKSB0aGlzLmFjdGlvbigpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhc3luYyBhY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuYWN0aW9uUnVubmluZyA9IHRydWVcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHdoaWxlICh0aGlzLmN1clRhc2spIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmN1clRhc2soKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJbVXBkYXRlVGFza3NdXCIsIGV4KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmN1clRhc2sgPSB0aGlzLm54dFRhc2tcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRoaXMuYWN0aW9uUnVubmluZyA9IGZhbHNlXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJleHBvcnQgYXN5bmMgZnVuY3Rpb24gY29weVRvQ2xpcGJvYXJkKGNvZGU6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KGNvZGUpXG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIlVuYWJsZSB0byBjb3B5IHRvIHRoZSBjbGlwYm9hcmQ6XCIsIGV4KVxuICAgIH1cbn1cbiIsImltcG9ydCBKU09ONSBmcm9tIFwianNvbjVcIlxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RXhjZXB0aW9uTWVzc2FnZShleDogdW5rbm93bik6IHN0cmluZyB7XG4gICAgaWYgKGV4IGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiBleC5tZXNzYWdlXG4gICAgaWYgKHR5cGVvZiBleCA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIGV4XG4gICAgcmV0dXJuIEpTT041LnN0cmluZ2lmeShleCwgbnVsbCwgXCIgIFwiKVxufSIsImltcG9ydCBQcmlzbSBmcm9tIFwicHJpc21qc1wiXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRHcmFtbWFyRm9yTGFuZ3VhZ2UobGFuZ3VhZ2U6IHN0cmluZyk6IFByaXNtLkdyYW1tYXIge1xuICAgIHJldHVybiBHTFNMXG59XG5cbmNvbnN0IFRZUEVTID0gW1xuICAgIFwiYnZlYzJcIixcbiAgICBcImJ2ZWMzXCIsXG4gICAgXCJidmVjNFwiLFxuICAgIFwiZG1hdDJcIixcbiAgICBcImRtYXQyeDJcIixcbiAgICBcImRtYXQyeDNcIixcbiAgICBcImRtYXQyeDRcIixcbiAgICBcImRtYXQzXCIsXG4gICAgXCJkbWF0M3gyXCIsXG4gICAgXCJkbWF0M3gzXCIsXG4gICAgXCJkbWF0M3g0XCIsXG4gICAgXCJkbWF0NFwiLFxuICAgIFwiZG1hdDR4MlwiLFxuICAgIFwiZG1hdDR4M1wiLFxuICAgIFwiZG1hdDR4NFwiLFxuICAgIFwiZHZlYzJcIixcbiAgICBcImR2ZWMzXCIsXG4gICAgXCJkdmVjNFwiLFxuICAgIFwiZmxvYXRcIixcbiAgICBcImZ2ZWMyXCIsXG4gICAgXCJmdmVjM1wiLFxuICAgIFwiZnZlYzRcIixcbiAgICBcImlzYW1wbGVyMURcIixcbiAgICBcImlzYW1wbGVyMURBcnJheVwiLFxuICAgIFwiaXNhbXBsZXIyRFwiLFxuICAgIFwiaXNhbXBsZXIyREFycmF5XCIsXG4gICAgXCJpc2FtcGxlcjJETVNcIixcbiAgICBcImlzYW1wbGVyMkRNU0FycmF5XCIsXG4gICAgXCJpc2FtcGxlcjJEUmVjdFwiLFxuICAgIFwiaXNhbXBsZXIzRFwiLFxuICAgIFwiaXNhbXBsZXJCdWZmZXJcIixcbiAgICBcImlzYW1wbGVyQ3ViZVwiLFxuICAgIFwiaXNhbXBsZXJDdWJlQXJyYXlcIixcbiAgICBcIml2ZWMyXCIsXG4gICAgXCJpdmVjM1wiLFxuICAgIFwiaXZlYzRcIixcbiAgICBcIm1hdDJcIixcbiAgICBcIm1hdDJ4MlwiLFxuICAgIFwibWF0MngzXCIsXG4gICAgXCJtYXQyeDRcIixcbiAgICBcIm1hdDNcIixcbiAgICBcIm1hdDN4MlwiLFxuICAgIFwibWF0M3gzXCIsXG4gICAgXCJtYXQzeDRcIixcbiAgICBcIm1hdDRcIixcbiAgICBcIm1hdDR4MlwiLFxuICAgIFwibWF0NHgzXCIsXG4gICAgXCJtYXQ0eDRcIixcbiAgICBcInNhbXBsZVwiLFxuICAgIFwic2FtcGxlcjFEXCIsXG4gICAgXCJzYW1wbGVyMURBcnJheVwiLFxuICAgIFwic2FtcGxlcjFEQXJyYXlTaGFkb3dcIixcbiAgICBcInNhbXBsZXIxRFNoYWRvd1wiLFxuICAgIFwic2FtcGxlcjJEXCIsXG4gICAgXCJzYW1wbGVyMkRBcnJheVwiLFxuICAgIFwic2FtcGxlcjJEQXJyYXlTaGFkb3dcIixcbiAgICBcInNhbXBsZXIyRE1TXCIsXG4gICAgXCJzYW1wbGVyMkRNU0FycmF5XCIsXG4gICAgXCJzYW1wbGVyMkRSZWN0XCIsXG4gICAgXCJzYW1wbGVyMkRSZWN0U2hhZG93XCIsXG4gICAgXCJzYW1wbGVyMkRTaGFkb3dcIixcbiAgICBcInNhbXBsZXIzRFwiLFxuICAgIFwic2FtcGxlckJ1ZmZlclwiLFxuICAgIFwic2FtcGxlckN1YmVcIixcbiAgICBcInNhbXBsZXJDdWJlQXJyYXlcIixcbiAgICBcInNhbXBsZXJDdWJlQXJyYXlTaGFkb3dcIixcbiAgICBcInNhbXBsZXJDdWJlU2hhZG93XCIsXG4gICAgXCJ1c2FtcGxlcjFEXCIsXG4gICAgXCJ1c2FtcGxlcjFEQXJyYXlcIixcbiAgICBcInVzYW1wbGVyMkRcIixcbiAgICBcInVzYW1wbGVyMkRBcnJheVwiLFxuICAgIFwidXNhbXBsZXIyRE1TXCIsXG4gICAgXCJ1c2FtcGxlcjJETVNBcnJheVwiLFxuICAgIFwidXNhbXBsZXIyRFJlY3RcIixcbiAgICBcInVzYW1wbGVyM0RcIixcbiAgICBcInVzYW1wbGVyQnVmZmVyXCIsXG4gICAgXCJ1c2FtcGxlckN1YmVcIixcbiAgICBcInVzYW1wbGVyQ3ViZUFycmF5XCIsXG4gICAgXCJ1dmVjMlwiLFxuICAgIFwidXZlYzNcIixcbiAgICBcInV2ZWM0XCIsXG4gICAgXCJ2ZWMyXCIsXG4gICAgXCJ2ZWMzXCIsXG4gICAgXCJ2ZWM0XCIsXG4gICAgXCJ2b2lkXCIsXG5dXG5cbmNvbnN0IEtFWVdPUkRTID0gW1xuICAgIFwiY2VudHJvaWRcIixcbiAgICBcImNvbnN0XCIsXG4gICAgXCJkaXNjYXJkXCIsXG4gICAgXCJlbHNlXCIsXG4gICAgXCJmbGF0XCIsXG4gICAgXCJoaWdocFwiLFxuICAgIFwiaWZcIixcbiAgICBcImluXCIsXG4gICAgXCJpbm91dFwiLFxuICAgIFwiaW52YXJpYW50XCIsXG4gICAgXCJsYXlvdXRcIixcbiAgICBcImxvd3BcIixcbiAgICBcIm1lZGl1bXBcIixcbiAgICBcIm5vcGVyc3BlY3RpdmVcIixcbiAgICBcIm91dFwiLFxuICAgIFwicGF0Y2hcIixcbiAgICBcInByZWNpc2lvblwiLFxuICAgIFwic21vb3RoXCIsXG4gICAgXCJzdWJyb3V0aW5lXCIsXG4gICAgXCJ1bmlmb3JtXCIsXG4gICAgLy8gUmVzZXJ2ZWQgZm9yIGZ1dHVyZS5cbiAgICBcImFjdGl2ZVwiLFxuICAgIFwiYXNtXCIsXG4gICAgXCJjYXN0XCIsXG4gICAgXCJjbGFzc1wiLFxuICAgIFwiY29tbW9uXCIsXG4gICAgXCJlbnVtXCIsXG4gICAgXCJleHRlcm5cIixcbiAgICBcImV4dGVybmFsXCIsXG4gICAgXCJmaWx0ZXJcIixcbiAgICBcImZpeGVkXCIsXG4gICAgXCJnb3RvXCIsXG4gICAgXCJoYWxmXCIsXG4gICAgXCJodmVjMlwiLFxuICAgIFwiaHZlYzNcIixcbiAgICBcImh2ZWM0XCIsXG4gICAgXCJpaW1hZ2UxRFwiLFxuICAgIFwiaWltYWdlMURBcnJheVwiLFxuICAgIFwiaWltYWdlMkRcIixcbiAgICBcImlpbWFnZTJEQXJyYXlcIixcbiAgICBcImlpbWFnZTNEXCIsXG4gICAgXCJpaW1hZ2VCdWZmZXJcIixcbiAgICBcImlpbWFnZUN1YmVcIixcbiAgICBcImltYWdlMURcIixcbiAgICBcImltYWdlMURBcnJheVwiLFxuICAgIFwiaW1hZ2UxREFycmF5U2hhZG93XCIsXG4gICAgXCJpbWFnZTFEU2hhZG93XCIsXG4gICAgXCJpbWFnZTJEXCIsXG4gICAgXCJpbWFnZTJEQXJyYXlcIixcbiAgICBcImltYWdlMkRBcnJheVNoYWRvd1wiLFxuICAgIFwiaW1hZ2UyRFNoYWRvd1wiLFxuICAgIFwiaW1hZ2UzRFwiLFxuICAgIFwiaW1hZ2VCdWZmZXJcIixcbiAgICBcImltYWdlQ3ViZVwiLFxuICAgIFwiaW5saW5lXCIsXG4gICAgXCJpbnB1dFwiLFxuICAgIFwiaW50ZXJmYWNlXCIsXG4gICAgXCJsb25nXCIsXG4gICAgXCJuYW1lc3BhY2VcIixcbiAgICBcIm5vaW5saW5lXCIsXG4gICAgXCJvdXRwdXRcIixcbiAgICBcInBhY2tlZFwiLFxuICAgIFwicGFydGl0aW9uXCIsXG4gICAgXCJwdWJsaWNcIixcbiAgICBcInJvd19tYWpvclwiLFxuICAgIFwic2FtcGxlcjNEUmVjdFwiLFxuICAgIFwic2hvcnRcIixcbiAgICBcInNpemVvZlwiLFxuICAgIFwic3RhdGljXCIsXG4gICAgXCJzdXBlcnBcIixcbiAgICBcInRlbXBsYXRlXCIsXG4gICAgXCJ0aGlzXCIsXG4gICAgXCJ0eXBlZGVmXCIsXG4gICAgXCJ1aW1hZ2UxRFwiLFxuICAgIFwidWltYWdlMURBcnJheVwiLFxuICAgIFwidWltYWdlMkRcIixcbiAgICBcInVpbWFnZTJEQXJyYXlcIixcbiAgICBcInVpbWFnZTNEXCIsXG4gICAgXCJ1aW1hZ2VCdWZmZXJcIixcbiAgICBcInVpbWFnZUN1YmVcIixcbiAgICBcInVuaW9uXCIsXG4gICAgXCJ1bnNpZ25lZFwiLFxuICAgIFwidXNpbmdcIixcbiAgICBcInZvbGF0aWxlXCIsXG5dXG5cbmNvbnN0IEdMT0JBTFMgPSBbXG4gICAgXCJnbF9EZXB0aFJhbmdlXCIsXG4gICAgXCJnbF9EZXB0aFJhbmdlLmRpZmZcIixcbiAgICBcImdsX0RlcHRoUmFuZ2UuZmFyXCIsXG4gICAgXCJnbF9EZXB0aFJhbmdlLm5lYXJcIixcbiAgICBcImdsX0ZyYWdDb29yZFwiLFxuICAgIFwiZ2xfRnJhZ0RlcHRoXCIsXG4gICAgXCJnbF9Gcm9udEZhY2luZ1wiLFxuICAgIFwiZ2xfSW5zdGFuY2VJRFwiLFxuICAgIFwiZ2xfUG9pbnRDb29yZFwiLFxuICAgIFwiZ2xfUG9pbnRTaXplXCIsXG4gICAgXCJnbF9Qb3NpdGlvblwiLFxuICAgIFwiZ2xfVmVydGV4SURcIixcbl1cblxuY29uc3QgRlVOQ1RJT05TID0gW1xuICAgIFwiYWJzXCIsXG4gICAgXCJhY29zXCIsXG4gICAgXCJhY29zaFwiLFxuICAgIFwiYWxsXCIsXG4gICAgXCJhbnlcIixcbiAgICBcImFzaW5cIixcbiAgICBcImFzaW5oXCIsXG4gICAgXCJhdGFuXCIsXG4gICAgXCJhdGFuaFwiLFxuICAgIFwiY2VpbFwiLFxuICAgIFwiY2xhbXBcIixcbiAgICBcImNvc1wiLFxuICAgIFwiY29zaFwiLFxuICAgIFwiY3Jvc3NcIixcbiAgICBcImRlZ3JlZXNcIixcbiAgICBcImRldGVybWluYW50XCIsXG4gICAgXCJkRmR4XCIsXG4gICAgXCJkRmR5XCIsXG4gICAgXCJkaXN0YW5jZVwiLFxuICAgIFwiZG90XCIsXG4gICAgXCJlcXVhbFwiLFxuICAgIFwiZXhwXCIsXG4gICAgXCJleHAyXCIsXG4gICAgXCJmYWNlZm9yd2FyZFwiLFxuICAgIFwiZmxvYXRCaXRzVG9JbnRcIixcbiAgICBcImZsb2F0Qml0c1RvVWludFwiLFxuICAgIFwiZmxvb3JcIixcbiAgICBcImZyYWN0XCIsXG4gICAgXCJmd2lkdGhcIixcbiAgICBcImdyZWF0ZXJUaGFuXCIsXG4gICAgXCJncmVhdGVyVGhhbkVxdWFsXCIsXG4gICAgXCJpbnRCaXRzVG9GbG9hdFwiLFxuICAgIFwiaW52ZXJzZVwiLFxuICAgIFwiaW52ZXJzZXNxcnRcIixcbiAgICBcImlzaW5mXCIsXG4gICAgXCJpc25hblwiLFxuICAgIFwibGVuZ3RoXCIsXG4gICAgXCJsZXNzVGhhblwiLFxuICAgIFwibGVzc1RoYW5FcXVhbFwiLFxuICAgIFwibG9nXCIsXG4gICAgXCJsb2cyXCIsXG4gICAgXCJtYXRyaXhDb21wTXVsdFwiLFxuICAgIFwibWF4XCIsXG4gICAgXCJtaW5cIixcbiAgICBcIm1peFwiLFxuICAgIFwibW9kXCIsXG4gICAgXCJtb2RmXCIsXG4gICAgXCJub3JtYWxpemVcIixcbiAgICBcIm5vdFwiLFxuICAgIFwibm90RXF1YWxcIixcbiAgICBcIm91dGVyUHJvZHVjdFwiLFxuICAgIFwicGFja0hhbGYyeDE2XCIsXG4gICAgXCJwYWNrU25vcm0yeDE2XCIsXG4gICAgXCJwYWNrVW5vcm0yeDE2XCIsXG4gICAgXCJwb3dcIixcbiAgICBcInJhZGlhbnNcIixcbiAgICBcInJlZmxlY3RcIixcbiAgICBcInJlZnJhY3RcIixcbiAgICBcInJvdW5kXCIsXG4gICAgXCJyb3VuZEV2ZW5cIixcbiAgICBcInNpZ25cIixcbiAgICBcInNpblwiLFxuICAgIFwic2luaFwiLFxuICAgIFwic21vb3Roc3RlcFwiLFxuICAgIFwic3FydFwiLFxuICAgIFwic3RlcFwiLFxuICAgIFwidGFuXCIsXG4gICAgXCJ0YW5oXCIsXG4gICAgXCJ0ZXhlbEZldGNoXCIsXG4gICAgXCJ0ZXhlbEZldGNoT2Zmc2V0XCIsXG4gICAgXCJ0ZXh0dXJlXCIsXG4gICAgXCJ0ZXh0dXJlR3JhZFwiLFxuICAgIFwidGV4dHVyZUdyYWRPZmZzZXRcIixcbiAgICBcInRleHR1cmVMb2RcIixcbiAgICBcInRleHR1cmVMb2RPZmZzZXRcIixcbiAgICBcInRleHR1cmVPZmZzZXRcIixcbiAgICBcInRleHR1cmVQcm9qXCIsXG4gICAgXCJ0ZXh0dXJlUHJvakdyYWRcIixcbiAgICBcInRleHR1cmVQcm9qR3JhZE9mZnNldFwiLFxuICAgIFwidGV4dHVyZVByb2pMb2RcIixcbiAgICBcInRleHR1cmVQcm9qTG9kT2Zmc2V0XCIsXG4gICAgXCJ0ZXh0dXJlUHJvak9mZnNldFwiLFxuICAgIFwidGV4dHVyZVNpemVcIixcbiAgICBcInRyYW5zcG9zZVwiLFxuICAgIFwidHJ1bmNcIixcbiAgICBcInVpbnRCaXRzVG9GbG9hdFwiLFxuICAgIFwidW5wYWNrSGFsZjJ4MTZcIixcbiAgICBcInVucGFja1Nub3JtMngxNlwiLFxuICAgIFwidW5wYWNrVW5vcm0yeDE2XCIsXG5dXG5cbmNvbnN0IEdMU0w6IFByaXNtLkdyYW1tYXIgPSB7XG4gICAgY29tbWVudDogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcXC9cXCpbXFxzXFxTXSo/KD86XFwqXFwvfCQpL2csXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXCIoXnxbXlxcXFw6XSlcXC9cXC8uKlwiL2csXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICB9LFxuICAgIF0sXG4gICAgbnVtYmVyOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKF58W15cXHckXSkoPzpOYU58SW5maW5pdHl8MFtiQl1bMDFdKyg/Ol9bMDFdKykqbj98MFtvT11bMC03XSsoPzpfWzAtN10rKSpuP3wwW3hYXVtcXGRBLUZhLWZdKyg/Ol9bXFxkQS1GYS1mXSspKm4/fFxcZCsoPzpfXFxkKykqbnwoPzpcXGQrKD86X1xcZCspKig/OlxcLig/OlxcZCsoPzpfXFxkKykqKT8pP3xcXC5cXGQrKD86X1xcZCspKikoPzpbRWVdWystXT9cXGQrKD86X1xcZCspKik/KSg/IVtcXHckXSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgIH0sXG4gICAgdHlwZTogbWFrZUlkZW50aWZpZXJzUlgoVFlQRVMpLFxuICAgIGtleXdvcmQ6IG1ha2VJZGVudGlmaWVyc1JYKEtFWVdPUkRTKSxcbiAgICBnbG9iYWw6IG1ha2VJZGVudGlmaWVyc1JYKEdMT0JBTFMpLFxuICAgIGZ1bmN0aW9uOiBtYWtlSWRlbnRpZmllcnNSWChGVU5DVElPTlMpLFxufVxuXG5mdW5jdGlvbiBtYWtlSWRlbnRpZmllcnNSWCh3b3Jkczogc3RyaW5nW10pOiBSZWdFeHAge1xuICAgIHJldHVybiBuZXcgUmVnRXhwKGAoPzpbXmEtekEtWjAtOV9dKSgke3dvcmRzLmpvaW4oXCJ8XCIpfSkoPz1bXmEtekEtWjAtOV9dKWApXG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi4vcGVyc2lzdGVuY2VcIlxuZXhwb3J0ICogZnJvbSBcIi4vcGVyc2lzdGVuY2VcIiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgSlNPTjUgZnJvbSBcImpzb241XCJcblxuY2xhc3MgUGVyc2lzdGVuY2Uge1xuICAgIGFzeW5jIGdldChcbiAgICAgICAgdGFibGU6IHN0cmluZyxcbiAgICAgICAga2V5OiBzdHJpbmcsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogdW5rbm93blxuICAgICk6IFByb21pc2U8dW5rbm93bj4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIltEQl1cIiwgdGFibGUsIGtleSwgXCI+R0VUPlwiKVxuICAgICAgICBjb25zdCBjb250ZW50ID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKG1ha2VLZXkodGFibGUsIGtleSkpXG4gICAgICAgIGlmIChjb250ZW50ID09PSBudWxsKSByZXR1cm4gZGVmYXVsdFZhbHVlXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09ONS5wYXJzZShjb250ZW50KVxuICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSlcbiAgICAgICAgICAgIHJldHVybiBkYXRhXG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjb250ZW50KVxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihleClcbiAgICAgICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIHNldCh0YWJsZTogc3RyaW5nLCBrZXk6IHN0cmluZywgdmFsdWU6IHVua25vd24pOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJbREJdXCIsIHRhYmxlLCBrZXksIFwiPFNFVDxcIilcbiAgICAgICAgY29uc29sZS5sb2codmFsdWUpXG4gICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShtYWtlS2V5KHRhYmxlLCBrZXkpLCBKU09ONS5zdHJpbmdpZnkodmFsdWUpKVxuICAgIH1cbn1cblxuY29uc3QgREIgPSBuZXcgUGVyc2lzdGVuY2UoKVxuXG5mdW5jdGlvbiBtYWtlS2V5KHRhYmxlOiBzdHJpbmcsIGtleTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYHdnbDI6JHt0YWJsZX1cXHQke2tleX1gXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VQZXJzaXN0ZW50U3RhdGU8VD4oXG4gICAgdGFibGU6IHN0cmluZyxcbiAgICBrZXk6IHN0cmluZyxcbiAgICBkZWZhdWx0VmFsdWU6IFQsXG4gICAgdmFsaWRhdG9yOiAodmFsdWU6IHVua25vd24pID0+IHZhbHVlIGlzIFRcbik6IFt2YWx1ZTogVCwgc2V0VmFsdWU6ICh2YWx1ZTogVCkgPT4gdm9pZF0ge1xuICAgIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gUmVhY3QudXNlU3RhdGU8VD4oZGVmYXVsdFZhbHVlKVxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIERCLmdldCh0YWJsZSwga2V5LCBkZWZhdWx0VmFsdWUpLnRoZW4odiA9PiB7XG4gICAgICAgICAgICBzZXRWYWx1ZSh2YWxpZGF0b3IodikgPyB2IDogZGVmYXVsdFZhbHVlKVxuICAgICAgICB9KVxuICAgIH0sIFtkZWZhdWx0VmFsdWVdKVxuICAgIHJldHVybiBbXG4gICAgICAgIHZhbHVlLFxuICAgICAgICAodjogVCkgPT4ge1xuICAgICAgICAgICAgc2V0VmFsdWUodilcbiAgICAgICAgICAgIHZvaWQgREIuc2V0KHRhYmxlLCBrZXksIHYpXG4gICAgICAgIH0sXG4gICAgXVxufVxuXG5leHBvcnQgZGVmYXVsdCBEQlxuIiwiZXhwb3J0IGZ1bmN0aW9uIGNhcGl0YWxpemUobmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYCR7bmFtZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKX0ke25hbWUuc3Vic3RyaW5nKDEpfWBcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBpc1VuZGVmaW5lZChkYXRhOiB1bmtub3duKTogZGF0YSBpcyB1bmRlZmluZWQge1xuICAgIHJldHVybiB0eXBlb2YgZGF0YSA9PT0gXCJ1bmRlZmluZWRcIlxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3QoZGF0YTogdW5rbm93bik6IGRhdGEgaXMgeyBba2V5OiBzdHJpbmddOiB1bmtub3duIH0ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSByZXR1cm4gZmFsc2VcbiAgICBpZiAoZGF0YSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlXG4gICAgcmV0dXJuIHR5cGVvZiBkYXRhID09PSBcIm9iamVjdFwiXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRPYmplY3QoXG4gICAgZGF0YTogdW5rbm93bixcbiAgICBuYW1lID0gXCJkYXRhXCJcbik6IGFzc2VydHMgZGF0YSBpcyB7IFtrZXk6IHN0cmluZ106IHVua25vd24gfSB7XG4gICAgaWYgKCFpc09iamVjdChkYXRhKSlcbiAgICAgICAgdGhyb3cgRXJyb3IoXG4gICAgICAgICAgICBgJHtuYW1lfSB3YXMgZXhwZWN0ZWQgdG8gYmUgYW4gb2JqZWN0IGJ1dCB3ZSBnb3QgJHt0eXBlb2YgZGF0YX0hYFxuICAgICAgICApXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1N0cmluZyhkYXRhOiB1bmtub3duKTogZGF0YSBpcyBzdHJpbmcge1xuICAgIHJldHVybiB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIlxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0U3RyaW5nKFxuICAgIGRhdGE6IHVua25vd24sXG4gICAgbmFtZSA9IFwiZGF0YVwiXG4pOiBhc3NlcnRzIGRhdGEgaXMgc3RyaW5nIHtcbiAgICBpZiAoIWlzU3RyaW5nKGRhdGEpKSB7XG4gICAgICAgIHRocm93IEVycm9yKFxuICAgICAgICAgICAgYCR7bmFtZX0gd2FzIGV4cGVjdGVkIHRvIGJlIGEgc3RyaW5nIGJ1dCB3ZSBnb3QgJHt0eXBlb2YgZGF0YX0hYFxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0U3RyaW5nT3JOdW1iZXIoXG4gICAgZGF0YTogdW5rbm93bixcbiAgICBuYW1lID0gXCJcIlxuKTogYXNzZXJ0cyBkYXRhIGlzIHN0cmluZyB8IG51bWJlciB7XG4gICAgaWYgKCFpc1N0cmluZyhkYXRhKSAmJiAhaXNOdW1iZXIoZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXG4gICAgICAgICAgICBgJHtuYW1lfSB3YXMgZXhwZWN0ZWQgdG8gYmUgYSBzdHJpbmcgb3IgYSBudW1iZXIgYnV0IHdlIGdvdCAke3R5cGVvZiBkYXRhfSFgXG4gICAgICAgIClcbiAgICB9XG59XG5cbi8qKlxuICogUmV0dXJuIGBkYXRhYCBvbmx5IGlmIGl0IGlzIGEgc3RyaW5nLCBvdGhlcndpc2UgcmV0dXJuIGBkZWZhdWx0VmFsdWVgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5zdXJlU3RyaW5nKGRhdGE6IHVua25vd24sIGRlZmF1bHRWYWx1ZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gaXNTdHJpbmcoZGF0YSkgPyBkYXRhIDogZGVmYXVsdFZhbHVlXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1N0cmluZ09ySVVuZGVmaW5lZChcbiAgICBkYXRhOiB1bmtub3duXG4pOiBkYXRhIGlzIHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiIHx8IHR5cGVvZiBkYXRhID09PSBcInVuZGVmaW5lZFwiXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRTdHJpbmdPcklVbmRlZmluZWQoXG4gICAgZGF0YTogdW5rbm93bixcbiAgICBuYW1lID0gXCJkYXRhXCJcbik6IGFzc2VydHMgZGF0YSBpcyBzdHJpbmcgfCB1bmRlZmluZWQge1xuICAgIGlmICghaXNTdHJpbmdPcklVbmRlZmluZWQoZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXG4gICAgICAgICAgICBgJHtuYW1lfSB3YXMgZXhwZWN0ZWQgdG8gYmEgYSBzdHJpbmcgb3IgdW5kZWZpbmVkIGJ1dCB3ZSBnb3QgJHt0eXBlb2YgZGF0YX0hYFxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXIoZGF0YTogdW5rbm93bik6IGRhdGEgaXMgbnVtYmVyIHtcbiAgICByZXR1cm4gdHlwZW9mIGRhdGEgPT09IFwibnVtYmVyXCJcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydE51bWJlcihcbiAgICBkYXRhOiB1bmtub3duLFxuICAgIG5hbWUgPSBcImRhdGFcIlxuKTogYXNzZXJ0cyBkYXRhIGlzIG51bWJlciB7XG4gICAgaWYgKCFpc051bWJlcihkYXRhKSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcbiAgICAgICAgICAgIGAke25hbWV9IHdhcyBleHBlY3RlZCB0byBiZSBhIG51bWJlciBidXQgd2UgZ290ICR7dHlwZW9mIGRhdGF9IWBcbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydE51bWJlck9yVW5kZWZpbmVkKFxuICAgIGRhdGE6IHVua25vd24sXG4gICAgbmFtZSA9IFwiZGF0YVwiXG4pOiBhc3NlcnRzIGRhdGEgaXMgbnVtYmVyfHVuZGVmaW5lZCB7XG4gICAgaWYgKCFpc051bWJlcihkYXRhKSAmJiAhaXNVbmRlZmluZWQoZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXG4gICAgICAgICAgICBgJHtuYW1lfSB3YXMgZXhwZWN0ZWQgdG8gYmUgYSBudW1iZXIgYnV0IHdlIGdvdCAke3R5cGVvZiBkYXRhfSFgXG4gICAgICAgIClcbiAgICB9XG59XG5cbi8qKlxuICogUmV0dXJuIGBkYXRhYCBvbmx5IGlmIGl0IGlzIGEgbnVtYmVyLCBvdGhlcndpc2UgcmV0dXJuIGBkZWZhdWx0VmFsdWVgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5zdXJlTnVtYmVyKGRhdGE6IHVua25vd24sIGRlZmF1bHRWYWx1ZTogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gaXNOdW1iZXIoZGF0YSkgPyBkYXRhIDogZGVmYXVsdFZhbHVlXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0Jvb2xlYW4oZGF0YTogdW5rbm93bik6IGRhdGEgaXMgYm9vbGVhbiB7XG4gICAgcmV0dXJuIHR5cGVvZiBkYXRhID09PSBcImJvb2xlYW5cIlxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0Qm9vbGVhbihcbiAgICBkYXRhOiB1bmtub3duLFxuICAgIG5hbWUgPSBcImRhdGFcIlxuKTogYXNzZXJ0cyBkYXRhIGlzIGJvb2xlYW4ge1xuICAgIGlmICghaXNCb29sZWFuKGRhdGEpKSB7XG4gICAgICAgIHRocm93IEVycm9yKFxuICAgICAgICAgICAgYCR7bmFtZX0gd2FzIGV4cGVjdGVkIHRvIGJlIGEgYm9vbGVhbiBidXQgd2UgZ290ICR7dHlwZW9mIGRhdGF9IWBcbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIoZGF0YTogdW5rbm93bik6IGRhdGEgaXMgQXJyYXlCdWZmZXIge1xuICAgIGlmICghZGF0YSkgcmV0dXJuIGZhbHNlXG4gICAgcmV0dXJuIGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlclxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNTdHJpbmdBcnJheShkYXRhOiB1bmtub3duKTogZGF0YSBpcyBzdHJpbmdbXSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGRhdGEpKSByZXR1cm4gZmFsc2VcbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZGF0YSkge1xuICAgICAgICBpZiAoIWlzU3RyaW5nKGl0ZW0pKSByZXR1cm4gZmFsc2VcbiAgICB9XG4gICAgcmV0dXJuIHRydWVcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTnVtYmVyQXJyYXkoZGF0YTogdW5rbm93bik6IGRhdGEgaXMgbnVtYmVyW10ge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShkYXRhKSkgcmV0dXJuIGZhbHNlXG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGRhdGEpIHtcbiAgICAgICAgaWYgKCFpc051bWJlcihpdGVtKSkgcmV0dXJuIGZhbHNlXG4gICAgfVxuICAgIHJldHVybiB0cnVlXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRTdHJpbmdBcnJheShcbiAgICBkYXRhOiB1bmtub3duLFxuICAgIG5hbWUgPSBcImRhdGFcIlxuKTogYXNzZXJ0cyBkYXRhIGlzIHN0cmluZ1tdIHtcbiAgICBpZiAoIWlzU3RyaW5nQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXG4gICAgICAgICAgICBgJHtuYW1lfSB3YXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXkgb2Ygc3RyaW5ncyBidXQgd2UgZ290ICR7dHlwZW9mIGRhdGF9IWBcbiAgICAgICAgKVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydE51bWJlckFycmF5KFxuICAgIGRhdGE6IHVua25vd24sXG4gICAgbmFtZSA9IFwiZGF0YVwiXG4pOiBhc3NlcnRzIGRhdGEgaXMgbnVtYmVyW10ge1xuICAgIGFzc2VydEFycmF5KGRhdGEsIG5hbWUpXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZGF0YVtpXVxuICAgICAgICBhc3NlcnROdW1iZXIodmFsdWUsIGAke25hbWV9WyR7aX1dYClcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVOdW1iZXJBcnJheShcbiAgICBkYXRhOiB1bmtub3duLFxuICAgIGRlZmF1bHRWYWx1ZTogbnVtYmVyW10gPSBbXVxuKTogbnVtYmVyW10ge1xuICAgIHJldHVybiBpc051bWJlckFycmF5KGRhdGEpID8gZGF0YSA6IGRlZmF1bHRWYWx1ZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheShkYXRhOiB1bmtub3duKTogZGF0YSBpcyB1bmtub3duW10ge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGRhdGEpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVBcnJheTxUPihkYXRhOiB1bmtub3duLCBkZWZhdWx0VmFsdWU6IFRbXSA9IFtdKTogVFtdIHtcbiAgICByZXR1cm4gaXNBcnJheShkYXRhKSA/IChkYXRhIGFzIFRbXSkgOiBkZWZhdWx0VmFsdWVcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEFycmF5KFxuICAgIGRhdGE6IHVua25vd24sXG4gICAgbmFtZSA9IFwiZGF0YVwiXG4pOiBhc3NlcnRzIGRhdGEgaXMgdW5rbm93bltdIHtcbiAgICBpZiAoIWlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXG4gICAgICAgICAgICBgJHtuYW1lfSB3YXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXkgYnV0IHdlIGdvdCAke3R5cGVvZiBkYXRhfSFgXG4gICAgICAgIClcbiAgICB9XG59XG5cbmNvbnN0IFJYX0VNQUlMID0gL15bXkAgXFx0XFxuXFxyXStAKD86W0EtWjAtOS1dK1xcLikrW0EtWl17Miw2fSQvZ2lcblxuZXhwb3J0IGZ1bmN0aW9uIGlzRU1haWwoZW1haWw6IHVua25vd24pOiBlbWFpbCBpcyBzdHJpbmcge1xuICAgIGlmICghaXNTdHJpbmcoZW1haWwpKSByZXR1cm4gZmFsc2VcbiAgICBpZiAoZW1haWwgPT09IFwiYWRtaW5cIiB8fCBlbWFpbCA9PT0gXCJ0ZXN0XCIpIHJldHVybiB0cnVlXG5cbiAgICBSWF9FTUFJTC5sYXN0SW5kZXggPSAtMVxuICAgIHJldHVybiBSWF9FTUFJTC50ZXN0KGVtYWlsKVxufVxuIiwiY29uc3QgTFVNSU5BTkNFX1RIUkVTSE9MRCA9IDAuNjJcblxuY29uc3QgRVBTSUxPTiA9IDAuMDAwMDAxXG5jb25zdCBNQVhfQllURV9WQUxVRSA9IDI1NVxuY29uc3QgVkFMXzEgPSAxXG5jb25zdCBWQUxfMiA9IDJcbmNvbnN0IFZBTF8zID0gM1xuY29uc3QgVkFMXzQgPSA0XG5jb25zdCBWQUxfNSA9IDVcbmNvbnN0IFZBTF82ID0gNlxuY29uc3QgVkFMXzcgPSA3XG5jb25zdCBWQUxfMTUgPSAxNVxuY29uc3QgVkFMXzk5ID0gOTlcbmNvbnN0IFZBTF8zNTkgPSAzNTlcbmNvbnN0IElOVl82ID0gMSAvIFZBTF82XG5jb25zdCBJTlZfMTUgPSAxIC8gVkFMXzE1XG5jb25zdCBJTlZfOTkgPSAxIC8gVkFMXzk5XG5jb25zdCBJTlZfMjU1ID0gMSAvIE1BWF9CWVRFX1ZBTFVFXG5jb25zdCBJTlZfMzU5ID0gMSAvIFZBTF8zNTlcbmNvbnN0IEhBTEYgPSAwLjVcblxudHlwZSBDb2xvck9yU3RyaW5nID0gQ29sb3IgfCBzdHJpbmdcblxuLyoqXG4gKiBGYXN0IGNvbG9yIG1hbmlwdWxhdGlvbnMuXG4gKiBBdHRyaWJ1dGVzIFIgIChyZWQpLCBHICAoZ3JlZW4pLCBCICAoYmx1ZSksIEEgIChhbHBoYSksIEggIChodWUpLCBTXG4gKiAoc2F0dXJhdGlvbiksIGFuZCBMIChsdW1pbmFuY2UpIGFyZSBhbGwgZmxvYXRzIGJldHdlZW4gMCBhbmQgMS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29sb3Ige1xuICAgIHB1YmxpYyBzdGF0aWMgZnJvbUNvbG9yT3JTdHJpbmcoY29sb3JPclN0cmluZz86IENvbG9yT3JTdHJpbmcpOiBDb2xvciB7XG4gICAgICAgIGlmICghY29sb3JPclN0cmluZykgcmV0dXJuIENvbG9yLm5ld0JsYWNrKClcbiAgICAgICAgaWYgKGNvbG9yT3JTdHJpbmcgaW5zdGFuY2VvZiBDb2xvcikgcmV0dXJuIGNvbG9yT3JTdHJpbmdcbiAgICAgICAgcmV0dXJuIG5ldyBDb2xvcihjb2xvck9yU3RyaW5nKVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZnJvbUFycmF5UkdCKHJnYjogW251bWJlciwgbnVtYmVyLCBudW1iZXJdKTogQ29sb3Ige1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkocmdiKSkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkludmFsaWQgcGFyYW0gcmdiOiBcIiwgcmdiKVxuICAgICAgICAgICAgcmV0dXJuIENvbG9yLmZyb21SR0IoMCwgMCwgMClcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBNSU5fTEVOID0gM1xuICAgICAgICB3aGlsZSAocmdiLmxlbmd0aCA8IE1JTl9MRU4pIHJnYi5wdXNoKDApXG4gICAgICAgIGNvbnN0IFtSLCBHLCBCXSA9IHJnYlxuXG4gICAgICAgIHJldHVybiBDb2xvci5mcm9tUkdCKFIsIEcsIEIpXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBmcm9tQXJyYXlSR0JBKHJnYmE6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdKTogQ29sb3Ige1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkocmdiYSkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJJbnZhbGlkIHBhcmFtIHJnYmE6IFwiLCByZ2JhKVxuICAgICAgICAgICAgcmV0dXJuIENvbG9yLmZyb21SR0IoMCwgMCwgMClcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBNSU5fTEVOID0gNFxuICAgICAgICB3aGlsZSAocmdiYS5sZW5ndGggPCBNSU5fTEVOKSByZ2JhLnB1c2goMSlcbiAgICAgICAgY29uc3QgW1IsIEcsIEIsIEFdID0gcmdiYVxuXG4gICAgICAgIHJldHVybiBDb2xvci5mcm9tUkdCQShSLCBHLCBCLCBBKVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZnJvbUhTTChodWU6IG51bWJlciwgc2F0dXJhdGlvbjogbnVtYmVyLCBsdW1pbmFuY2U6IG51bWJlcik6IENvbG9yIHtcbiAgICAgICAgY29uc3QgY29sb3IgPSBuZXcgQ29sb3IoKVxuICAgICAgICBjb2xvci5IID0gaHVlXG4gICAgICAgIGNvbG9yLlMgPSBzYXR1cmF0aW9uXG4gICAgICAgIGNvbG9yLkwgPSBsdW1pbmFuY2VcbiAgICAgICAgY29sb3IuaHNsMnJnYigpXG4gICAgICAgIHJldHVybiBjb2xvclxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZnJvbUhTTEEoaHVlOiBudW1iZXIsIHNhdHVyYXRpb246IG51bWJlciwgbHVtaW5hbmNlOiBudW1iZXIsIGFscGhhOiBudW1iZXIpOiBDb2xvciB7XG4gICAgICAgIGNvbnN0IGNvbG9yID0gbmV3IENvbG9yKClcbiAgICAgICAgY29sb3IuSCA9IGh1ZVxuICAgICAgICBjb2xvci5TID0gc2F0dXJhdGlvblxuICAgICAgICBjb2xvci5MID0gbHVtaW5hbmNlXG4gICAgICAgIGNvbG9yLmhzbDJyZ2IoKVxuICAgICAgICBjb2xvci5BID0gYWxwaGFcbiAgICAgICAgcmV0dXJuIGNvbG9yXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2sgaWYgYSBDU1Mgc3RsZSBzdHJpbmcgaXMgYW4gYWN0dWFsIGNvbG9yLlxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgaXNWYWxpZChjb2RlQ1NTOiBhbnkpOiBjb2RlQ1NTIGlzIHN0cmluZyB7XG4gICAgICAgIGlmICh0eXBlb2YgY29kZUNTUyAhPT0gXCJzdHJpbmdcIikgcmV0dXJuIGZhbHNlXG4gICAgICAgIGlmIChjb2RlQ1NTLmNoYXJBdCgwKSAhPT0gXCIjXCIpIHJldHVybiBmYWxzZVxuICAgICAgICBzd2l0Y2ggKGNvZGVDU1MubGVuZ3RoKSB7XG4gICAgICAgICAgICBjYXNlICcjUkdCJy5sZW5ndGg6XG4gICAgICAgICAgICBjYXNlICcjUkdCQScubGVuZ3RoOlxuICAgICAgICAgICAgY2FzZSAnI1JSR0dCQicubGVuZ3RoOlxuICAgICAgICAgICAgY2FzZSAnI1JSR0dCQkFBJy5sZW5ndGg6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAc2VlIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMDgvUkVDLVdDQUcyMC0yMDA4MTIxMS8jY29udHJhc3QtcmF0aW9kZWZcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNvbnRyYXN0KGJhY2tncm91bmQ6IENvbG9yT3JTdHJpbmcgfCB1bmRlZmluZWQsIGZvcmVncm91bmQ6IENvbG9yT3JTdHJpbmcgfCB1bmRlZmluZWQpOiBudW1iZXIge1xuICAgICAgICBjb25zdCBiYWNrQ29sb3IgPSBDb2xvci5mcm9tQ29sb3JPclN0cmluZyhiYWNrZ3JvdW5kKVxuICAgICAgICBjb25zdCBjb2xvcjIgPSBDb2xvci5mcm9tQ29sb3JPclN0cmluZyhmb3JlZ3JvdW5kKVxuICAgICAgICBjb25zdCBmb3JlQ29sb3IgPSBDb2xvci5taXgoXG4gICAgICAgICAgICBiYWNrQ29sb3IsXG4gICAgICAgICAgICBjb2xvcjIsXG4gICAgICAgICAgICBjb2xvcjIuQVxuICAgICAgICApXG4gICAgICAgIGNvbnN0IGx1bTEgPSBiYWNrQ29sb3IubHVtaW5hbmNlKClcbiAgICAgICAgY29uc3QgbHVtMiA9IGZvcmVDb2xvci5sdW1pbmFuY2UoKVxuICAgICAgICBjb25zdCBDT05UUkFTVF9FUFNJTE9OID0gMC4wNVxuICAgICAgICBpZiAobHVtMSA+IGx1bTIpIHtcbiAgICAgICAgICAgIHJldHVybiAobHVtMSArIENPTlRSQVNUX0VQU0lMT04pIC8gKGx1bTIgKyBDT05UUkFTVF9FUFNJTE9OKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAobHVtMiArIENPTlRSQVNUX0VQU0lMT04pIC8gKGx1bTEgKyBDT05UUkFTVF9FUFNJTE9OKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgY29sb3Igd2l0aCBiZXR0ZXIgY29udHJhc3Qgb24gYSBnaXZlbiBzdXJmYWNlLlxuICAgICAqIFxuICAgICAqIEBwYXJhbSBiYWNrQ29sb3IgQ29sb3Igb2YgdGhlIGJhY2tncm91bmQgc3VyZmFjZS5cbiAgICAgKiBAcGFyYW0gZm9yZUNvbG9ycyBQb3NzaWJsZSBjb2xvcnMgZm9yIGEgdGV4dCBvbiB0aGlzIHN1cmZhY2UuXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBiZXN0Q29udHJhc3Q8VCBleHRlbmRzIChDb2xvciB8IHN0cmluZyk+KFxuICAgICAgICBiYWNrQ29sb3I6IENvbG9yT3JTdHJpbmcsXG4gICAgICAgIC4uLmZvcmVDb2xvcnM6IFRbXVxuICAgICk6IFQge1xuICAgICAgICBjb25zdCByZWFsQmFja0NvbG9yID0gQ29sb3IuZnJvbUNvbG9yT3JTdHJpbmcoYmFja0NvbG9yKVxuICAgICAgICBsZXQgYmVzdENvbnRyYXN0ID0gMFxuICAgICAgICBsZXQgYmVzdEZvcmVDb2xvckluZGV4ID0gLTFcbiAgICAgICAgbGV0IGluZGV4ID0gMFxuICAgICAgICBmb3IgKGNvbnN0IGZvcmVDb2xvciBvZiBmb3JlQ29sb3JzKSB7XG4gICAgICAgICAgICBjb25zdCBjb250cmFzdCA9IENvbG9yLmNvbnRyYXN0KHJlYWxCYWNrQ29sb3IsIGZvcmVDb2xvcilcbiAgICAgICAgICAgIGlmIChjb250cmFzdCA+IGJlc3RDb250cmFzdCkge1xuICAgICAgICAgICAgICAgIGJlc3RDb250cmFzdCA9IGNvbnRyYXN0XG4gICAgICAgICAgICAgICAgYmVzdEZvcmVDb2xvckluZGV4ID0gaW5kZXhcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGluZGV4KytcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmb3JlQ29sb3JzW2Jlc3RGb3JlQ29sb3JJbmRleF1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZXR1cm4gbHVtaW5hbmNlIGJldHdlZW4gMCAoZGFya2VzdCkgYW5kIDEgKGJyaWdodGVzdCkuXG4gICAgICogSWYgdGhlIGNvbG9yIGlzIGludmFsaWQsIHJldHVybiAtMS5cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGx1bWluYW5jZShjb2xvck9yU3RyaW5nOiBDb2xvck9yU3RyaW5nIHwgdW5kZWZpbmVkKTogbnVtYmVyIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjb2xvck9yU3RyaW5nID09PSAndW5kZWZpbmVkJykgcmV0dXJuIDBcbiAgICAgICAgcmV0dXJuIENvbG9yLmZyb21Db2xvck9yU3RyaW5nKGNvbG9yT3JTdHJpbmcpLmx1bWluYW5jZSgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyAxIGZvciBicmlnaHQgY29sb3JzIGFuZCAwIGZvciBkYXJrIGNvbG9ycy5cbiAgICAgKiBJZiB0aGUgY29sb3IgaXMgaW52YWxpZCwgcmV0dXJuIC0xLlxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgbHVtaW5hbmNlU3RlcChjb2xvck9yU3RyaW5nOiBDb2xvck9yU3RyaW5nKTogLTEgfCAwIHwgMSB7XG4gICAgICAgIGlmICghQ29sb3IuaXNWYWxpZChjb2xvck9yU3RyaW5nKSkgcmV0dXJuIC0xXG4gICAgICAgIGNvbnN0IGx1bSA9IENvbG9yLmx1bWluYW5jZShjb2xvck9yU3RyaW5nKVxuICAgICAgICBjb25zdCBDT05UUkFTVF9FUFNJTE9OID0gMC4wNVxuICAgICAgICBjb25zdCBibGFja0NvbnRyYXN0ID0gKGx1bSArIENPTlRSQVNUX0VQU0lMT04pIC8gQ09OVFJBU1RfRVBTSUxPTlxuICAgICAgICBjb25zdCB3aGl0ZUNvbnRyYXN0ID0gKENPTlRSQVNUX0VQU0lMT04gKyAxKSAvIChsdW0gKyBDT05UUkFTVF9FUFNJTE9OKVxuICAgICAgICByZXR1cm4gYmxhY2tDb250cmFzdCA+IHdoaXRlQ29udHJhc3QgPyAxIDogMFxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgaXNEYXJrQ29sb3IoY29sb3JPclN0cmluZzogQ29sb3JPclN0cmluZykge1xuICAgICAgICByZXR1cm4gQ29sb3IubHVtaW5hbmNlU3RlcChjb2xvck9yU3RyaW5nKSA9PT0gMFxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgaXNMaWdodENvbG9yKGNvbG9yT3JTdHJpbmc6IENvbG9yT3JTdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIENvbG9yLmx1bWluYW5jZVN0ZXAoY29sb3JPclN0cmluZykgPT09IDFcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIG1ha2VEYXJrZXIoY29sb3JPclN0cmluZzogQ29sb3JPclN0cmluZywgbHVtaW5hbmNlUGVyY2VudGFnZTogbnVtYmVyID0gMC41KTogQ29sb3Ige1xuICAgICAgICBpZiAobHVtaW5hbmNlUGVyY2VudGFnZSA8PSAwKSByZXR1cm4gbmV3IENvbG9yKFwiIzAwMFwiKVxuICAgICAgICBjb25zdCBjb2xvciA9IENvbG9yLmZyb21Db2xvck9yU3RyaW5nKGNvbG9yT3JTdHJpbmcpXG4gICAgICAgIGlmIChsdW1pbmFuY2VQZXJjZW50YWdlID49IDEpIHJldHVybiBjb2xvclxuICAgICAgICByZXR1cm4gQ29sb3IuZnJvbUhTTEEoXG4gICAgICAgICAgICBjb2xvci5ILFxuICAgICAgICAgICAgY29sb3IuUyxcbiAgICAgICAgICAgIGNvbG9yLkwsXG4gICAgICAgICAgICBjb2xvci5BICogbHVtaW5hbmNlUGVyY2VudGFnZVxuICAgICAgICApXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBtYWtlSHVlUm90YXRlZChjb2xvck9yU3RyaW5nOiBDb2xvck9yU3RyaW5nLCByb3RhdGlvbjogbnVtYmVyID0gMC41KTogQ29sb3Ige1xuICAgICAgICBjb25zdCBjb2xvciA9IENvbG9yLmZyb21Db2xvck9yU3RyaW5nKGNvbG9yT3JTdHJpbmcpXG4gICAgICAgIGNvbG9yLnJnYjJoc2woKVxuICAgICAgICAvLyBUaGUgYGZsb29yYCBpcyB1c2VkIHRvIGRlYWwgd2l0aCBuZWdhdGl2ZSBudW1iZXJzLlxuICAgICAgICBjb2xvci5IICs9IHJvdGF0aW9uIC0gTWF0aC5mbG9vcihyb3RhdGlvbilcbiAgICAgICAgaWYgKGNvbG9yLkggPiAxKSBjb2xvci5ILS1cbiAgICAgICAgY29sb3IuaHNsMnJnYigpXG4gICAgICAgIHJldHVybiBjb2xvclxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgbWFrZVRyYW5zcGFyZW50KGNvbG9yT3JTdHJpbmc6IENvbG9yT3JTdHJpbmcsIGFscGhhOiBudW1iZXIpIHtcbiAgICAgICAgY29uc3QgY29sb3IgPSBDb2xvci5mcm9tQ29sb3JPclN0cmluZyhjb2xvck9yU3RyaW5nKVxuICAgICAgICBjb2xvci5BID0gY2xhbXAwMShhbHBoYSlcbiAgICAgICAgcmV0dXJuIGNvbG9yXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTWl4IHR3byBjb2xvcnMuIGFscGhhIHNob3VsZCBiZSBiZXR3ZWVuIDAgYW5kIDEsXG4gICAgICogYnV0IHRoZXJlIGlzIG5vIGNoZWNrIG9uIHRoaXMuXG4gICAgICogSWYgYWxwaGEgaXMgMCwgdGhlIHJlc3VsdGluZyBjb2xvciBpcyBgY29sb3IxYCxcbiAgICAgKiBpZiBhbHBoYSBpcyAxLCB0aGUgcmVzdWx0aW5nIGNvbG9yIGlzIGBjb2xvcjJgLlxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgbWl4KGNvbG9yT3JTdHJpbmcxOiBDb2xvck9yU3RyaW5nLCBjb2xvck9yU3RyaW5nMjogQ29sb3JPclN0cmluZywgYWxwaGE6IG51bWJlciA9IDAuNSk6IENvbG9yIHtcbiAgICAgICAgY29uc3QgY29sb3IxID0gQ29sb3IuZnJvbUNvbG9yT3JTdHJpbmcoY29sb3JPclN0cmluZzEpXG4gICAgICAgIGNvbnN0IGNvbG9yMiA9IENvbG9yLmZyb21Db2xvck9yU3RyaW5nKGNvbG9yT3JTdHJpbmcyKVxuICAgICAgICBjb25zdCBiZXRhID0gMSAtIGFscGhhXG5cbiAgICAgICAgcmV0dXJuIENvbG9yLmZyb21SR0JBKFxuICAgICAgICAgICAgYWxwaGEgKiBjb2xvcjIuUiArIGJldGEgKiBjb2xvcjEuUixcbiAgICAgICAgICAgIGFscGhhICogY29sb3IyLkcgKyBiZXRhICogY29sb3IxLkcsXG4gICAgICAgICAgICBhbHBoYSAqIGNvbG9yMi5CICsgYmV0YSAqIGNvbG9yMS5CLFxuICAgICAgICAgICAgYWxwaGEgKiBjb2xvcjIuQSArIGJldGEgKiBjb2xvcjEuQSxcbiAgICAgICAgKVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgbmV3QmxhY2soKSB7XG4gICAgICAgIHJldHVybiBDb2xvci5mcm9tUkdCKDAsIDAsIDApXG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBuZXdXaGl0ZSgpIHtcbiAgICAgICAgcmV0dXJuIENvbG9yLmZyb21SR0IoMSwgMSwgMSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgQ29sb3IgaW5zdGFuY2UgYmFzZSBvbiBSLEcsQiBjaGFubmVscy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSAgIHJlZCAtIFZhbHVlIGJldHdlZW4gMCBhbmQgMS5cbiAgICAgKiBAcGFyYW0gICBncmVlbiAtIFZhbHVlIGJldHdlZW4gMCBhbmQgMS5cbiAgICAgKiBAcGFyYW0gICBibHVlIC0gVmFsdWUgYmV0d2VlbiAwIGFuZCAxLlxuICAgICAqIEByZXR1cm5zIE5ldyBpbnN0YW5jZSBvZiBDb2xvci5cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGZyb21SR0IocmVkOiBudW1iZXIsIGdyZWVuOiBudW1iZXIsIGJsdWU6IG51bWJlcikge1xuICAgICAgICBjb25zdCBjb2xvciA9IG5ldyBDb2xvcigpXG4gICAgICAgIGNvbG9yLlIgPSByZWRcbiAgICAgICAgY29sb3IuRyA9IGdyZWVuXG4gICAgICAgIGNvbG9yLkIgPSBibHVlXG4gICAgICAgIGNvbG9yLkEgPSAxXG5cbiAgICAgICAgcmV0dXJuIGNvbG9yXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IENvbG9yIGluc3RhbmNlIGJhc2Ugb24gUixHLEIsQSBjaGFubmVscy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSAgIHJlZCAtIFZhbHVlIGJldHdlZW4gMCBhbmQgMS5cbiAgICAgKiBAcGFyYW0gICBncmVlbiAtIFZhbHVlIGJldHdlZW4gMCBhbmQgMS5cbiAgICAgKiBAcGFyYW0gICBibHVlIC0gVmFsdWUgYmV0d2VlbiAwIGFuZCAxLlxuICAgICAqIEBwYXJhbSAgIGFscGhhIC0gVmFsdWUgYmV0d2VlbiAwIGFuZCAxLlxuICAgICAqIEByZXR1cm5zIE5ldyBpbnN0YW5jZSBvZiBDb2xvci5cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGZyb21SR0JBKHJlZDogbnVtYmVyLCBncmVlbjogbnVtYmVyLCBibHVlOiBudW1iZXIsIGFscGhhOiBudW1iZXIpIHtcbiAgICAgICAgY29uc3QgY29sb3IgPSBuZXcgQ29sb3IoKVxuICAgICAgICBjb2xvci5SID0gcmVkXG4gICAgICAgIGNvbG9yLkcgPSBncmVlblxuICAgICAgICBjb2xvci5CID0gYmx1ZVxuICAgICAgICBjb2xvci5BID0gYWxwaGFcblxuICAgICAgICByZXR1cm4gY29sb3JcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIG5vcm1hbGl6ZShjb2RlQ1NTOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgY29sb3IgPSBuZXcgQ29sb3IoY29kZUNTUylcblxuICAgICAgICByZXR1cm4gY29sb3Iuc3RyaW5naWZ5KClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gYXJyYXkgb2YgY29sb3JzIGJ5IGludGVycG9sYXRpbmcgb24gb3RoZXIgY29sb3JzLlxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgaW50ZXJwb2xhdGUoY29sb3JzOiBBcnJheTxDb2xvciB8IHN0cmluZz4sIGFycmF5TGVuZ3RoOiBudW1iZXIpOiBDb2xvcltdIHtcbiAgICAgICAgaWYgKGFycmF5TGVuZ3RoIDwgMSkgcmV0dXJuIFtdXG4gICAgICAgIGNvbnN0IGlucHV0ID0gY29sb3JzLm1hcChjID0+IHR5cGVvZiBjID09PSAnc3RyaW5nJyA/IG5ldyBDb2xvcihjKSA6IGMpXG4gICAgICAgIGNvbnN0IHJlc3VsdDogQ29sb3JbXSA9IFtdXG5cbiAgICAgICAgZm9yIChsZXQgc3RlcCA9IDE7IHN0ZXAgPD0gYXJyYXlMZW5ndGg7IHN0ZXArKykge1xuICAgICAgICAgICAgY29uc3QgYWxwaGEgPSBzdGVwIC8gKGFycmF5TGVuZ3RoICsgMSlcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKENvbG9yLnJhbXAoaW5wdXQsIGFscGhhKSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSWYgYGNvbG9yc2AgaGFzIG9ubHkgdHdvIGVsZW1lbnRzLCB0aGlzIG1ldGhvZCBpcyB0aGUgc2FtZSBhcyBgbWl4KClgLlxuICAgICAqIE90aGVyd2lzZSwgaXQgd2lsbCBwZXJmb3JtIGEgbGluZWFyIGJsZW5kaW5nIHRocm91Z2ggdGhlIGNvbG9ycy5cbiAgICAgKiBJZiBhbHBoYSBpcyAwLCB0aGUgcmVzdWx0aW5nIGNvbG9yIGlzIGBjb2xvcnNbMF1gLFxuICAgICAqIElmIGFscGhhIGlzIDEsIHRoZSByZXN1bHRpbmcgY29sb3IgaXMgYGNvbG9yc1tjb2xvcnMubGVuZ3RoIC0gMV1gLFxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgcmFtcChjb2xvcnM6IENvbG9yW10sIGFscGhhOiBudW1iZXIgPSAwLjUpOiBDb2xvciB7XG4gICAgICAgIGlmIChjb2xvcnMubGVuZ3RoID09PSAwKSByZXR1cm4gQ29sb3IubmV3QmxhY2soKVxuICAgICAgICBpZiAoY29sb3JzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIGNvbG9yc1swXVxuXG4gICAgICAgIC8vIE51bWJlciBvZiBzcGFjZXMgYmV0d2VlbiBjb2xvcnMuXG4gICAgICAgIGNvbnN0IHNwYWNlc0NvdW50ID0gY29sb3JzLmxlbmd0aCAtIDFcbiAgICAgICAgY29uc3QgZmlyc3RDb2xvckluZGV4ID0gTWF0aC5mbG9vcihhbHBoYSAqIHNwYWNlc0NvdW50KVxuICAgICAgICBjb25zdCBjb2xvcjEgPSBjb2xvcnNbZmlyc3RDb2xvckluZGV4XVxuICAgICAgICBpZiAoZmlyc3RDb2xvckluZGV4ID09PSBzcGFjZXNDb3VudCkgcmV0dXJuIGNvbG9yMVxuICAgICAgICBjb25zdCBjb2xvcjIgPSBjb2xvcnNbZmlyc3RDb2xvckluZGV4ICsgMV1cbiAgICAgICAgY29uc3QgdHJhbnNsYXRlZEFscGhhID0gYWxwaGEgKiBzcGFjZXNDb3VudCAtIGZpcnN0Q29sb3JJbmRleFxuXG4gICAgICAgIHJldHVybiBDb2xvci5taXgoY29sb3IxLCBjb2xvcjIsIHRyYW5zbGF0ZWRBbHBoYSlcbiAgICB9XG5cbiAgICBwdWJsaWMgQTogbnVtYmVyXG4gICAgcHVibGljIEI6IG51bWJlclxuICAgIHB1YmxpYyBHOiBudW1iZXJcbiAgICBwdWJsaWMgSDogbnVtYmVyXG4gICAgcHVibGljIEw6IG51bWJlclxuICAgIHB1YmxpYyBSOiBudW1iZXJcbiAgICBwdWJsaWMgUzogbnVtYmVyXG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoY29kZUNTUzogc3RyaW5nID0gXCIjMDAwMDAwXCIpIHtcbiAgICAgICAgdGhpcy5SID0gMFxuICAgICAgICB0aGlzLkcgPSAwXG4gICAgICAgIHRoaXMuQiA9IDBcbiAgICAgICAgdGhpcy5IID0gMFxuICAgICAgICB0aGlzLlMgPSAwXG4gICAgICAgIHRoaXMuTCA9IDBcbiAgICAgICAgdGhpcy5BID0gMVxuXG4gICAgICAgIGlmIChDb2xvci5pc1ZhbGlkKGNvZGVDU1MpKSB7XG4gICAgICAgICAgICB0aGlzLnBhcnNlKGNvZGVDU1MpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgY29weSgpIHtcbiAgICAgICAgY29uc3QgbmV3Q29sb3IgPSBuZXcgQ29sb3IoKVxuICAgICAgICBuZXdDb2xvci5SID0gdGhpcy5SXG4gICAgICAgIG5ld0NvbG9yLkcgPSB0aGlzLkdcbiAgICAgICAgbmV3Q29sb3IuQiA9IHRoaXMuQlxuICAgICAgICBuZXdDb2xvci5BID0gdGhpcy5BXG4gICAgICAgIG5ld0NvbG9yLkggPSB0aGlzLkhcbiAgICAgICAgbmV3Q29sb3IuUyA9IHRoaXMuU1xuICAgICAgICBuZXdDb2xvci5MID0gdGhpcy5MXG5cbiAgICAgICAgcmV0dXJuIG5ld0NvbG9yXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHNlZSBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9IU0xfYW5kX0hTViNDb252ZXJ0aW5nX3RvX1JHQlxuICAgICAqL1xuICAgIHB1YmxpYyBoc2wycmdiKCkge1xuICAgICAgICBjb25zdCBIID0gVkFMXzYgKiB0aGlzLkhcbiAgICAgICAgY29uc3QgUyA9IHRoaXMuU1xuICAgICAgICBjb25zdCBMID0gdGhpcy5MXG4gICAgICAgIGNvbnN0IGNocm9tYSA9ICgxIC0gTWF0aC5hYnMoTCArIEwgLSAxKSkgKiBTXG4gICAgICAgIGNvbnN0IHggPSBjaHJvbWEgKiAoMSAtIE1hdGguYWJzKEggJSBWQUxfMiAtIDEpKVxuXG4gICAgICAgIGxldCBSID0gMFxuICAgICAgICBsZXQgRyA9IDBcbiAgICAgICAgbGV0IEIgPSAwXG5cbiAgICAgICAgaWYgKEggPCBWQUxfMykge1xuICAgICAgICAgICAgaWYgKEggPCBWQUxfMSkge1xuICAgICAgICAgICAgICAgIFIgPSBjaHJvbWE7IEcgPSB4OyBCID0gMFxuICAgICAgICAgICAgfSBlbHNlIGlmIChIIDwgVkFMXzIpIHtcbiAgICAgICAgICAgICAgICBSID0geDsgRyA9IGNocm9tYTsgQiA9IDBcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gSCA9PSAyLlxuICAgICAgICAgICAgICAgIFIgPSAwOyBHID0gY2hyb21hOyBCID0geFxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKEggPCBWQUxfNCkge1xuICAgICAgICAgICAgUiA9IDA7IEcgPSB4OyBCID0gY2hyb21hXG4gICAgICAgIH0gZWxzZSBpZiAoSCA8IFZBTF81KSB7XG4gICAgICAgICAgICBSID0geDsgRyA9IDA7IEIgPSBjaHJvbWFcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIFIgPSBjaHJvbWE7IEcgPSAwOyBCID0geFxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc2hpZnQgPSBMIC0gY2hyb21hICogSEFMRlxuICAgICAgICB0aGlzLlIgPSBSICsgc2hpZnRcbiAgICAgICAgdGhpcy5HID0gRyArIHNoaWZ0XG4gICAgICAgIHRoaXMuQiA9IEIgKyBzaGlmdFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvbXB1dGUgdGhlIGx1bWluYW5jZSBvZiB0aGUgY29sb3IuXG4gICAgICogQHNlZSBodHRwczovL3d3dy53My5vcmcvVFIvMjAwOC9SRUMtV0NBRzIwLTIwMDgxMjExLyNyZWxhdGl2ZWx1bWluYW5jZWRlZlxuICAgICAqL1xuICAgIHB1YmxpYyBsdW1pbmFuY2UoKTogbnVtYmVyIHtcbiAgICAgICAgY29uc3QgeyBSLCBHLCBCIH0gPSB0aGlzXG4gICAgICAgIGNvbnN0IFRIUkVTSE9MRCA9IDAuMDM5MjhcbiAgICAgICAgY29uc3QgQUxQSEEgPSAwLjA3NzM5OTM4MDgwNDk1MzU3IC8vID0gMS8xMi45MlxuICAgICAgICBjb25zdCBTSElGVCA9IDAuMDU1XG4gICAgICAgIGNvbnN0IEJFVEEgPSAwLjk0Nzg2NzI5ODU3ODE5OTEgLy8gPSAxLzEuMDU1XG4gICAgICAgIGNvbnN0IEdBTU1BID0gMi40XG4gICAgICAgIGNvbnN0IHZSID0gUiA8IFRIUkVTSE9MRCA/IFIgKiBBTFBIQSA6IE1hdGgucG93KChSICsgU0hJRlQpICogQkVUQSwgR0FNTUEpXG4gICAgICAgIGNvbnN0IHZHID0gRyA8IFRIUkVTSE9MRCA/IFIgKiBBTFBIQSA6IE1hdGgucG93KChHICsgU0hJRlQpICogQkVUQSwgR0FNTUEpXG4gICAgICAgIGNvbnN0IHZCID0gQiA8IFRIUkVTSE9MRCA/IFIgKiBBTFBIQSA6IE1hdGgucG93KChCICsgU0hJRlQpICogQkVUQSwgR0FNTUEpXG4gICAgICAgIGNvbnN0IGNSID0gMC4yMTI2XG4gICAgICAgIGNvbnN0IGNHID0gMC43MTUyXG4gICAgICAgIGNvbnN0IGNCID0gMC4wNzIyXG4gICAgICAgIHJldHVybiAoY1IgKiB2UikgKyAoY0cgKiB2RykgKyAoY0IgKiB2QilcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyAwIGlmIHRoZSBjb2xvciBpcyBkYXJrIGFuZCAxIGlmIGl0IGlzIGxpZ2h0LlxuICAgICAqL1xuICAgIHB1YmxpYyBsdW1pbmFuY2VTdGVwKCk6IDAgfCAxIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubHVtaW5hbmNlKCkgPCBMVU1JTkFOQ0VfVEhSRVNIT0xEID8gMCA6IDFcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQYXJzZSBhIGNvbG9yIHdyaXR0ZW50IGluIENTUyBzeW50YXguXG4gICAgICpcbiAgICAgKiBAcGFyYW0gICBjb2RlIC0gQ1NTIGNvbG9yLlxuICAgICAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgY29sb3IgaGFzIHZhbGlkIHN5bnRheC5cbiAgICAgKi9cbiAgICBwdWJsaWMgcGFyc2UoY29kZTogc3RyaW5nID0gXCIjMDAwMDAwXCIpOiBib29sZWFuIHtcbiAgICAgICAgY29uc3QgaW5wdXQgPSBjb2RlLnRyaW0oKS50b1VwcGVyQ2FzZSgpXG4gICAgICAgIGlmICh0aGlzLnBhcnNlSGV4YS5jYWxsKHRoaXMsIGlucHV0KSkgcmV0dXJuIHRydWVcbiAgICAgICAgaWYgKHRoaXMucGFyc2VSR0IuY2FsbCh0aGlzLCBpbnB1dCkpIHJldHVybiB0cnVlXG4gICAgICAgIGlmICh0aGlzLnBhcnNlUkdCQS5jYWxsKHRoaXMsIGlucHV0KSkgcmV0dXJuIHRydWVcbiAgICAgICAgaWYgKHRoaXMucGFyc2VIU0wuY2FsbCh0aGlzLCBpbnB1dCkpIHJldHVybiB0cnVlXG5cbiAgICAgICAgLy8gQFRPRE8gcGFyc2VIU0xBLlxuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICBwdWJsaWMgcmdiMmhzbCgpIHtcbiAgICAgICAgY29uc3QgUiA9IHRoaXMuUlxuICAgICAgICBjb25zdCBHID0gdGhpcy5HXG4gICAgICAgIGNvbnN0IEIgPSB0aGlzLkJcblxuICAgICAgICBjb25zdCBtaW4gPSBNYXRoLm1pbihSLCBHLCBCKVxuICAgICAgICBjb25zdCBtYXggPSBNYXRoLm1heChSLCBHLCBCKVxuICAgICAgICBjb25zdCBkZWx0YSA9IG1heCAtIG1pblxuXG4gICAgICAgIHRoaXMuTCA9IEhBTEYgKiAobWF4ICsgbWluKVxuXG4gICAgICAgIGlmIChkZWx0YSA8IEVQU0lMT04pIHtcbiAgICAgICAgICAgIHRoaXMuSCA9IDBcbiAgICAgICAgICAgIHRoaXMuUyA9IDBcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuUyA9IGRlbHRhIC8gKDEgLSBNYXRoLmFicyh0aGlzLkwgKyB0aGlzLkwgLSAxKSlcbiAgICAgICAgICAgIGlmIChtYXggPT09IFIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLkggPSBHID49IEIgP1xuICAgICAgICAgICAgICAgICAgICBJTlZfNiAqICgoRyAtIEIpIC8gZGVsdGEpIDpcbiAgICAgICAgICAgICAgICAgICAgSU5WXzYgKiAoKEIgLSBHKSAvIGRlbHRhKVxuICAgICAgICAgICAgfSBlbHNlIGlmIChtYXggPT09IEcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLkggPSBJTlZfNiAqIChWQUxfMiArIChCIC0gUikgLyBkZWx0YSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5IID0gSU5WXzYgKiAoVkFMXzQgKyAoUiAtIEcpIC8gZGVsdGEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RyaW5naWZ5KCkge1xuICAgICAgICBsZXQgY29sb3IgPSBoZXhhMih0aGlzLlIgKiBNQVhfQllURV9WQUxVRSlcbiAgICAgICAgICAgICsgaGV4YTIodGhpcy5HICogTUFYX0JZVEVfVkFMVUUpXG4gICAgICAgICAgICArIGhleGEyKHRoaXMuQiAqIE1BWF9CWVRFX1ZBTFVFKVxuICAgICAgICBpZiAodGhpcy5BIDwgMSkge1xuICAgICAgICAgICAgY29sb3IgKz0gaGV4YTIodGhpcy5BICogTUFYX0JZVEVfVkFMVUUpXG4gICAgICAgIH1cblxuICAgICAgICBsZXQgY2FuQmVTaG9ydGVuID0gdHJ1ZVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbG9yLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgICAgICAgICBjb25zdCBhID0gY29sb3IuY2hhckF0KGkpXG4gICAgICAgICAgICBjb25zdCBiID0gY29sb3IuY2hhckF0KGkgKyAxKVxuICAgICAgICAgICAgaWYgKGEgIT09IGIpIHtcbiAgICAgICAgICAgICAgICBjYW5CZVNob3J0ZW4gPSBmYWxzZVxuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBUV08gPSAyXG4gICAgICAgIGNvbnN0IEZPVVIgPSA0XG4gICAgICAgIGNvbnN0IFNJWCA9IDZcblxuICAgICAgICBpZiAoY2FuQmVTaG9ydGVuKSB7XG4gICAgICAgICAgICBpZiAoY29sb3IubGVuZ3RoID09PSBTSVgpIHtcbiAgICAgICAgICAgICAgICBjb2xvciA9IGNvbG9yLmNoYXJBdCgwKSArIGNvbG9yLmNoYXJBdChUV08pICsgY29sb3IuY2hhckF0KEZPVVIpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbG9yID0gY29sb3IuY2hhckF0KDApICsgY29sb3IuY2hhckF0KFRXTylcbiAgICAgICAgICAgICAgICAgICAgKyBjb2xvci5jaGFyQXQoRk9VUikgKyBjb2xvci5jaGFyQXQoU0lYKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGAjJHtjb2xvcn1gXG4gICAgfVxuXG4gICAgcHVibGljIHRvQXJyYXlSR0IoKTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdIHtcbiAgICAgICAgcmV0dXJuIFt0aGlzLlIsIHRoaXMuRywgdGhpcy5CXVxuICAgIH1cblxuICAgIHB1YmxpYyB0b0FycmF5UkdCQSgpOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSB7XG4gICAgICAgIHJldHVybiBbdGhpcy5SLCB0aGlzLkcsIHRoaXMuQiwgdGhpcy5BXVxuICAgIH1cblxuICAgIHByaXZhdGUgcGFyc2VIZXhhKHRleHQ6IHN0cmluZykge1xuICAgICAgICBpZiAodGV4dC5jaGFyQXQoMCkgIT09IFwiI1wiKSByZXR1cm4gZmFsc2VcbiAgICAgICAgbGV0IFIgPSAwXG4gICAgICAgIGxldCBHID0gMFxuICAgICAgICBsZXQgQiA9IDBcbiAgICAgICAgbGV0IEEgPSAxXG5cbiAgICAgICAgc3dpdGNoICh0ZXh0Lmxlbmd0aCkge1xuICAgICAgICAgICAgY2FzZSBcIiNmZmZcIi5sZW5ndGg6XG4gICAgICAgICAgICAgICAgUiA9IHBhcnNlSW50KHRleHQuY2hhckF0KFZBTF8xKSwgMTYpICogSU5WXzE1XG4gICAgICAgICAgICAgICAgRyA9IHBhcnNlSW50KHRleHQuY2hhckF0KFZBTF8yKSwgMTYpICogSU5WXzE1XG4gICAgICAgICAgICAgICAgQiA9IHBhcnNlSW50KHRleHQuY2hhckF0KFZBTF8zKSwgMTYpICogSU5WXzE1XG4gICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgIGNhc2UgXCIjZmZmN1wiLmxlbmd0aDpcbiAgICAgICAgICAgICAgICBSID0gcGFyc2VJbnQodGV4dC5jaGFyQXQoVkFMXzEpLCAxNikgKiBJTlZfMTVcbiAgICAgICAgICAgICAgICBHID0gcGFyc2VJbnQodGV4dC5jaGFyQXQoVkFMXzIpLCAxNikgKiBJTlZfMTVcbiAgICAgICAgICAgICAgICBCID0gcGFyc2VJbnQodGV4dC5jaGFyQXQoVkFMXzMpLCAxNikgKiBJTlZfMTVcbiAgICAgICAgICAgICAgICBBID0gcGFyc2VJbnQodGV4dC5jaGFyQXQoVkFMXzQpLCAxNikgKiBJTlZfMTVcbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgY2FzZSBcIiNmZmZmZmZcIi5sZW5ndGg6XG4gICAgICAgICAgICAgICAgUiA9IHBhcnNlSW50KHRleHQuc3Vic3RyKFZBTF8xLCBWQUxfMiksIDE2KSAqIElOVl8yNTVcbiAgICAgICAgICAgICAgICBHID0gcGFyc2VJbnQodGV4dC5zdWJzdHIoVkFMXzMsIFZBTF8yKSwgMTYpICogSU5WXzI1NVxuICAgICAgICAgICAgICAgIEIgPSBwYXJzZUludCh0ZXh0LnN1YnN0cihWQUxfNSwgVkFMXzIpLCAxNikgKiBJTlZfMjU1XG4gICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgIGNhc2UgXCIjZmZmZmZmNzdcIi5sZW5ndGg6XG4gICAgICAgICAgICAgICAgUiA9IHBhcnNlSW50KHRleHQuc3Vic3RyKFZBTF8xLCBWQUxfMiksIDE2KSAqIElOVl8yNTVcbiAgICAgICAgICAgICAgICBHID0gcGFyc2VJbnQodGV4dC5zdWJzdHIoVkFMXzMsIFZBTF8yKSwgMTYpICogSU5WXzI1NVxuICAgICAgICAgICAgICAgIEIgPSBwYXJzZUludCh0ZXh0LnN1YnN0cihWQUxfNSwgVkFMXzIpLCAxNikgKiBJTlZfMjU1XG4gICAgICAgICAgICAgICAgQSA9IHBhcnNlSW50KHRleHQuc3Vic3RyKFZBTF83LCBWQUxfMiksIDE2KSAqIElOVl8yNTVcbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpc05hTihSKSB8fCBpc05hTihHKSB8fCBpc05hTihCKSB8fCBpc05hTihBKSkge1xuICAgICAgICAgICAgdGhpcy5SID0gdGhpcy5HID0gdGhpcy5CID0gdGhpcy5BID0gMFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5SID0gUlxuICAgICAgICAgICAgdGhpcy5HID0gR1xuICAgICAgICAgICAgdGhpcy5CID0gQlxuICAgICAgICAgICAgdGhpcy5BID0gQVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gICB0ZXh0IC0gYGhzbCgyMDAsIDE0MCwgNTApYFxuICAgICAqIEByZXR1cm5zIGB0cnVlYCBpZiBgdGV4dGAgaXMgYSB2YWxpZCBgaHNsKClgIHN5bnRheC5cbiAgICAgKi9cbiAgICBwcml2YXRlIHBhcnNlSFNMKHRleHQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBtID0gUlhfSFNMLmV4ZWModGV4dClcbiAgICAgICAgaWYgKCFtKSByZXR1cm4gZmFsc2VcbiAgICAgICAgdGhpcy5IID0gY2xhbXAwMShwYXJzZUludChtW1ZBTF8xXSwgMTApICogSU5WXzM1OSlcbiAgICAgICAgdGhpcy5TID0gY2xhbXAwMShwYXJzZUludChtW1ZBTF8yXSwgMTApICogSU5WXzk5KVxuICAgICAgICB0aGlzLkwgPSBjbGFtcDAxKHBhcnNlSW50KG1bVkFMXzNdLCAxMCkgKiBJTlZfOTkpXG4gICAgICAgIHRoaXMuQSA9IDFcbiAgICAgICAgdGhpcy5oc2wycmdiKClcblxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSAgIHRleHQgLSBgcmdiKDIwMCwgMTQwLCA1MClgXG4gICAgICogQHJldHVybnMgYHRydWVgIGlmIGB0ZXh0YCBpcyBhIHZhbGlkIGByZ2IoKWAgc3ludGF4LlxuICAgICAqL1xuICAgIHByaXZhdGUgcGFyc2VSR0IodGV4dDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IG0gPSBSWF9SR0IuZXhlYyh0ZXh0KVxuICAgICAgICBpZiAoIW0pIHJldHVybiBmYWxzZVxuICAgICAgICB0aGlzLlIgPSBjbGFtcDAxKHBhcnNlSW50KG1bVkFMXzFdLCAxMCkgKiBJTlZfMjU1KVxuICAgICAgICB0aGlzLkcgPSBjbGFtcDAxKHBhcnNlSW50KG1bVkFMXzJdLCAxMCkgKiBJTlZfMjU1KVxuICAgICAgICB0aGlzLkIgPSBjbGFtcDAxKHBhcnNlSW50KG1bVkFMXzNdLCAxMCkgKiBJTlZfMjU1KVxuICAgICAgICB0aGlzLkEgPSAxXG5cbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gICB0ZXh0IC0gYHJnYmEoMjAwLCAxNDAsIDUwLCAwLjUpYFxuICAgICAqIEByZXR1cm5zIGB0cnVlYCBpZiBgdGV4dGAgaXMgYSB2YWxpZCBgcmdiYSgpYCBzeW50YXguXG4gICAgICovXG4gICAgcHJpdmF0ZSBwYXJzZVJHQkEodGV4dDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IG0gPSBSWF9SR0JBLmV4ZWModGV4dClcbiAgICAgICAgaWYgKCFtKSByZXR1cm4gZmFsc2VcbiAgICAgICAgdGhpcy5SID0gY2xhbXAwMShwYXJzZUludChtW1ZBTF8xXSwgMTApICogSU5WXzI1NSlcbiAgICAgICAgdGhpcy5HID0gY2xhbXAwMShwYXJzZUludChtW1ZBTF8yXSwgMTApICogSU5WXzI1NSlcbiAgICAgICAgdGhpcy5CID0gY2xhbXAwMShwYXJzZUludChtW1ZBTF8zXSwgMTApICogSU5WXzI1NSlcbiAgICAgICAgdGhpcy5BID0gY2xhbXAwMShwYXJzZUZsb2F0KG1bVkFMXzRdKSlcblxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbn1cblxuY29uc3QgUlhfUkdCID0gL15SR0JbXFxzKF0rKFswLTldKylbXjAtOV0rKFswLTldKylbXjAtOV0rKFswLTldKykvXG5jb25zdCBSWF9SR0JBID0gL15SR0JBW1xccyhdKyhbMC05XSspW14wLTldKyhbMC05XSspW14wLTldKyhbMC05XSspW14wLTkuXSsoWzAtOS5dKykvXG5jb25zdCBSWF9IU0wgPSAvXkhTTFtcXHMoXSsoWzAtOV0rKVteMC05XSsoWzAtOV0rKVteMC05XSsoWzAtOV0rKS9cblxuZnVuY3Rpb24gY2xhbXAwMSh2YWx1ZTogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gTWF0aC5taW4oMSwgTWF0aC5tYXgoMCwgdmFsdWUpKVxufVxuXG5mdW5jdGlvbiBoZXhhMih2YWx1ZTogbnVtYmVyKSB7XG4gICAgLy8gV2FybmluZyEgVGhlIEVQU0lMT04gYmVsb3cgaXMgdXNlZCB0byBnZXQgcmlkIG9mIGEgSmF2YXNjcmlwdCBtaXNjYWxjdWxhdGlvblxuICAgIC8vIHdoaWNoIHdhcyByZXNwb25zaWJsZSBvZiAobmV3IENvbG9yKFwiI2Y0MDAwMFwiKSkuc3RyaW5naWZ5KCkgPT09IFwiI2YzMDAwMFwiLlxuICAgIGxldCBvdXQgPSBNYXRoLm1pbihNYXRoLm1heChNYXRoLmZsb29yKHZhbHVlICsgRVBTSUxPTiksIDApLCBNQVhfQllURV9WQUxVRSkudG9TdHJpbmcoMTYpXG4gICAgaWYgKG91dC5sZW5ndGggPCBcIkZGXCIubGVuZ3RoKSBvdXQgPSBgMCR7b3V0fWBcblxuICAgIHJldHVybiBvdXRcbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2NvbG9yJ1xuIiwiaW1wb3J0IElDT05TIGZyb20gXCIuL2ljb25zLnlhbWxcIlxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG4vKipcbiAqIFdlIGNhbiBmb3VuZCBtYXRlcmlhbCBpY29ucyBoZXJlOlxuICogaHR0cHM6Ly9tYXRlcmlhbGRlc2lnbmljb25zLmNvbS9cbiAqL1xuXG5jb25zdCBERUZBVUxUX0lDT046IEpTWC5FbGVtZW50ID0gKFxuICAgIDxzdmcgdmlld0JveD1cIjAgMCAyNCAyNFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XCJtZWV0IHhNaWRZTWlkXCI+XG4gICAgICAgIDxwYXRoXG4gICAgICAgICAgICBmaWxsPVwiY3VycmVudENvbG9yXCJcbiAgICAgICAgICAgIGQ9XCJNMTMuNDYsMTJMMTksMTcuNTRWMTlIMTcuNTRMMTIsMTMuNDZMNi40NiwxOUg1VjE3LjU0TDEwLjU0LDEyTDUsNi40NlY1SDYuNDZMMTIsMTAuNTRMMTcuNTQsNUgxOVY2LjQ2TDEzLjQ2LDEyWlwiXG4gICAgICAgIC8+XG4gICAgPC9zdmc+XG4pXG5cbmNsYXNzIEljb25GYWN0b3J5IHtcbiAgICBwcml2YXRlIGljb25zID0gbmV3IE1hcDxzdHJpbmcsIEpTWC5FbGVtZW50PigpXG5cbiAgICByZWdpc3RlcihuYW1lOiBzdHJpbmcsIHN2ZzogSlNYLkVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5pY29ucy5zZXQobmFtZSwgc3ZnKVxuICAgIH1cblxuICAgIHJlZ2lzdGVyRnJvbVBhdGgobmFtZTogc3RyaW5nLCBwYXRoOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5pY29ucy5zZXQoXG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cIm1lZXQgeE1pZFlNaWRcIj5cbiAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPVwiY3VycmVudENvbG9yXCIgZD17cGF0aH0gLz5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICApXG4gICAgfVxuXG4gICAgcmVnaXN0ZXJNYW55KGljb25zOiB7IFtuYW1lOiBzdHJpbmddOiBzdHJpbmcgfSkge1xuICAgICAgICBmb3IgKGNvbnN0IG5hbWUgb2YgT2JqZWN0LmtleXMoaWNvbnMpKSB7XG4gICAgICAgICAgICBjb25zdCBwYXRoID0gaWNvbnNbbmFtZV1cbiAgICAgICAgICAgIHRoaXMucmVnaXN0ZXJGcm9tUGF0aChuYW1lLCBwYXRoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgbWFrZShuYW1lOiBzdHJpbmcpOiBKU1guRWxlbWVudCB7XG4gICAgICAgIHJldHVybiB0aGlzLmljb25zLmdldChuYW1lKSA/PyBERUZBVUxUX0lDT05cbiAgICB9XG59XG5cbmNvbnN0IGZhY3RvcnkgPSBuZXcgSWNvbkZhY3RvcnkoKVxuXG5leHBvcnQgZGVmYXVsdCBmYWN0b3J5XG5cbmZhY3RvcnkucmVnaXN0ZXJNYW55KElDT05TKSIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiLi9pY29uLWZhY3RvcnlcIlxuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcblxuLyoqXG4gKiBTYW1lIGFzIFJlYWN0LnVzZUVmZmVjdCwgYnV0IHRoZSBlZmZlY3QgaXMgZGVib3VuY2VkLlxuICogQHBhcmFtIGRlbGF5IE51bWJlciBvZiBtaWxsaXNlY29uZHMgZm9yIGRlYm91bmNpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VEZWJvdW5jZWRFZmZlY3QoXG4gICAgZWZmZWN0OiBSZWFjdC5FZmZlY3RDYWxsYmFjayxcbiAgICBkZWxheTogbnVtYmVyLFxuICAgIGRlcHM/OiBSZWFjdC5EZXBlbmRlbmN5TGlzdCB8IHVuZGVmaW5lZFxuKTogdm9pZCB7XG4gICAgY29uc3QgcmVmVGltZW91dCA9IFJlYWN0LnVzZVJlZigtMSlcbiAgICBSZWFjdC51c2VFZmZlY3QoKCk9PntcbiAgICAgICAgd2luZG93LmNsZWFyVGltZW91dChyZWZUaW1lb3V0LmN1cnJlbnQpXG4gICAgICAgIHJlZlRpbWVvdXQuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KGVmZmVjdCwgZGVsYXkpXG4gICAgfSwgZGVwcylcbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VIYXNoKCk6IHN0cmluZyB7XG4gICAgY29uc3QgW2hhc2gsIHNldEhhc2hdID0gUmVhY3QudXNlU3RhdGUod2luZG93LmxvY2F0aW9uLmhhc2gpXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpPT57XG4gICAgICAgIGNvbnN0IGhhbmRsZUhhc2hDaGFuZ2UgPSAoZXZ0OiBIYXNoQ2hhbmdlRXZlbnQpPT57XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn8J+agCBbaGFzaF0gZXZ0Lm5ld1VSTCA9ICcsIGV2dC5uZXdVUkwpIC8vIEBGSVhNRTogUmVtb3ZlIHRoaXMgbGluZSB3cml0dGVuIG9uIDIwMjItMDQtMDEgYXQgMTQ6NTBcbiAgICAgICAgICAgIHNldEhhc2god2luZG93LmxvY2F0aW9uLmhhc2gpXG4gICAgICAgIH1cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJoYXNoY2hhbmdlXCIsIGhhbmRsZUhhc2hDaGFuZ2UpXG4gICAgICAgIHJldHVybiAoKT0+d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJoYXNoY2hhbmdlXCIsIGhhbmRsZUhhc2hDaGFuZ2UpXG4gICAgfSwgW10pXG4gICAgcmV0dXJuIGhhc2hcbn0iLCJleHBvcnQgeyB1c2VEZWJvdW5jZWRFZmZlY3QgfSBmcm9tIFwiLi9kZWJvdW5jZWQtZWZmZWN0XCJcbmV4cG9ydCB7IHVzZUxvY2FsU3RvcmFnZVN0YXRlIH0gZnJvbSBcIi4vbG9jYWwtc3RvcmFnZS1zdGF0ZVwiXG5leHBvcnQgeyB1c2VSZXNpemVPYnNlcnZlciB9IGZyb20gXCIuL3Jlc2l6ZS1vYnNlcnZlclwiXG5leHBvcnQgeyB1c2VUb2dnbGVQb3B1cCB9IGZyb20gJy4vdG9nZ2xlLXBvcHVwJ1xuXG4iLCJpbXBvcnQgSlNPTjUgZnJvbSBcImpzb241XCJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5cbi8qKlxuICogU3RhdGUgdmFyaWFibGUgdGhhdCBjYW4gYmUgc3RvcmVkIGluIGxvY2FsIHN0b3JhZ2UuXG4gKiBAcGFyYW0gZGVmYXVsdFZhbHVlIERlZmF1bHQgdmFsdWUgZm9yIGluaXRpYWxpemF0aW9uLlxuICogQHBhcmFtIHN0b3JhZ2VLZXkgS2V5IHdoZXJlIHRvIHN0b3JlIGl0IGluIGxvY2FsIHN0b3JhZ2UuXG4gKiBAcGFyYW0gaW5pdGlhbFRyYW5zZm9ybSBJZiBkZWZpbmVkLCBpdCBpcyB1c2VkIHRvIHRyYW5zZm9ybSB0aGUgdmFsdWUgcmVhZCBmcm9tIHN0b3JhZ2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VMb2NhbFN0b3JhZ2VTdGF0ZTxUPihcbiAgICBkZWZhdWx0VmFsdWU6IFQsXG4gICAgc3RvcmFnZUtleTogc3RyaW5nLFxuICAgIGluaXRpYWxUcmFuc2Zvcm0/OiAodmFsdWU6IFQpID0+IFRcbik6IFt2YWx1ZTogVCwgc2V0VmFsdWU6ICh2YWx1ZTogVCkgPT4gdm9pZF0ge1xuICAgIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gUmVhY3QudXNlU3RhdGU8VD4oXG4gICAgICAgIGdldDxUPihzdG9yYWdlS2V5LCBkZWZhdWx0VmFsdWUsIGluaXRpYWxUcmFuc2Zvcm0pXG4gICAgKVxuICAgIHJldHVybiBbXG4gICAgICAgIHZhbHVlLFxuICAgICAgICAobmV3VmFsdWU6IFQpID0+IHtcbiAgICAgICAgICAgIHNldFZhbHVlKG5ld1ZhbHVlKVxuICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKHN0b3JhZ2VLZXksIEpTT041LnN0cmluZ2lmeShuZXdWYWx1ZSkpXG4gICAgICAgIH0sXG4gICAgXVxufVxuXG5mdW5jdGlvbiBnZXQ8VD4oXG4gICAga2V5OiBzdHJpbmcsXG4gICAgZGVmYXVsdFZhbHVlOiBULFxuICAgIGluaXRpYWxUcmFuc2Zvcm0/OiAodmFsdWU6IFQpID0+IFRcbik6IFQge1xuICAgIGNvbnN0IHRleHQgPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KVxuICAgIGlmICghdGV4dClcbiAgICAgICAgcmV0dXJuIGluaXRpYWxUcmFuc2Zvcm0gPyBpbml0aWFsVHJhbnNmb3JtKGRlZmF1bHRWYWx1ZSkgOiBkZWZhdWx0VmFsdWVcblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gSlNPTjUucGFyc2UodGV4dClcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gdHlwZW9mIGRlZmF1bHRWYWx1ZSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJJbmNvbXBhdGlibGUgdHlwZXMhXCIpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGluaXRpYWxUcmFuc2Zvcm0gPyBpbml0aWFsVHJhbnNmb3JtKHZhbHVlKSA6IHZhbHVlXG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgVW5leHBlY3RlZCB2YWx1ZSBpbiBsb2NhbCBzdG9yYWdlIFwiJHtrZXl9XCI6YCwgZXgpXG4gICAgICAgIHJldHVybiBpbml0aWFsVHJhbnNmb3JtID8gaW5pdGlhbFRyYW5zZm9ybShkZWZhdWx0VmFsdWUpIDogZGVmYXVsdFZhbHVlXG4gICAgfVxufVxuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBBc3luY1Rvb2xzIGZyb20gXCIuLi8uLi90b29scy9hc3luY1wiXG5cbi8qKlxuICogRm9yY2UgYSByZXJlbmRlciBhcyBzb29uIGFzIGFuIG9ic2VydmVkIGVsZW1lbnQgY2hhbmdlZCBpdHMgc2l6ZS5cbiAqIFRoZSByZXJlbmRlciBjYW4gYWxzbyBiZSBkZWJvdW5jZWQuXG4gKiBAcGFyYW0gcmVmRWxlbSBSZWZlcmVuY2Ugb2YgdGhlIGVsZW1lbnQgd2hvc2Ugc2l6ZSB3ZSB3YW50IHRvIG9ic2VydmUuXG4gKiBAcGFyYW0gZGVib3VuY2VEZWxheSBJZiBkZWZpbmVkLCBkZWJvdW5jZSB0aGUgZGltZW5zaW9uIHVwZGF0ZS5cbiAqIEByZXR1cm5zIGBbd2lkdGgsIGhlaWdodF1gXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VSZXNpemVPYnNlcnZlcihcbiAgICBlbGVtZW50OiBIVE1MRWxlbWVudCB8IFNWR0VsZW1lbnQgfCBudWxsLFxuICAgIGRlYm91bmNlRGVsYXk/OiBudW1iZXJcbik6IFt3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcl0ge1xuICAgIGNvbnN0IFtzaXplLCBzZXRTaXplXSA9IFJlYWN0LnVzZVN0YXRlPFt3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcl0+KFxuICAgICAgICBnZXRJbml0aWFsU2l6ZShlbGVtZW50KVxuICAgIClcbiAgICBjb25zdCB1cGRhdGVTaXplID0gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGNvbnN0IHVwZGF0ZXIgPSAod2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIpID0+XG4gICAgICAgICAgICBzZXRTaXplKFt3aWR0aCwgaGVpZ2h0XSlcbiAgICAgICAgaWYgKHR5cGVvZiBkZWJvdW5jZURlbGF5ID09PSBcIm51bWJlclwiICYmIGRlYm91bmNlRGVsYXkgPiAwKSB7XG4gICAgICAgICAgICByZXR1cm4gQXN5bmNUb29scy5EZWJvdW5jZXIodXBkYXRlciwgZGVib3VuY2VEZWxheSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB1cGRhdGVyXG4gICAgICAgIH1cbiAgICB9LCBbZGVib3VuY2VEZWxheV0pXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2V0U2l6ZShnZXRJbml0aWFsU2l6ZShlbGVtZW50KSlcbiAgICAgICAgaWYgKCFlbGVtZW50KSByZXR1cm5cblxuICAgICAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBSZXNpemVPYnNlcnZlcigoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQgfSA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICAgICAgICAgIHVwZGF0ZVNpemUod2lkdGgsIGhlaWdodClcbiAgICAgICAgfSlcbiAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShlbGVtZW50KVxuICAgICAgICByZXR1cm4gKCkgPT4gb2JzZXJ2ZXIudW5vYnNlcnZlKGVsZW1lbnQpXG4gICAgfSwgW2VsZW1lbnQsIHVwZGF0ZVNpemVdKVxuICAgIHJldHVybiBzaXplXG59XG5cbmZ1bmN0aW9uIGdldEluaXRpYWxTaXplKFxuICAgIGVsZW1lbnQ6IEhUTUxFbGVtZW50IHwgU1ZHRWxlbWVudCB8IG51bGxcbik6IFt3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcl0ge1xuICAgIGlmICghZWxlbWVudCkgcmV0dXJuIFswLCAwXVxuXG4gICAgcmV0dXJuIFtlbGVtZW50LmNsaWVudFdpZHRoLCBlbGVtZW50LmNsaWVudEhlaWdodF1cbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5cbmxldCBpbmNyZW1lbnRhbElkID0gTWF0aC5yYW5kb20oKVxuXG4vKipcbiAqIEhhbmRsZSB0aGUgdmlzaWJpbGl0eSBvZiBhIFwicG9wdXBcIiBBIHBvcHVwIHRoYXQgY2FuIGJlIGNsb3NlZFxuICogd2l0aCB0aGUgYmFjayBidXR0b24gb2YgeW91ciBicm93c2VyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlVG9nZ2xlUG9wdXAoKTogW1xuICAgIHZpc2libGU6IGJvb2xlYW4sXG4gICAgc2V0VmlzaWJsZTogKHZpc2libGU6IGJvb2xlYW4pID0+IHZvaWRcbl0ge1xuICAgIGNvbnN0IHJlZklkID0gUmVhY3QudXNlUmVmKC0xKVxuICAgIGNvbnN0IHJlZkhpc3RvcnlTdGF0ZSA9IFJlYWN0LnVzZVJlZjxhbnk+KG51bGwpXG4gICAgY29uc3QgW3Zpc2libGUsIHNldFZpc2libGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgcmVmSWQuY3VycmVudCA9IGluY3JlbWVudGFsSWQrK1xuICAgICAgICBjb25zdCBsaXN0ZW5lciA9IChldnQ6IFBvcFN0YXRlRXZlbnQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgc3RhdGUgfSA9IGV2dFxuICAgICAgICAgICAgY29uc3QgcHJldmlvdXNTdGF0ZSA9IHJlZkhpc3RvcnlTdGF0ZS5jdXJyZW50XG4gICAgICAgICAgICByZWZIaXN0b3J5U3RhdGUuY3VycmVudCA9IHN0YXRlXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIk9MRCBzdGF0ZTpcIiwgcHJldmlvdXNTdGF0ZSlcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiTkVXIHN0YXRlOlwiLCBzdGF0ZSlcbiAgICAgICAgICAgIGlmICghaXNUb2dnbGVQb3B1cFN0YXRlKHN0YXRlLCByZWZJZC5jdXJyZW50KSkgcmV0dXJuXG5cbiAgICAgICAgICAgIGNvbnN0IHsgdmFsdWUgfSA9IHN0YXRlXG5cbiAgICAgICAgICAgIHNldFZpc2libGUodmFsdWUpXG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAvLyBpZiAoaXNUb2dnbGVQb3B1cFN0YXRlKHByZXZpb3VzU3RhdGUsIHJlZklkLmN1cnJlbnQpKSB7XG4gICAgICAgICAgICAgICAgLy8gICAgIGNvbnN0IHByZXZpb3VzVmFsdWUgPSBwcmV2aW91c1N0YXRlLnZhbHVlXG4gICAgICAgICAgICAgICAgLy8gICAgIGlmIChwcmV2aW91c1ZhbHVlID09PSBmYWxzZSkgYmFjaygpXG4gICAgICAgICAgICAgICAgLy8gfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgZm9yd2FyZCgpXG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNUb2dnbGVQb3B1cFN0YXRlKHByZXZpb3VzU3RhdGUsIHJlZklkLmN1cnJlbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHByZXZpb3VzVmFsdWUgPSBwcmV2aW91c1N0YXRlLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcmV2aW91c1ZhbHVlID09PSB0cnVlKSBiYWNrKClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmb3J3YXJkKClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJwb3BzdGF0ZVwiLCBsaXN0ZW5lciwgZmFsc2UpXG4gICAgICAgIHJldHVybiAoKSA9PiB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvcHN0YXRlXCIsIGxpc3RlbmVyLCBmYWxzZSlcbiAgICB9LCBbXSlcbiAgICByZXR1cm4gW1xuICAgICAgICB2aXNpYmxlLFxuICAgICAgICAobmV3VmlzaWJsZTogYm9vbGVhbikgPT4ge1xuICAgICAgICAgICAgaWYgKG5ld1Zpc2libGUgPT09IHZpc2libGUpIHJldHVyblxuXG4gICAgICAgICAgICBpZiAobmV3VmlzaWJsZSkge1xuICAgICAgICAgICAgICAgIC8vIE9wZW4gdGhlIHBvcHVwLlxuICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gcmVmSWQuY3VycmVudFxuICAgICAgICAgICAgICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShcbiAgICAgICAgICAgICAgICAgICAgbWFrZVRvZ2dsZVBvcHVwU3RhdGUoaWQsIGZhbHNlKSxcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIG51bGxcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhdGUgPSBtYWtlVG9nZ2xlUG9wdXBTdGF0ZShpZCwgdHJ1ZSlcbiAgICAgICAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoc3RhdGUsIGRvY3VtZW50LnRpdGxlLCBudWxsKVxuICAgICAgICAgICAgICAgIHJlZkhpc3RvcnlTdGF0ZS5jdXJyZW50ID0gc3RhdGVcbiAgICAgICAgICAgICAgICBzZXRWaXNpYmxlKHRydWUpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIENsb3NlIHRoZSBwb3B1cC5cbiAgICAgICAgICAgICAgICBiYWNrKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICBdXG59XG5cbmludGVyZmFjZSBUb2dnbGVQb3B1cFN0YXRlIHtcbiAgICB0eXBlOiBcInRvZ2dsZS1wb3B1cFwiXG4gICAgaWQ6IG51bWJlclxuICAgIHZhbHVlOiBib29sZWFuXG59XG5cbmZ1bmN0aW9uIGlzVG9nZ2xlUG9wdXBTdGF0ZShcbiAgICBkYXRhOiBhbnksXG4gICAgZXhwZWN0ZWRJZDogbnVtYmVyXG4pOiBkYXRhIGlzIFRvZ2dsZVBvcHVwU3RhdGUge1xuICAgIGlmICghZGF0YSkgcmV0dXJuIGZhbHNlXG4gICAgY29uc3QgeyB0eXBlLCBpZCwgdmFsdWUgfSA9IGRhdGFcbiAgICBpZiAodHlwZSAhPT0gXCJ0b2dnbGUtcG9wdXBcIikgcmV0dXJuIGZhbHNlXG4gICAgaWYgKGlkICE9PSBleHBlY3RlZElkKSByZXR1cm4gZmFsc2VcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcImJvb2xlYW5cIlxufVxuXG5mdW5jdGlvbiBtYWtlVG9nZ2xlUG9wdXBTdGF0ZShpZDogbnVtYmVyLCB2YWx1ZTogYm9vbGVhbik6IFRvZ2dsZVBvcHVwU3RhdGUge1xuICAgIHJldHVybiB7IHR5cGU6IFwidG9nZ2xlLXBvcHVwXCIsIGlkLCB2YWx1ZSB9XG59XG5cbmZ1bmN0aW9uIGJhY2soKSB7XG4gICAgLy8gY29uc29sZS5sb2coXCJCQUNLXCIpXG4gICAgd2luZG93Lmhpc3RvcnkuYmFjaygpXG59XG5cbmZ1bmN0aW9uIGZvcndhcmQoKSB7XG4gICAgLy8gY29uc29sZS5sb2coXCJGT1JXQVJEXCIpXG4gICAgd2luZG93Lmhpc3RvcnkuZm9yd2FyZCgpXG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDc3NWYXJNYW5hZ2VyIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHRhcmdldDogSFRNTEVsZW1lbnQgfCBTVkdFbGVtZW50XG5cbiAgICBjb25zdHJ1Y3Rvcih0YXJnZXQ/OiBIVE1MRWxlbWVudCB8IFNWR0VsZW1lbnQpIHtcbiAgICAgICAgdGhpcy50YXJnZXQgPSB0YXJnZXQgPz8gd2luZG93LmRvY3VtZW50LmJvZHlcbiAgICB9XG5cbiAgICBzZXQobmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMudGFyZ2V0LnN0eWxlLnNldFByb3BlcnR5KHRoaXMuc2FuaXRpemVOYW1lKG5hbWUpLCB2YWx1ZSlcbiAgICB9XG5cbiAgICBnZXQobmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGFyZ2V0LnN0eWxlLmdldFByb3BlcnR5VmFsdWUodGhpcy5zYW5pdGl6ZU5hbWUobmFtZSkpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzYW5pdGl6ZU5hbWUobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBuYW1lLnN0YXJ0c1dpdGgoXCItLVwiKSA/IG5hbWUgOiBgLS0ke25hbWV9YFxuICAgIH1cbn0iLCJleHBvcnQgeyBkZWZhdWx0LCBUaGVtZVNldHRpbmdzIH0gZnJvbSBcIi4vdGhlbWVcIlxuIiwiaW1wb3J0IENvbG9yIGZyb20gXCIuLi9jb2xvclwiXG5pbXBvcnQgQ3NzVmFyTWFuYWdlciBmcm9tIFwiLi9jc3MtdmFyLW1hbmFnZXJcIlxuaW1wb3J0IFwiLi90aGVtZS5jc3NcIlxuXG5jb25zdCBDU1NfUFJFRklYID0gXCJ0aGVtZVwiXG5jb25zdCBDU1NfQ09MT1IgPSBcIi1jb2xvclwiXG5jb25zdCBDU1NfT04gPSBcIi1vblwiXG5jb25zdCBDU1NfQ09MT1JfUFJJTUFSWSA9IFwiLXByaW1hcnlcIlxuY29uc3QgQ1NTX0NPTE9SX1BSSU1BUllfTElHSFQgPSBcIi1wcmltYXJ5LWxpZ2h0XCJcbmNvbnN0IENTU19DT0xPUl9QUklNQVJZX0RBUksgPSBcIi1wcmltYXJ5LWRhcmtcIlxuY29uc3QgQ1NTX0NPTE9SX0FDQ0VOVCA9IFwiLWFjY2VudFwiXG5jb25zdCBDU1NfQ09MT1JfQUNDRU5UX0xJR0hUID0gXCItYWNjZW50LWxpZ2h0XCJcbmNvbnN0IENTU19DT0xPUl9BQ0NFTlRfREFSSyA9IFwiLWFjY2VudC1kYXJrXCJcbmNvbnN0IENTU19DT0xPUl9FUlJPUiA9IFwiLWVycm9yXCJcbmNvbnN0IENTU19DT0xPUl9TQ1JFRU4gPSBcIi1zY3JlZW5cIlxuY29uc3QgQ1NTX0NPTE9SX0ZSQU1FID0gXCItZnJhbWVcIlxuY29uc3QgQ1NTX0NPTE9SX1NFQ1RJT04gPSBcIi1zZWN0aW9uXCJcbmNvbnN0IENTU19DT0xPUl9JTlBVVCA9IFwiLWlucHV0XCJcbmNvbnN0IENTU19DT0xPUl9XSElURSA9IFwiLXdoaXRlXCJcbmNvbnN0IENTU19DT0xPUl9CTEFDSyA9IFwiLWJsYWNrXCJcbmNvbnN0IENTU19DT0xPUl9MSU5LID0gXCItbGlua1wiXG5jb25zdCBDU1NfT1BBQ0lUWSA9IFwiLW9wYWNpdHktXCJcbmNvbnN0IENTU19TSEFET1cgPSBcIi1zaGFkb3dcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFRoZW1lU2V0dGluZ3Mge1xuICAgIGNvbG9yczoge1xuICAgICAgICBwcmltYXJ5OiBDb2xvclBhbGV0dGVcbiAgICAgICAgYWNjZW50OiBDb2xvclBhbGV0dGVcbiAgICAgICAgZXJyb3I6IHN0cmluZ1xuICAgICAgICBzY3JlZW46IHN0cmluZ1xuICAgICAgICBmcmFtZTogc3RyaW5nXG4gICAgICAgIHNlY3Rpb246IHN0cmluZ1xuICAgICAgICBpbnB1dDogc3RyaW5nXG4gICAgICAgIHdoaXRlOiBzdHJpbmdcbiAgICAgICAgYmxhY2s6IHN0cmluZ1xuICAgICAgICBsaW5rPzogc3RyaW5nXG4gICAgfVxufVxuXG5pbnRlcmZhY2UgQ29sb3JQYWxldHRlIHtcbiAgICBkYXJrOiBzdHJpbmdcbiAgICBiYXNlOiBzdHJpbmdcbiAgICBsaWdodDogc3RyaW5nXG59XG5cbnR5cGUgQ29sb3JOYW1lcyA9XG4gICAgfCBcInByaW1hcnlcIlxuICAgIHwgXCJwcmltYXJ5LWxpZ2h0XCJcbiAgICB8IFwicHJpbWFyeS1kYXJrXCJcbiAgICB8IFwiYWNjZW50XCJcbiAgICB8IFwiYWNjZW50LWxpZ2h0XCJcbiAgICB8IFwiYWNjZW50LWRhcmtcIlxuICAgIHwgXCJlcnJvclwiXG4gICAgfCBcInNjcmVlblwiXG4gICAgfCBcImZyYW1lXCJcbiAgICB8IFwic2VjdGlvblwiXG4gICAgfCBcImlucHV0XCJcbiAgICB8IFwid2hpdGVcIlxuICAgIHwgXCJibGFja1wiXG4gICAgfCBcImxpbmtcIlxuXG5jb25zdCBUaGVtZSA9IHtcbiAgICBhcHBseSxcbiAgICBzaGFkZSxcbiAgICBnZXQgY3VycmVudCgpIHtcbiAgICAgICAgcmV0dXJuIGN1cnJlbnRUaGVtZVxuICAgIH0sXG4gICAgZ2V0IGRlZmF1bHREYXJrVGhlbWUoKTogVGhlbWVTZXR0aW5ncyB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb2xvcnM6IHtcbiAgICAgICAgICAgICAgICBibGFjazogXCIjMDAwXCIsXG4gICAgICAgICAgICAgICAgd2hpdGU6IFwiI2ZmZlwiLFxuICAgICAgICAgICAgICAgIGVycm9yOiBcIiNmMjBcIixcbiAgICAgICAgICAgICAgICBzY3JlZW46IFwiI2RkZFwiLFxuICAgICAgICAgICAgICAgIGZyYW1lOiBcIiNlOWViZWZcIixcbiAgICAgICAgICAgICAgICBzZWN0aW9uOiBcIiNlZmYyZjVcIixcbiAgICAgICAgICAgICAgICBpbnB1dDogXCIjZmZmXCIsXG4gICAgICAgICAgICAgICAgcHJpbWFyeToge1xuICAgICAgICAgICAgICAgICAgICBkYXJrOiBcIiMwNTBBNTZcIixcbiAgICAgICAgICAgICAgICAgICAgYmFzZTogXCIjMDA4M0NCXCIsXG4gICAgICAgICAgICAgICAgICAgIGxpZ2h0OiBcIiMwMEQ0RkVcIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGFjY2VudDoge1xuICAgICAgICAgICAgICAgICAgICBkYXJrOiBcIiM4MDJkMDBcIixcbiAgICAgICAgICAgICAgICAgICAgYmFzZTogXCIjY2I0ODAwXCIsXG4gICAgICAgICAgICAgICAgICAgIGxpZ2h0OiBcIiNmZjhjNGRcIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGxpbms6IFwiIzgwMmQwMFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfVxuICAgIH0sXG4gICAgZ2V0IGRlZmF1bHRMaWdodFRoZW1lKCk6IFRoZW1lU2V0dGluZ3Mge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29sb3JzOiB7XG4gICAgICAgICAgICAgICAgYmxhY2s6IFwiIzExMWVcIixcbiAgICAgICAgICAgICAgICB3aGl0ZTogXCIjZWVlZVwiLFxuICAgICAgICAgICAgICAgIGVycm9yOiBcIiNmMjBcIixcbiAgICAgICAgICAgICAgICBzY3JlZW46IFwiI2JiYlwiLFxuICAgICAgICAgICAgICAgIGZyYW1lOiBcIiNjY2NcIixcbiAgICAgICAgICAgICAgICBzZWN0aW9uOiBcIiNkZGRcIixcbiAgICAgICAgICAgICAgICBpbnB1dDogXCIjZWVlXCIsXG4gICAgICAgICAgICAgICAgcHJpbWFyeTogeyBkYXJrOiBcIiMxZjI4NTlcIiwgYmFzZTogXCIjM2U1MGI0XCIsIGxpZ2h0OiBcIiM1ODcxZmZcIiB9LFxuICAgICAgICAgICAgICAgIGFjY2VudDogeyBkYXJrOiBcIiM1OTUwMWZcIiwgYmFzZTogXCIjYjRhMjNlXCIsIGxpZ2h0OiBcIiNmZmU2NThcIiB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfVxuICAgIH0sXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRoZW1lXG5cbmxldCBjdXJyZW50VGhlbWU6IFRoZW1lU2V0dGluZ3MgPSBUaGVtZS5kZWZhdWx0RGFya1RoZW1lXG5cbmZ1bmN0aW9uIHNoYWRlKGJhc2VDb2xvcjogQ29sb3IgfCBzdHJpbmcsIHNwcmVhZCA9IDAuNSk6IENvbG9yUGFsZXR0ZSB7XG4gICAgY29uc3QgYmFzZSA9XG4gICAgICAgIHR5cGVvZiBiYXNlQ29sb3IgPT09IFwic3RyaW5nXCIgPyBuZXcgQ29sb3IoYmFzZUNvbG9yKSA6IGJhc2VDb2xvclxuICAgIGJhc2UucmdiMmhzbCgpXG4gICAgY29uc3QgeyBILCBTLCBMLCBBIH0gPSBiYXNlXG4gICAgcmV0dXJuIHtcbiAgICAgICAgYmFzZTogYmFzZS5zdHJpbmdpZnkoKSxcbiAgICAgICAgZGFyazogQ29sb3IuZnJvbUhTTEEoSCwgUywgTCAqICgxIC0gc3ByZWFkKSwgQSkuc3RyaW5naWZ5KCksXG4gICAgICAgIGxpZ2h0OiBDb2xvci5mcm9tSFNMQShILCBTLCBMICsgKDEgLSBMKSAqIHNwcmVhZCwgQSkuc3RyaW5naWZ5KCksXG4gICAgfVxufVxuXG4vKipcbiAqXG4gKiBAcGFyYW0gc2V0dGluZ3MgQWxsIHRoZSB0aGVtZSBzZXR0aW5ncyBhcmUgbmVlZGVkLiBVc2UgYSBoZWxwZXIgZnVuY3Rpb25cbiAqIGlmIHlvdSB3YW50IGRlZmF1bHQgdmFsdWVzIHRvIGJlIGZpbGxlZCBmb3IgeW91LlxuICogQHBhcmFtIHRhcmdldCBUYXJnZXQgZWxlbWVudCB0byBhcHBseSB0byB0aGVtZSBvbi4gSWYgb21pdHRlZCB0aGUgdGhlbWUgaXMgYXBwbGllZCBvbiBCT0RZLlxuICovXG5mdW5jdGlvbiBhcHBseShzZXR0aW5nczogVGhlbWVTZXR0aW5ncywgdGFyZ2V0PzogSFRNTEVsZW1lbnQgfCBTVkdFbGVtZW50KSB7XG4gICAgY3VycmVudFRoZW1lID0gc2V0dGluZ3NcbiAgICBjb25zdCB2YXJzID0gbmV3IENzc1Zhck1hbmFnZXIodGFyZ2V0KVxuICAgIGFwcGx5Q29sb3JzKHNldHRpbmdzLCB2YXJzKVxuICAgIGFwcGx5U2hhZG93cyhzZXR0aW5ncywgdmFycylcbn1cblxuZnVuY3Rpb24gYXBwbHlDb2xvcnMoc2V0dGluZ3M6IFRoZW1lU2V0dGluZ3MsIHZhcnM6IENzc1Zhck1hbmFnZXIpIHtcbiAgICBjb25zdCB3aGl0ZSA9IENvbG9yLmZyb21Db2xvck9yU3RyaW5nKHNldHRpbmdzLmNvbG9ycy53aGl0ZSlcbiAgICBjb25zdCBibGFjayA9IENvbG9yLmZyb21Db2xvck9yU3RyaW5nKHNldHRpbmdzLmNvbG9ycy5ibGFjaylcbiAgICBhcHBseUNvbG9yKHZhcnMsIFwicHJpbWFyeVwiLCBzZXR0aW5ncy5jb2xvcnMucHJpbWFyeS5iYXNlLCB3aGl0ZSwgYmxhY2spXG4gICAgYXBwbHlDb2xvcihcbiAgICAgICAgdmFycyxcbiAgICAgICAgXCJwcmltYXJ5LWxpZ2h0XCIsXG4gICAgICAgIHNldHRpbmdzLmNvbG9ycy5wcmltYXJ5LmxpZ2h0LFxuICAgICAgICB3aGl0ZSxcbiAgICAgICAgYmxhY2tcbiAgICApXG4gICAgYXBwbHlDb2xvcih2YXJzLCBcInByaW1hcnktZGFya1wiLCBzZXR0aW5ncy5jb2xvcnMucHJpbWFyeS5kYXJrLCB3aGl0ZSwgYmxhY2spXG4gICAgYXBwbHlDb2xvcih2YXJzLCBcImFjY2VudFwiLCBzZXR0aW5ncy5jb2xvcnMuYWNjZW50LmJhc2UsIHdoaXRlLCBibGFjaylcbiAgICBhcHBseUNvbG9yKHZhcnMsIFwiYWNjZW50LWxpZ2h0XCIsIHNldHRpbmdzLmNvbG9ycy5hY2NlbnQubGlnaHQsIHdoaXRlLCBibGFjaylcbiAgICBhcHBseUNvbG9yKHZhcnMsIFwiYWNjZW50LWRhcmtcIiwgc2V0dGluZ3MuY29sb3JzLmFjY2VudC5kYXJrLCB3aGl0ZSwgYmxhY2spXG4gICAgYXBwbHlDb2xvcih2YXJzLCBcImVycm9yXCIsIHNldHRpbmdzLmNvbG9ycy5lcnJvciwgd2hpdGUsIGJsYWNrKVxuICAgIGFwcGx5Q29sb3IodmFycywgXCJzY3JlZW5cIiwgc2V0dGluZ3MuY29sb3JzLnNjcmVlbiwgd2hpdGUsIGJsYWNrKVxuICAgIGFwcGx5Q29sb3IodmFycywgXCJmcmFtZVwiLCBzZXR0aW5ncy5jb2xvcnMuZnJhbWUsIHdoaXRlLCBibGFjaylcbiAgICBhcHBseUNvbG9yKHZhcnMsIFwic2VjdGlvblwiLCBzZXR0aW5ncy5jb2xvcnMuc2VjdGlvbiwgd2hpdGUsIGJsYWNrKVxuICAgIGFwcGx5Q29sb3IodmFycywgXCJpbnB1dFwiLCBzZXR0aW5ncy5jb2xvcnMuaW5wdXQsIHdoaXRlLCBibGFjaylcbiAgICBhcHBseUNvbG9yKHZhcnMsIFwid2hpdGVcIiwgc2V0dGluZ3MuY29sb3JzLndoaXRlLCB3aGl0ZSwgYmxhY2spXG4gICAgYXBwbHlDb2xvcih2YXJzLCBcImJsYWNrXCIsIHNldHRpbmdzLmNvbG9ycy5ibGFjaywgd2hpdGUsIGJsYWNrKVxuICAgIGlmIChzZXR0aW5ncy5jb2xvcnMubGluaykge1xuICAgICAgICB2YXJzLnNldCh2YXJOYW1lRm9yQ29sb3IoXCJsaW5rXCIpLCBzZXR0aW5ncy5jb2xvcnMubGluaylcbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBhY2NlbnQgPSBUaGVtZS5zaGFkZShzZXR0aW5ncy5jb2xvcnMuYWNjZW50LmJhc2UsIC42KVxuICAgICAgICBjb25zdCBwcmltYXJ5ID0gVGhlbWUuc2hhZGUoc2V0dGluZ3MuY29sb3JzLmFjY2VudC5iYXNlLCAuNilcbiAgICAgICAgdmFycy5zZXQoXG4gICAgICAgICAgICB2YXJOYW1lRm9yQ29sb3IoXCJsaW5rXCIpLFxuICAgICAgICAgICAgQ29sb3IuYmVzdENvbnRyYXN0KFxuICAgICAgICAgICAgICAgIHNldHRpbmdzLmNvbG9ycy5mcmFtZSxcbiAgICAgICAgICAgICAgICBzZXR0aW5ncy5jb2xvcnMucHJpbWFyeS5kYXJrLFxuICAgICAgICAgICAgICAgIHNldHRpbmdzLmNvbG9ycy5wcmltYXJ5LmJhc2UsXG4gICAgICAgICAgICAgICAgc2V0dGluZ3MuY29sb3JzLnByaW1hcnkubGlnaHQsXG4gICAgICAgICAgICAgICAgcHJpbWFyeS5saWdodCxcbiAgICAgICAgICAgICAgICBwcmltYXJ5LmRhcmssXG4gICAgICAgICAgICAgICAgc2V0dGluZ3MuY29sb3JzLmFjY2VudC5kYXJrLFxuICAgICAgICAgICAgICAgIHNldHRpbmdzLmNvbG9ycy5hY2NlbnQuYmFzZSxcbiAgICAgICAgICAgICAgICBzZXR0aW5ncy5jb2xvcnMuYWNjZW50LmxpZ2h0LFxuICAgICAgICAgICAgICAgIGFjY2VudC5saWdodCxcbiAgICAgICAgICAgICAgICBhY2NlbnQuZGFyayxcbiAgICAgICAgICAgIClcbiAgICAgICAgKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gYXBwbHlDb2xvcihcbiAgICB2YXJzOiBDc3NWYXJNYW5hZ2VyLFxuICAgIGNvbG9yTmFtZTogQ29sb3JOYW1lcyxcbiAgICBjb2xvclZhbHVlOiBzdHJpbmcsXG4gICAgd2hpdGU6IENvbG9yLFxuICAgIGJsYWNrOiBDb2xvclxuKSB7XG4gICAgY29uc3QgY29sb3IgPSBDb2xvci5mcm9tQ29sb3JPclN0cmluZyhjb2xvclZhbHVlKVxuICAgIHZhcnMuc2V0KHZhck5hbWVGb3JDb2xvcihjb2xvck5hbWUpLCBjb2xvci5zdHJpbmdpZnkoKSlcbiAgICBjb25zdCBzdGVwID0gNVxuICAgIGNvbnN0IHBlcmNlbnQgPSAwLjAxXG4gICAgZm9yIChsZXQgb3BhY2l0eSA9IHN0ZXA7IG9wYWNpdHkgPCAxMDA7IG9wYWNpdHkgKz0gc3RlcCkge1xuICAgICAgICBjb2xvci5BID0gb3BhY2l0eSAqIHBlcmNlbnRcbiAgICAgICAgdmFycy5zZXQodmFyTmFtZUZvckNvbG9yKGNvbG9yTmFtZSwgb3BhY2l0eSksIGNvbG9yLnN0cmluZ2lmeSgpKVxuICAgIH1cbiAgICBjb25zdCBjb2xvck9uID0gQ29sb3IuYmVzdENvbnRyYXN0KGNvbG9yLCB3aGl0ZSwgYmxhY2spXG4gICAgdmFycy5zZXQodmFyTmFtZUZvckNvbG9yT24oY29sb3JOYW1lKSwgY29sb3JPbi5zdHJpbmdpZnkoKSlcbiAgICBmb3IgKGxldCBvcGFjaXR5ID0gc3RlcDsgb3BhY2l0eSA8IDEwMDsgb3BhY2l0eSArPSBzdGVwKSB7XG4gICAgICAgIGNvbnN0IHRyYW5zcGFyZW50Q29sb3JPbiA9IGNvbG9yT24uY29weSgpXG4gICAgICAgIHRyYW5zcGFyZW50Q29sb3JPbi5BID0gb3BhY2l0eSAqIHBlcmNlbnQgKiBjb2xvck9uLkFcbiAgICAgICAgdmFycy5zZXQoXG4gICAgICAgICAgICB2YXJOYW1lRm9yQ29sb3JPbihjb2xvck5hbWUsIG9wYWNpdHkpLFxuICAgICAgICAgICAgdHJhbnNwYXJlbnRDb2xvck9uLnN0cmluZ2lmeSgpXG4gICAgICAgIClcbiAgICB9XG59XG5cbmNvbnN0IENPTE9SX0NMQVNTTkFNRV9NQVBQSU5HOiB7IFtrZXkgaW4gQ29sb3JOYW1lc106IHN0cmluZyB9ID0ge1xuICAgIFwiYWNjZW50LWRhcmtcIjogQ1NTX0NPTE9SX0FDQ0VOVF9EQVJLLFxuICAgIFwiYWNjZW50LWxpZ2h0XCI6IENTU19DT0xPUl9BQ0NFTlRfTElHSFQsXG4gICAgXCJwcmltYXJ5LWRhcmtcIjogQ1NTX0NPTE9SX1BSSU1BUllfREFSSyxcbiAgICBcInByaW1hcnktbGlnaHRcIjogQ1NTX0NPTE9SX1BSSU1BUllfTElHSFQsXG4gICAgYWNjZW50OiBDU1NfQ09MT1JfQUNDRU5ULFxuICAgIGJsYWNrOiBDU1NfQ09MT1JfQkxBQ0ssXG4gICAgZXJyb3I6IENTU19DT0xPUl9FUlJPUixcbiAgICBmcmFtZTogQ1NTX0NPTE9SX0ZSQU1FLFxuICAgIGlucHV0OiBDU1NfQ09MT1JfSU5QVVQsXG4gICAgcHJpbWFyeTogQ1NTX0NPTE9SX1BSSU1BUlksXG4gICAgc2NyZWVuOiBDU1NfQ09MT1JfU0NSRUVOLFxuICAgIHNlY3Rpb246IENTU19DT0xPUl9TRUNUSU9OLFxuICAgIHdoaXRlOiBDU1NfQ09MT1JfV0hJVEUsXG4gICAgbGluazogQ1NTX0NPTE9SX0xJTkssXG59XG5cbmZ1bmN0aW9uIHZhck5hbWVGb3JDb2xvcihjb2xvcjogQ29sb3JOYW1lcywgb3BhY2l0eTogbnVtYmVyID0gMCkge1xuICAgIGNvbnN0IGNvbG9yQ2xhc3NOYW1lID0gQ09MT1JfQ0xBU1NOQU1FX01BUFBJTkdbY29sb3JdXG4gICAgcmV0dXJuIGAke0NTU19QUkVGSVh9JHtDU1NfQ09MT1J9JHtjb2xvckNsYXNzTmFtZX0ke1xuICAgICAgICBvcGFjaXR5ID4gMCA/IGAke0NTU19PUEFDSVRZfSR7b3BhY2l0eX1gIDogXCJcIlxuICAgIH1gXG59XG5cbmZ1bmN0aW9uIHZhck5hbWVGb3JDb2xvck9uKGNvbG9yOiBDb2xvck5hbWVzLCBvcGFjaXR5OiBudW1iZXIgPSAwKSB7XG4gICAgY29uc3QgY29sb3JDbGFzc05hbWUgPSBDT0xPUl9DTEFTU05BTUVfTUFQUElOR1tjb2xvcl1cbiAgICByZXR1cm4gYCR7Q1NTX1BSRUZJWH0ke0NTU19DT0xPUn0ke0NTU19PTn0ke2NvbG9yQ2xhc3NOYW1lfSR7XG4gICAgICAgIG9wYWNpdHkgPiAwID8gYCR7Q1NTX09QQUNJVFl9JHtvcGFjaXR5fWAgOiBcIlwiXG4gICAgfWBcbn1cblxuZnVuY3Rpb24gYXBwbHlTaGFkb3dzKHNldHRpbmdzOiBUaGVtZVNldHRpbmdzLCB2YXJzOiBDc3NWYXJNYW5hZ2VyKSB7XG4gICAgLy8gQHNlZTogaHR0cHM6Ly9tYXRlcmlhbC5pby9kZXNpZ24vZW52aXJvbm1lbnQvZWxldmF0aW9uLmh0bWwjZGVmYXVsdC1lbGV2YXRpb25zXG4gICAgY29uc3QgdHlwZXM6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7XG4gICAgICAgIGNhcmQ6IDEsXG4gICAgICAgIGJ1dHRvbjogMixcbiAgICAgICAgaGVhZGVyOiA0LFxuICAgICAgICBcImJ1dHRvbi1wcmVzc2VkXCI6IDgsXG4gICAgICAgIGRpYWxvZzogMjQsXG4gICAgfVxuICAgIGNvbnN0IGNvbG9yID0gXCIjMDAwYVwiXG4gICAgY29uc3Qgc2NhbGUgPSAwLjA2MjVcbiAgICBmb3IgKGNvbnN0IHR5cGUgb2YgT2JqZWN0LmtleXModHlwZXMpKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdHlwZXNbdHlwZV0gKiBzY2FsZVxuICAgICAgICB2YXJzLnNldChcbiAgICAgICAgICAgIGAke0NTU19QUkVGSVh9JHtDU1NfU0hBRE9XfS0ke3R5cGV9YCxcbiAgICAgICAgICAgIGAwICR7dmFsdWV9cmVtICR7MiAqIHZhbHVlfXJlbSAke2NvbG9yfWBcbiAgICAgICAgKVxuICAgIH1cbn1cbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5cbmltcG9ydCBcIi4vY2hlY2tib3gtdmlldy5jc3NcIlxuXG5leHBvcnQgaW50ZXJmYWNlIENoZWNrYm94Vmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICB2YWx1ZTogYm9vbGVhblxuICAgIGxhYmVsPzogc3RyaW5nXG4gICAgZW5hYmxlZD86IGJvb2xlYW5cbiAgICB3aWRlPzogYm9vbGVhblxuICAgIHJldmVyc2U/OiBib29sZWFuXG4gICAgb25DaGFuZ2UodmFsdWU6IGJvb2xlYW4pOiB2b2lkXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENoZWNrYm94Vmlldyhwcm9wczogQ2hlY2tib3hWaWV3UHJvcHMpIHtcbiAgICBjb25zdCB7IHZhbHVlLCBsYWJlbCwgZW5hYmxlZCwgb25DaGFuZ2UgfSA9IHByb3BzXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX1cbiAgICAgICAgICAgIGRpc2FibGVkPXtlbmFibGVkID09PSBmYWxzZSA/IHRydWUgOiB1bmRlZmluZWR9XG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbkNoYW5nZSghdmFsdWUpfVxuICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBpblwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFyXCI+IDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuXCI+IDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxhYmVsXCI+e2xhYmVsfTwvZGl2PlxuICAgICAgICA8L2J1dHRvbj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IENoZWNrYm94Vmlld1Byb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCB7IGNsYXNzTmFtZSwgdmFsdWUsIGVuYWJsZWQsIHdpZGUsIHJldmVyc2UgfSA9IHByb3BzXG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IFtcImN1c3RvbVwiLCBcInVpLXZpZXctQ2hlY2tib3hWaWV3XCJdXG4gICAgaWYgKHR5cGVvZiBjbGFzc05hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKGNsYXNzTmFtZSlcbiAgICB9XG4gICAgaWYgKHZhbHVlID09PSB0cnVlKSBjbGFzc05hbWVzLnB1c2goXCJva1wiKVxuICAgIGlmIChlbmFibGVkID09PSBmYWxzZSkgY2xhc3NOYW1lcy5wdXNoKFwiZGlzYWJsZWRcIilcbiAgICBpZiAod2lkZSA9PT0gdHJ1ZSkgY2xhc3NOYW1lcy5wdXNoKFwid2lkZVwiKVxuICAgIGlmIChyZXZlcnNlID09PSB0cnVlKSBjbGFzc05hbWVzLnB1c2goXCJyZXZlcnNlXCIpXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2NoZWNrYm94LXZpZXcnXG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IEljb25GYWN0b3J5IGZyb20gXCIuLi8uLi9mYWN0b3J5L2ljb25cIlxuaW1wb3J0IFwiLi9pY29uLXZpZXcuY3NzXCJcblxuZXhwb3J0IGludGVyZmFjZSBJY29uVmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICBuYW1lOiBzdHJpbmdcbiAgICAvKiogRGVmYXVsdCB0byAxLjVyZW0uICovXG4gICAgc2l6ZT86IHN0cmluZ1xuICAgIC8qKiBJZiB0cnVlLCB0aGUgaWNvbiB3aWxsIHJvdGF0ZSBmb3JldmVyLiAqL1xuICAgIGFuaW1hdGU/OiBib29sZWFuXG4gICAgdGl0bGU/OiBzdHJpbmdcbiAgICBvbkNsaWNrPygpOiB2b2lkXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEljb25WaWV3KHByb3BzOiBJY29uVmlld1Byb3BzKSB7XG4gICAgY29uc3Qgc2l6ZSA9IHByb3BzLnNpemUgPz8gXCIxLjVyZW1cIlxuICAgIGNvbnN0IGhhbmRsZUNsaWNrID0gKCkgPT4gIHByb3BzLm9uQ2xpY2sgJiYgcHJvcHMub25DbGljaygpXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgICAgdGl0bGU9e3Byb3BzLnRpdGxlfVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX1cbiAgICAgICAgICAgIHRhYkluZGV4PXswfVxuICAgICAgICAgICAgb25DbGljaz17aGFuZGxlQ2xpY2t9XG4gICAgICAgICAgICBzdHlsZSA9IHt7XG4gICAgICAgICAgICAgICAgd2lkdGg6IHNpemUsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBzaXplXG4gICAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgICB7SWNvbkZhY3RvcnkubWFrZShwcm9wcy5uYW1lKX1cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBJY29uVmlld1Byb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gW1wiY3VzdG9tXCIsIFwidWktdmlldy1JY29uVmlld1wiXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuICAgIGlmIChwcm9wcy5hbmltYXRlID09PSB0cnVlKSBjbGFzc05hbWVzLnB1c2goXCJhbmltYXRlXCIpXG4gICAgaWYgKHByb3BzLm9uQ2xpY2spIGNsYXNzTmFtZXMucHVzaChcImNsaWNrYWJsZVwiKVxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oXCIgXCIpXG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9pY29uLXZpZXcnXG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9pbnRlZ2VyLXZpZXcnXG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFRleHRJbnB1dCBmcm9tIFwiLi4vdGV4dFwiXG5pbXBvcnQgXCIuL2ludGVnZXItdmlldy5jc3NcIlxuXG5leHBvcnQgaW50ZXJmYWNlIEZsb2F0Vmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICB2YWx1ZTogbnVtYmVyXG4gICAgbGFiZWw/OiBzdHJpbmdcbiAgICBzaXplPzogbnVtYmVyXG4gICAgd2lkdGg/OiBzdHJpbmdcbiAgICBlbmFibGVkPzogYm9vbGVhblxuICAgIHdpZGU/OiBib29sZWFuXG4gICAgbWluPzogbnVtYmVyXG4gICAgbWF4PzogbnVtYmVyXG4gICAgb25DaGFuZ2U/KHZhbHVlOiBudW1iZXIpOiB2b2lkXG4gICAgb25FbnRlclByZXNzZWQ/KHZhbHVlOiBudW1iZXIpOiB2b2lkXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZsb2F0Vmlldyhwcm9wczogRmxvYXRWaWV3UHJvcHMpIHtcbiAgICBjb25zdCB7IHZhbHVlLCBsYWJlbCwgc2l6ZSwgZW5hYmxlZCwgd2lkZSwgd2lkdGgsIG9uQ2hhbmdlLCBvbkVudGVyUHJlc3NlZCB9ID1cbiAgICAgICAgcHJvcHNcbiAgICBjb25zdCB2YWxpZGF0b3IgPSAodmFsdWU6IHN0cmluZykgPT4ge1xuICAgICAgICBSWF9JTlRFR0VSLmxhc3RJbmRleCA9IC0xXG4gICAgICAgIGlmICghUlhfSU5URUdFUi50ZXN0KHZhbHVlKSkgcmV0dXJuIGZhbHNlXG4gICAgICAgIGNvbnN0IG51bWVyaWNWYWx1ZSA9IHBhcnNlRmxvYXQodmFsdWUpXG4gICAgICAgIGlmICh0eXBlb2YgcHJvcHMubWluID09PSBcIm51bWJlclwiICYmIG51bWVyaWNWYWx1ZSA8IHByb3BzLm1pbilcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICBpZiAodHlwZW9mIHByb3BzLm1heCA9PT0gXCJudW1iZXJcIiAmJiBudW1lcmljVmFsdWUgPiBwcm9wcy5tYXgpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgICAgPFRleHRJbnB1dFxuICAgICAgICAgICAgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX1cbiAgICAgICAgICAgIHZhbHVlPXtgJHt2YWx1ZX1gfVxuICAgICAgICAgICAgbGFiZWw9e2xhYmVsfVxuICAgICAgICAgICAgc2l6ZT17c2l6ZX1cbiAgICAgICAgICAgIGVuYWJsZWQ9e2VuYWJsZWR9XG4gICAgICAgICAgICB3aWRlPXt3aWRlfVxuICAgICAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICAgICAgdmFsaWRhdG9yPXt2YWxpZGF0b3J9XG4gICAgICAgICAgICBvbkNoYW5nZT17dmFsdWUgPT4gb25DaGFuZ2UgJiYgb25DaGFuZ2UocGFyc2VGbG9hdCh2YWx1ZSkpfVxuICAgICAgICAgICAgb25FbnRlclByZXNzZWQ9e3ZhbHVlID0+XG4gICAgICAgICAgICAgICAgb25FbnRlclByZXNzZWQgJiYgb25FbnRlclByZXNzZWQocGFyc2VGbG9hdCh2YWx1ZSkpXG4gICAgICAgICAgICB9XG4gICAgICAgIC8+XG4gICAgKVxufVxuXG5jb25zdCBSWF9JTlRFR0VSID0gL15bKy1dP1swLTldKyQvZ2lcblxuZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lcyhwcm9wczogRmxvYXRWaWV3UHJvcHMpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBbXCJjdXN0b21cIiwgXCJ1aS12aWV3LWlucHV0LUZsb2F0Vmlld1wiXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL3RleHQtdmlldydcbiIsImltcG9ydCAnLi90ZXh0LXZpZXcuY3NzJ1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgaXNTdHJpbmcgfSBmcm9tICcuLi8uLi8uLi8uLi90b29scy90eXBlLWd1YXJkcydcbmltcG9ydCBDb2xvciBmcm9tICcuLi8uLi8uLi9jb2xvcidcbmltcG9ydCBMYWJlbCBmcm9tICcuLi8uLi9sYWJlbCdcblxuY29uc3QgSUQgPSAndWktdmlldy1pbnB1dC1UZXh0VmlldydcblxuZXhwb3J0IGludGVyZmFjZSBUZXh0Vmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICB2YWx1ZTogc3RyaW5nXG4gICAgbGFiZWw/OiBzdHJpbmdcbiAgICBwbGFjZWhvbGRlcj86IHN0cmluZ1xuICAgIC8qKiBJZiBkZWZpbmVkLCBzZXQgdGhlIGJhY2tncm91bmQgY29sb3IuICovXG4gICAgYmFja2dyb3VuZENvbG9yPzogc3RyaW5nXG4gICAgbmFtZT86IHN0cmluZ1xuICAgIC8qKiBJZiBkZWZpbmVkLCBhbiBlcnJvciBpcyBkaXNwbGF5ZWQgaW5zdGVhZCBvZiB0aGUgbGFiZWwuICovXG4gICAgZXJyb3I/OiBzdHJpbmdcbiAgICAvKiogTGlzdCBvZiBzdWdnZXN0aW9ucyBmb3IgYXV0b2NvbXBsZXRpb24uICovXG4gICAgc3VnZ2VzdGlvbnM/OiBzdHJpbmdbXVxuICAgIHR5cGU/OiAndGV4dCcgfCAncGFzc3dvcmQnIHwgJ2VtYWlsJyB8ICdzZWFyY2gnIHwgJ3RlbCcgfCAndXJsJyB8ICdudW1iZXInXG4gICAgc2l6ZT86IG51bWJlclxuICAgIGVuYWJsZWQ/OiBib29sZWFuXG4gICAgd2lkZT86IGJvb2xlYW5cbiAgICB3aWR0aD86IHN0cmluZ1xuICAgIC8qKiBTZXQgYXV0b2ZvY3VzLiAqL1xuICAgIGZvY3VzPzogYm9vbGVhblxuICAgIC8qKiBBIGZ1bmN0aW9uIG9yIFJlZ0V4cCB0byB2YWxpZGF0ZSB0aGUgZW50cnkuICovXG4gICAgdmFsaWRhdG9yPzogUmVnRXhwIHwgKCh2YWx1ZTogc3RyaW5nKSA9PiBib29sZWFuKVxuICAgIC8qKiBUaGlzIGlzIHRyaWdnZXJlZCBvbmx5IGlmIHRoZSBlbnRyeSBpcyB2YWxpZC4gKi9cbiAgICBvbkNoYW5nZT8odmFsdWU6IHN0cmluZyk6IHZvaWRcbiAgICAvKiogSXMgdGhlIGN1cnJlbnQgZW50cnkgdmFsaWQ/ICovXG4gICAgb25WYWxpZGF0aW9uPyhpc1ZhbGlkOiBib29sZWFuKTogdm9pZFxuICAgIC8qKiBUcmlnZ2VyZWQgd2huIHRoZSB1c2VyIHByZXNzZWQgdGhlIEVOVEVSIGtleS4gKi9cbiAgICBvbkVudGVyUHJlc3NlZD8odmFsdWU6IHN0cmluZyk6IHZvaWRcbn1cblxubGV0IGdsb2JhbElkID0gMVxuXG5mdW5jdGlvbiBuZXh0SWQoKSB7XG4gICAgcmV0dXJuIGAke0lEfS0ke2dsb2JhbElkKyt9YFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUZXh0Vmlldyhwcm9wczogVGV4dFZpZXdQcm9wcykge1xuICAgIGNvbnN0IHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdmFsdWUsXG4gICAgICAgIGxhYmVsLFxuICAgICAgICBlcnJvcixcbiAgICAgICAgc2l6ZSxcbiAgICAgICAgdHlwZSxcbiAgICAgICAgZm9jdXMsXG4gICAgICAgIHdpZHRoLFxuICAgICAgICBlbmFibGVkLFxuICAgICAgICBwbGFjZWhvbGRlcixcbiAgICAgICAgdmFsaWRhdG9yLFxuICAgICAgICBzdWdnZXN0aW9ucyxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yLFxuICAgICAgICBvbkNoYW5nZSxcbiAgICAgICAgb25WYWxpZGF0aW9uLFxuICAgICAgICBvbkVudGVyUHJlc3NlZCxcbiAgICB9ID0gcHJvcHNcbiAgICBjb25zdCByZWYgPSBSZWFjdC51c2VSZWY8bnVsbCB8IEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpXG4gICAgY29uc3QgW2lkLCBzZXRJZF0gPSBSZWFjdC51c2VTdGF0ZSgnJylcbiAgICBjb25zdCBbdGV4dCwgc2V0VGV4dF0gPSBSZWFjdC51c2VTdGF0ZSh2YWx1ZSlcbiAgICBjb25zdCBbdmFsaWQsIHNldFZhbGlkXSA9IFJlYWN0LnVzZVN0YXRlKGlzVmFsaWQodmFsdWUpKVxuICAgIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChldnQ6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld1RleHQgPSBldnQudGFyZ2V0LnZhbHVlXG4gICAgICAgIGNvbnN0IHZhbGlkaXR5ID0gaXNWYWxpZChuZXdUZXh0LCB2YWxpZGF0b3IpXG4gICAgICAgIGlmIChvblZhbGlkYXRpb24pIG9uVmFsaWRhdGlvbih2YWxpZGl0eSlcbiAgICAgICAgc2V0VmFsaWQodmFsaWRpdHkpXG4gICAgICAgIHNldFRleHQobmV3VGV4dClcbiAgICAgICAgaWYgKCF2YWxpZGl0eSB8fCB0eXBlb2Ygb25DaGFuZ2UgIT09ICdmdW5jdGlvbicpIHJldHVyblxuXG4gICAgICAgIG9uQ2hhbmdlKG5ld1RleHQpXG4gICAgfVxuICAgIGNvbnN0IGhhbmRsZUtleURvd24gPSAoZXZ0OiBSZWFjdC5LZXlib2FyZEV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgICAgIGlmICghdmFsaWQpIHJldHVyblxuICAgICAgICBpZiAodHlwZW9mIG9uRW50ZXJQcmVzc2VkICE9PSAnZnVuY3Rpb24nKSByZXR1cm5cbiAgICAgICAgaWYgKGV2dC5rZXkgPT09ICdFbnRlcicpIG9uRW50ZXJQcmVzc2VkKHRleHQpXG4gICAgfVxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiBzZXRJZChuZXh0SWQoKSksIFtdKVxuICAgIFJlYWN0LnVzZUVmZmVjdChcbiAgICAgICAgKCkgPT4gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHJlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgaWYgKGZvY3VzKSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiByZWYuY3VycmVudD8uZm9jdXMoKSlcbiAgICAgICAgICAgICAgICBlbHNlIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHJlZi5jdXJyZW50Py5ibHVyKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFtmb2N1cywgcmVmLmN1cnJlbnRdXG4gICAgKVxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldFRleHQodmFsdWUpXG4gICAgfSwgW3ZhbHVlXSlcbiAgICBjb25zdCBsaXN0SWQgPSBgJHtpZH06ZGF0YWxpc3RgXG4gICAgY29uc3Qgc3R5bGU6IFJlYWN0LkNTU1Byb3BlcnRpZXMgPSB7fVxuICAgIGlmIChpc1N0cmluZyh3aWR0aCkpIHN0eWxlLndpZHRoID0gd2lkdGhcbiAgICBpZiAoaXNTdHJpbmcoYmFja2dyb3VuZENvbG9yKSkge1xuICAgICAgICBjb25zdCBiZ0NvbG9yID0gbmV3IENvbG9yKGJhY2tncm91bmRDb2xvcilcbiAgICAgICAgY29uc3QgZmdDb2xvciA9IENvbG9yLmJlc3RDb250cmFzdChiZ0NvbG9yLCAnIzAwMCcsICcjZmZmJylcbiAgICAgICAgc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmdDb2xvci5zdHJpbmdpZnkoKVxuICAgICAgICBzdHlsZS5jb2xvciA9IGZnQ29sb3JcbiAgICAgICAgc3R5bGUuZm9udFdlaWdodCA9ICdib2xkZXInXG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzLCB2YWxpZCl9PlxuICAgICAgICAgICAgPExhYmVsXG4gICAgICAgICAgICAgICAgdmFsdWU9e2Vycm9yID8/IGxhYmVsfVxuICAgICAgICAgICAgICAgIHRhcmdldD17aWR9XG4gICAgICAgICAgICAgICAgZXJyb3I9e2Vycm9yID8gdHJ1ZSA6IGZhbHNlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIHtzdWdnZXN0aW9ucyAmJiAoXG4gICAgICAgICAgICAgICAgPGRhdGFsaXN0IGlkPXtsaXN0SWR9PlxuICAgICAgICAgICAgICAgICAgICB7c3VnZ2VzdGlvbnMubWFwKChzdWdnZXN0aW9uKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIGtleT17c3VnZ2VzdGlvbn0gdmFsdWU9e3N1Z2dlc3Rpb259IC8+XG4gICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgIDwvZGF0YWxpc3Q+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgICAgICAgIG5hbWU9e25hbWV9XG4gICAgICAgICAgICAgICAgc2l6ZT17c2l6ZX1cbiAgICAgICAgICAgICAgICBsaXN0PXtsaXN0SWR9XG4gICAgICAgICAgICAgICAgdmFsdWU9e3RleHR9XG4gICAgICAgICAgICAgICAgdHlwZT17dHlwZX1cbiAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3BsYWNlaG9sZGVyfVxuICAgICAgICAgICAgICAgIGRpc2FibGVkPXtlbmFibGVkID09PSBmYWxzZSA/IHRydWUgOiB1bmRlZmluZWR9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgICAgICBvbktleURvd25DYXB0dXJlPXtoYW5kbGVLZXlEb3dufVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxMYWJlbCBjbGFzc05hbWU9XCJoaWRlXCIgdmFsdWU9e2xhYmVsfSB0YXJnZXQ9e2lkfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IFRleHRWaWV3UHJvcHMsIHZhbGlkOiBib29sZWFuKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gWydjdXN0b20nLCBJRF1cbiAgICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKHByb3BzLmNsYXNzTmFtZSlcbiAgICB9XG4gICAgaWYgKHByb3BzLndpZGUgPT09IHRydWUpIGNsYXNzTmFtZXMucHVzaCgnd2lkZScpXG4gICAgaWYgKHZhbGlkID09PSBmYWxzZSkgY2xhc3NOYW1lcy5wdXNoKCdpbnZhbGlkJylcblxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oJyAnKVxufVxuXG4vKipcbiAqIFVzZSBhIHZhbGlkYXRvciB0byBjaGVjayB2YWx1ZSdzIHZhbGlkaXR5LlxuICovXG5mdW5jdGlvbiBpc1ZhbGlkKFxuICAgIHZhbHVlOiBzdHJpbmcsXG4gICAgdmFsaWRhdG9yPzogUmVnRXhwIHwgKCh2OiBzdHJpbmcpID0+IGJvb2xlYW4pXG4pOiBib29sZWFuIHtcbiAgICBpZiAoIXZhbGlkYXRvcikgcmV0dXJuIHRydWVcbiAgICBpZiAodHlwZW9mIHZhbGlkYXRvciA9PT0gYGZ1bmN0aW9uYCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbGlkYXRvcih2YWx1ZSlcbiAgICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgfVxuICAgIHZhbGlkYXRvci5sYXN0SW5kZXggPSAtMVxuICAgIHJldHVybiB2YWxpZGF0b3IudGVzdCh2YWx1ZSlcbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2xhYmVsLXZpZXcnXG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFwiLi9sYWJlbC12aWV3LmNzc1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgTGFiZWxWaWV3UHJvcHMge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZ1xuICAgIHRhcmdldD86IHN0cmluZ1xuICAgIHZhbHVlPzogc3RyaW5nXG4gICAgLyoqIElmIHRydWUsIGRpc3BsYXkgdGhlIGxhYmVsIGluIGVycm9yIGNvbG9yLiAqL1xuICAgIGVycm9yPzogYm9vbGVhblxuICAgIHZpc2libGU/OiBib29sZWFuXG59XG5cbi8qKlxuICogQHBhcmFtIHByb3BzLnZhbHVlIFRleHQgdG8gZGlzcGxheS4gSWYgdW5kZWZpbmVkLCB2aWV3IGlzIG51bGwuXG4gKiBAcGFyYW0gcHJvcHMudGFyZ2V0IElEIG9mIHRoZSBlbGVtZW50IHRvIGxpbmsgdGhpcyBsYWJlbCB0by5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTGFiZWxWaWV3KHByb3BzOiBMYWJlbFZpZXdQcm9wcykge1xuICAgIGNvbnN0IHsgdmFsdWUsIHRhcmdldCB9ID0gcHJvcHNcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInVuZGVmaW5lZFwiKSByZXR1cm4gbnVsbFxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9e3RhcmdldH0gY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgICAgICB7dmFsdWV9XG4gICAgICAgIDwvbGFiZWw+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBMYWJlbFZpZXdQcm9wcyk6IHN0cmluZyB7XG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IFtcImN1c3RvbVwiLCBcInVpLXZpZXctTGFiZWxWaWV3XCJdXG4gICAgaWYgKHR5cGVvZiBwcm9wcy5jbGFzc05hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKHByb3BzLmNsYXNzTmFtZSlcbiAgICB9XG4gICAgaWYgKHByb3BzLmVycm9yID09PSB0cnVlKSBjbGFzc05hbWVzLnB1c2goXCJlcnJvclwiKVxuICAgIGlmIChwcm9wcy52aXNpYmxlID09PSBmYWxzZSkgY2xhc3NOYW1lcy5wdXNoKFwiaGlkZVwiKVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiLi9zaW1wbGUtY29tYm8tdmlld1wiIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGlzU3RyaW5nIH0gZnJvbSBcIi4uLy4uLy4uL3Rvb2xzL3R5cGUtZ3VhcmRzXCJcbmltcG9ydCBMYWJlbCBmcm9tIFwiLi4vbGFiZWxcIlxuaW1wb3J0IFwiLi9zaW1wbGUtY29tYm8tdmlldy5jc3NcIlxuXG5leHBvcnQgaW50ZXJmYWNlIFNpbXBsZUNvbWJvVmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICBsYWJlbD86IHN0cmluZ1xuICAgIHdpZGU/OiBib29sZWFuXG4gICAgdmFsdWU6IHN0cmluZ1xuICAgIG9wdGlvbnM6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSB9XG4gICAgb25DaGFuZ2UodGhpczogdm9pZCwgdmFsdWU6IHN0cmluZyk6IHZvaWRcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2ltcGxlQ29tYm9WaWV3KHByb3BzOiBTaW1wbGVDb21ib1ZpZXdQcm9wcykge1xuICAgIGNvbnN0IHsgbGFiZWwsIG9wdGlvbnMsIG9uQ2hhbmdlIH0gPSBwcm9wc1xuICAgIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gUmVhY3QudXNlU3RhdGUocHJvcHMudmFsdWUpXG4gICAgY29uc3QgaGFuZGxlQ2hhbmdlID0gKGV2dDogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTFNlbGVjdEVsZW1lbnQ+KSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gZXZ0LnRhcmdldC52YWx1ZVxuICAgICAgICBzZXRWYWx1ZShuZXdWYWx1ZSlcbiAgICAgICAgb25DaGFuZ2UobmV3VmFsdWUpXG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgICAgICA8TGFiZWwgdmFsdWU9e2xhYmVsfSAvPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgdGhlbWUtc2hhZG93LWJ1dHRvblwiPlxuICAgICAgICAgICAgICAgIDxzZWxlY3RcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGhlbWUtY29sb3ItaW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7T2JqZWN0LmtleXMob3B0aW9ucykubWFwKGtleSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVuZGVyT3B0aW9ucyhrZXksIG9wdGlvbnNba2V5XSlcbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRyb3Bkb3duLWJ1dHRvbiB0aGVtZS1jb2xvci1wcmltYXJ5XCI+4pa8PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxMYWJlbCB2YWx1ZT17bGFiZWx9IHZpc2libGU9e2ZhbHNlfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IFNpbXBsZUNvbWJvVmlld1Byb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gW1wiY3VzdG9tXCIsIFwidWktdmlldy1TaW1wbGVDb21ib1ZpZXdcIl1cbiAgICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cbiAgICBpZiAocHJvcHMud2lkZSA9PT0gdHJ1ZSkgY2xhc3NOYW1lcy5wdXNoKFwid2lkZVwiKVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cblxuZnVuY3Rpb24gcmVuZGVyT3B0aW9ucyhcbiAgICBrZXk6IHN0cmluZyxcbiAgICB2YWx1ZTogc3RyaW5nIHwgeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfVxuKTogYW55IHtcbiAgICBpZiAoaXNTdHJpbmcodmFsdWUpKVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPG9wdGlvbiBrZXk9e2tleX0gdmFsdWU9e2tleX0+XG4gICAgICAgICAgICAgICAge3ZhbHVlfVxuICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgIClcbiAgICByZXR1cm4gKFxuICAgICAgICA8b3B0Z3JvdXAga2V5PXtgZ3JwLyR7a2V5fWB9IGxhYmVsPXtrZXl9PlxuICAgICAgICAgICAge09iamVjdC5rZXlzKHZhbHVlKS5tYXAoayA9PiAoXG4gICAgICAgICAgICAgICAgPG9wdGlvbiBrZXk9e2t9IHZhbHVlPXtrfT5cbiAgICAgICAgICAgICAgICAgICAge3ZhbHVlW2tdfVxuICAgICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgIDwvb3B0Z3JvdXA+XG4gICAgKVxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCIuL3NsaWRlclwiIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBMYWJlbCBmcm9tIFwiQC91aS92aWV3L2xhYmVsXCJcbmltcG9ydCBcIi4vc2xpZGVyLmNzc1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgU2xpZGVyVmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICBsYWJlbD86IHN0cmluZ1xuICAgIHdpZGU/OiBib29sZWFuXG4gICAgLyoqIE1pbmltYWwgdmFsdWUuIERlZmF1bHQgdG8gMCAqL1xuICAgIG1pbj86IG51bWJlclxuICAgIC8qKiBNYXhpbWFsIHZhbHVlLiBEZWZhdWx0IHRvIDEwMCAqL1xuICAgIG1heD86IG51bWJlclxuICAgIHZhbHVlOiBudW1iZXJcbiAgICAvKiogTWluaW1hbCBkZWx0YSBiZXR3ZWVuIHR3byBkaWZmZXJlbnQgdmFsdWVzICovXG4gICAgc3RlcHM/OiBudW1iZXJcbiAgICBvbkNoYW5nZSh0aGlzOiB2b2lkLCB2YWx1ZTogbnVtYmVyKTogdm9pZFxufVxuXG5jb25zdCBERUZBVUxUX01JTl9WQUxVRSA9IDBcbmNvbnN0IERFRkFVTFRfTUFYX1ZBTFVFID0gMTAwXG5jb25zdCBNSU5fU1RFUCA9IDFlLTZcblxuLyoqXG4gKiBAc2VlIGh0dHBzOi8vbWF0ZXJpYWwuaW8vY29tcG9uZW50cy9zbGlkZXJzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNsaWRlclZpZXcocHJvcHM6IFNsaWRlclZpZXdQcm9wcykge1xuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHByb3BzXG4gICAgY29uc3QgbWluID0gcHJvcHMubWluID8/IERFRkFVTFRfTUlOX1ZBTFVFXG4gICAgY29uc3QgbWF4ID0gcHJvcHMubWF4ID8/IERFRkFVTFRfTUFYX1ZBTFVFXG4gICAgY29uc3Qgc3RlcHMgPSBNYXRoLm1heChNSU5fU1RFUCwgcHJvcHMuc3RlcHMgPz8gMSlcbiAgICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IFJlYWN0LnVzZVN0YXRlKGNsYW1wKHByb3BzLnZhbHVlLCBtaW4sIG1heCkpXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHNldFZhbHVlKGNsYW1wKHByb3BzLnZhbHVlLCBtaW4sIG1heCkpLCBbcHJvcHMudmFsdWVdKVxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIG9uQ2hhbmdlKHZhbHVlKVxuICAgIH0sIFt2YWx1ZV0pXG4gICAgY29uc3QgcmVmVHJhY2sgPSBSZWFjdC51c2VSZWY8bnVsbCB8IEhUTUxJbnB1dEVsZW1lbnQ+KG51bGwpXG4gICAgdXNlS2V5Ym9hcmRIYW5kbGVyKHJlZlRyYWNrLCB2YWx1ZSwgbWluLCBtYXgsIHN0ZXBzLCBzZXRWYWx1ZSwgb25DaGFuZ2UpXG4gICAgaWYgKG1pbiA+PSBtYXgpIHJldHVybiA8RXJyb3IgbWluPXttaW59IG1heD17bWF4fSAvPlxuICAgIGNvbnN0IFBFUkNFTlQgPSAxMDBcbiAgICBjb25zdCBwZXJjZW50ID0gYCR7KFBFUkNFTlQgKiAodmFsdWUgLSBtaW4pKSAvIChtYXggLSBtaW4pfSVgXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2dldENsYXNzTmFtZXMocHJvcHMpfSB0YWJJbmRleD17MH0+XG4gICAgICAgICAgICA8TGFiZWwgdmFsdWU9e3Byb3BzLmxhYmVsfSAvPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cInJhbmdlXCJcbiAgICAgICAgICAgICAgICByZWY9e3JlZlRyYWNrfVxuICAgICAgICAgICAgICAgIG1pbj17bWlufVxuICAgICAgICAgICAgICAgIG1heD17bWF4fVxuICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGV2dCkgPT4gc2V0VmFsdWUocGFyc2VGbG9hdChldnQudGFyZ2V0LnZhbHVlKSl9XG4gICAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbi8qKlxuICogV2l0aCBLZXlib2FyZCwgdXNpbmcgVXAgYW5kIEJvdHRvbSBhcnJvdyB3aWxsIHBlcmZvcm0gYmlnIHN0ZXBzLlxuICogUHJlc3NpbmcgVXAgYXJyb3cgb25jZSBpcyB0aGUgc2FtZSBhcyBwcmVzc2luZyBMZWZ0IGFycm93IEJJR19TVEVQIHRpbWVzLlxuICovXG5jb25zdCBCSUdfU1RFUCA9IDEwXG5cbmZ1bmN0aW9uIHVzZUtleWJvYXJkSGFuZGxlcihcbiAgICByZWY6IFJlYWN0Lk11dGFibGVSZWZPYmplY3Q8SFRNTERpdkVsZW1lbnQgfCBudWxsPixcbiAgICB2YWx1ZTogbnVtYmVyLFxuICAgIG1pbjogbnVtYmVyLFxuICAgIG1heDogbnVtYmVyLFxuICAgIHN0ZXBzOiBudW1iZXIsXG4gICAgc2V0VmFsdWU6ICh0aGlzOiB2b2lkLCB2YWw6IG51bWJlcikgPT4gdm9pZCxcbiAgICBvbkNoYW5nZTogKHRoaXM6IHZvaWQsIHZhbDogbnVtYmVyKSA9PiB2b2lkXG4pIHtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCBkaXYgPSByZWYuY3VycmVudFxuICAgICAgICBpZiAoIWRpdikgcmV0dXJuIHVuZGVmaW5lZFxuXG4gICAgICAgIGNvbnN0IGhhbmRsZUtleURvd24gPSBtYWtlS2V5RG93bkhhbmRsZXIoXG4gICAgICAgICAgICBzdGVwcyxcbiAgICAgICAgICAgIG1pbixcbiAgICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgICAgbWF4LFxuICAgICAgICAgICAgc2V0VmFsdWUsXG4gICAgICAgICAgICBvbkNoYW5nZVxuICAgICAgICApXG4gICAgICAgIGRpdi5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBoYW5kbGVLZXlEb3duLCB0cnVlKVxuICAgICAgICByZXR1cm4gKCkgPT4gZGl2LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUtleURvd24sIHRydWUpXG4gICAgfSwgW3JlZiwgdmFsdWUsIG1pbiwgbWF4LCBzdGVwc10pXG59XG5cbmZ1bmN0aW9uIG1ha2VLZXlEb3duSGFuZGxlcihcbiAgICBzdGVwczogbnVtYmVyLFxuICAgIG1pbjogbnVtYmVyLFxuICAgIHZhbHVlOiBudW1iZXIsXG4gICAgbWF4OiBudW1iZXIsXG4gICAgc2V0VmFsdWU6ICh0aGlzOiB2b2lkLCB2YWw6IG51bWJlcikgPT4gdm9pZCxcbiAgICBvbkNoYW5nZTogKHRoaXM6IHZvaWQsIHZhbDogbnVtYmVyKSA9PiB2b2lkXG4pIHtcbiAgICByZXR1cm4gKGV2dDogS2V5Ym9hcmRFdmVudCkgPT4ge1xuICAgICAgICBsZXQgZGVsdGEgPSAwXG4gICAgICAgIHN3aXRjaCAoZXZ0LmtleSkge1xuICAgICAgICAgICAgY2FzZSBcIkFycm93TGVmdFwiOlxuICAgICAgICAgICAgICAgIGRlbHRhID0gLXN0ZXBzXG4gICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgIGNhc2UgXCJBcnJvd1JpZ2h0XCI6XG4gICAgICAgICAgICAgICAgZGVsdGEgPSBzdGVwc1xuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICBjYXNlIFwiQXJyb3dVcFwiOlxuICAgICAgICAgICAgICAgIGRlbHRhID0gc3RlcHMgKiBCSUdfU1RFUFxuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICBjYXNlIFwiQXJyb3dEb3duXCI6XG4gICAgICAgICAgICAgICAgZGVsdGEgPSAtc3RlcHMgKiBCSUdfU1RFUFxuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICBjYXNlIFwiSG9tZVwiOlxuICAgICAgICAgICAgICAgIGRlbHRhID0gbWluIC0gdmFsdWVcbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgY2FzZSBcIkVuZFwiOlxuICAgICAgICAgICAgICAgIGRlbHRhID0gbWF4IC0gdmFsdWVcbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgY2FzZSBcIi5cIjpcbiAgICAgICAgICAgICAgICBkZWx0YSA9IDAuNSAqIChtaW4gKyBtYXgpIC0gdmFsdWVcbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGNsYW1wKHZhbHVlICsgZGVsdGEsIG1pbiwgbWF4KVxuICAgICAgICBpZiAobmV3VmFsdWUgPT09IHZhbHVlKSByZXR1cm5cblxuICAgICAgICBzZXRWYWx1ZShuZXdWYWx1ZSlcbiAgICAgICAgb25DaGFuZ2UobmV3VmFsdWUpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBTbGlkZXJWaWV3UHJvcHMpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBbXCJjdXN0b21cIiwgXCJ1aS12aWV3LVNsaWRlclZpZXdcIl1cbiAgICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cbiAgICBpZiAocHJvcHMud2lkZSA9PT0gdHJ1ZSkgY2xhc3NOYW1lcy5wdXNoKFwid2lkZVwiKVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cblxuZnVuY3Rpb24gRXJyb3IocHJvcHM6IHsgbWluOiBudW1iZXI7IG1heDogbnVtYmVyIH0pIHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgRVJST1IhIG1pbiA9IHtwcm9wcy5taW59IHtcIiA+IFwifSBtYXggPSB7cHJvcHMubWF4fVxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGNsYW1wKHZhbHVlOiBudW1iZXIsIG1pbiA9IDAsIG1heCA9IDEpOiBudW1iZXIge1xuICAgIHJldHVybiBNYXRoLm1heChNYXRoLm1pbih2YWx1ZSwgbWF4KSwgbWluKVxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vdGFic3RyaXAtdmlldydcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgXCIuL3RhYnN0cmlwLXZpZXcuY3NzXCJcblxuZXhwb3J0IGludGVyZmFjZSBUYWJzdHJpcFZpZXdQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgdGhlbWU/OiBcInNjcmVlblwiIHwgXCJmcmFtZVwiIHwgXCJzZWN0aW9uXCJcbiAgICAvKiogTGFiZWxzIG9mIGVhY2ggaGVhZGVyIHRhYi4gKi9cbiAgICBoZWFkZXJzOiBzdHJpbmdbXVxuICAgIGNoaWxkcmVuOiBKU1guRWxlbWVudFtdXG4gICAgdmFsdWU/OiBudW1iZXJcbiAgICBvbkNoYW5nZT8odmFsdWU6IG51bWJlcik6IHZvaWRcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVGFic3RyaXBWaWV3KHByb3BzOiBUYWJzdHJpcFZpZXdQcm9wcykge1xuICAgIGNvbnN0IHsgaGVhZGVycywgY2hpbGRyZW4sIHZhbHVlLCBvbkNoYW5nZSB9ID0gcHJvcHNcbiAgICBjb25zdCBbc2VsZWN0aW9uLCBzZXRTZWxlY3Rpb25dID0gUmVhY3QudXNlU3RhdGUoXG4gICAgICAgICh2YWx1ZSA/PyAwKSAlIGhlYWRlcnMubGVuZ3RoXG4gICAgKVxuICAgIGNvbnN0IGhhbmRsZUNsaWNrID0gKGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgc2V0U2VsZWN0aW9uKGluZGV4KVxuICAgICAgICBpZiAob25DaGFuZ2UpIG9uQ2hhbmdlKGluZGV4KVxuICAgIH1cbiAgICBjb25zdCBjaGlsZCA9IHByb3BzLmNoaWxkcmVuW3NlbGVjdGlvbl1cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9PlxuICAgICAgICAgICAgPGhlYWRlcj5cbiAgICAgICAgICAgICAgICB7aGVhZGVycy5tYXAoKGl0ZW0sIGlkeCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2lkeH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17c2VsZWN0aW9uID09PSBpZHggPyBcInNlbGVjdGVkXCIgOiBcIlwifVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlQ2xpY2soaWR4KX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge2l0ZW19XG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2VcIj48L2Rpdj5cbiAgICAgICAgICAgIDwvaGVhZGVyPlxuICAgICAgICAgICAgPG1haW4+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wic2VsZWN0ZWRcIn0+e2NoaWxkfTwvZGl2PlxuICAgICAgICAgICAgPC9tYWluPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IFRhYnN0cmlwVmlld1Byb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gW1wiY3VzdG9tXCIsIFwidWktdmlldy1UYWJzdHJpcFZpZXdcIl1cbiAgICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cblxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oXCIgXCIpXG59XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IEVkaXRvciBmcm9tIFwicmVhY3Qtc2ltcGxlLWNvZGUtZWRpdG9yXCJcbmltcG9ydCBQcmlzbSBmcm9tIFwicHJpc21qc1wiXG5pbXBvcnQgeyBnZXRHcmFtbWFyRm9yTGFuZ3VhZ2UgfSBmcm9tIFwiQC90b29scy9ncmFtbWFyL2dyYW1tYXJcIlxuaW1wb3J0IFwiLi9jb2RlLWVkaXRvci12aWV3LmNzc1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29kZUVkaXRvclZpZXdQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgdmFsdWU6IHN0cmluZ1xuICAgIG9uQ2hhbmdlKHZhbHVlOiBzdHJpbmcpOiB2b2lkXG4gICAgbGFuZ3VhZ2U6IHN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb2RlRWRpdG9yVmlldyhwcm9wczogQ29kZUVkaXRvclZpZXdQcm9wcykge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgICAgICA8RWRpdG9yXG4gICAgICAgICAgICAgICAgdmFsdWU9e3Byb3BzLnZhbHVlfVxuICAgICAgICAgICAgICAgIG9uVmFsdWVDaGFuZ2U9e3Byb3BzLm9uQ2hhbmdlfVxuICAgICAgICAgICAgICAgIGhpZ2hsaWdodD17KGNvZGUpID0+XG4gICAgICAgICAgICAgICAgICAgIFByaXNtLmhpZ2hsaWdodChcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXRHcmFtbWFyRm9yTGFuZ3VhZ2UocHJvcHMubGFuZ3VhZ2UpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMubGFuZ3VhZ2VcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lcyhwcm9wczogQ29kZUVkaXRvclZpZXdQcm9wcyk6IHN0cmluZyB7XG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IFtcImN1c3RvbVwiLCBcInZpZXctQ29kZUVkaXRvclZpZXdcIl1cbiAgICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cblxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oXCIgXCIpXG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9jb2RlLWVkaXRvci12aWV3J1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBnbHNsIGZyb20gXCJoaWdobGlnaHQuanMvbGliL2xhbmd1YWdlcy9nbHNsXCJcbmltcG9ydCBIaWdobGlnaHQgZnJvbSBcImhpZ2hsaWdodC5qcy9saWIvY29yZVwiXG5pbXBvcnQgaHRtbCBmcm9tIFwiaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMveG1sXCJcbmltcG9ydCBJY29uIGZyb20gXCJAL3VpL3ZpZXcvaWNvblwiXG5pbXBvcnQgdHlwZXNjcmlwdCBmcm9tIFwiaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdHlwZXNjcmlwdFwiXG5pbXBvcnQgeyBjb3B5VG9DbGlwYm9hcmQgfSBmcm9tIFwiLi4vLi4vdG9vbHMvY29weS10by1jbGlwYm9hcmRcIlxuaW1wb3J0IHsgTW9kdWxlS2luZCwgdHJhbnNwaWxlTW9kdWxlIH0gZnJvbSBcInR5cGVzY3JpcHRcIlxuaW1wb3J0IFwiLi9jb2RlLXZpZXcuY3NzXCJcbmltcG9ydCBcImhpZ2hsaWdodC5qcy9zdHlsZXMvZ2l0aHViLmNzc1wiXG5cbkhpZ2hsaWdodC5yZWdpc3Rlckxhbmd1YWdlKFwidHlwZXNjcmlwdFwiLCB0eXBlc2NyaXB0KVxuSGlnaGxpZ2h0LnJlZ2lzdGVyTGFuZ3VhZ2UoXCJnbHNsXCIsIGdsc2wpXG5IaWdobGlnaHQucmVnaXN0ZXJMYW5ndWFnZShcImh0bWxcIiwgaHRtbClcblxuZXhwb3J0IGludGVyZmFjZSBDb2RlVmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICBsYWJlbD86IHN0cmluZ1xuICAgIGV4cGFuZGVkPzogYm9vbGVhblxuICAgIC8qKlxuICAgICAqIFRoZXJlIGFyZSBzcGVjaWFsIGNvbW1lbnRzIHRoYXQgZGVmaW5lIHJlZ2lvbnMgaW4gdGhlIGNvZGUuXG4gICAgICogWW91IGNhbiB1c2UgYFwiLy8jcmVnaW9uIG15LXJlZ2lvblwiYCBhbmQgYFwiLy8jZW5kcmVnaW9uIG15LXJlZ2lvblwiYFxuICAgICAqIG9uIGEgZnVsbCBsaW5lIHRvIGRlZmluZSBhIHJlZ2lvbi5cbiAgICAgKlxuICAgICAqIFN1Y2ggbGluZXMgd2lsbCBiZSByZW1vdmVkIGZyb20gdGhlIGRpc3BsYXllZCBjb2RlLlxuICAgICAqIEFuZCBpdCBgcmVnaW9uYCBwcm9wZXJ0eSBpcyBkZWZpbmVkLCBvbmx5IGNvZGUgb2Ygc3VjaCByZWdpb25cbiAgICAgKiB3aWxsIGJlIGRpc3BsYXllZC5cbiAgICAgKi9cbiAgICByZWdpb24/OiBzdHJpbmdcbiAgICB2YWx1ZTogc3RyaW5nXG4gICAgbGFuZzogXCJ0eXBlc2NyaXB0XCIgfCBcImdsc2xcIiB8IFwiaHRtbFwiXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvZGVWaWV3KHByb3BzOiBDb2RlVmlld1Byb3BzKSB7XG4gICAgY29uc3QgW2V4cGFuZGVkLCBzZXRFeHBhbmRlZF0gPSBSZWFjdC51c2VTdGF0ZShwcm9wcy5leHBhbmRlZCA/PyB0cnVlKVxuICAgIGNvbnN0IFt0cmFuc3BpbGUsIHNldFRyYW5zcGlsZV0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSlcbiAgICBjb25zdCB0b2dnbGUgPSAoKSA9PiBzZXRFeHBhbmRlZCghZXhwYW5kZWQpXG4gICAgY29uc3QgcmVmID0gUmVhY3QudXNlUmVmPG51bGwgfCBIVE1MRWxlbWVudD4obnVsbClcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoIXJlZi5jdXJyZW50KSByZXR1cm5cblxuICAgICAgICBIaWdobGlnaHQuaGlnaGxpZ2h0RWxlbWVudChyZWYuY3VycmVudClcbiAgICB9LCBbcHJvcHMudmFsdWUsIHJlZiwgdHJhbnNwaWxlXSlcbiAgICBjb25zdCBjb2RlID0gdHJhbnNwaWxlSWZOZWVkZWQoXG4gICAgICAgIGV4dHJhY3RSZWdpb24ocHJvcHMudmFsdWUsIHByb3BzLnJlZ2lvbiksXG4gICAgICAgIHRyYW5zcGlsZSxcbiAgICAgICAgcHJvcHMubGFuZ1xuICAgIClcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcywgZXhwYW5kZWQpfT5cbiAgICAgICAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPVwidGhlbWUtY29sb3ItcHJpbWFyeS1kYXJrXCI+XG4gICAgICAgICAgICAgICAgPEljb25cbiAgICAgICAgICAgICAgICAgICAgbmFtZT17YGNoZXZyb24tJHtleHBhbmRlZCA/IFwiZG93blwiIDogXCJyaWdodFwifWB9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RvZ2dsZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGFiZWxcIiBvbkNsaWNrPXt0b2dnbGV9PlxuICAgICAgICAgICAgICAgICAgICB7cHJvcHMubGFiZWwgPz8gXCJcIn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8SWNvblxuICAgICAgICAgICAgICAgICAgICBuYW1lPXt0cmFuc3BpbGUgPyBcInRzXCIgOiBcImpzXCJ9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFRyYW5zcGlsZSghdHJhbnNwaWxlKX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3t3aWR0aDogXCIxZW1cIn19PjwvZGl2PlxuICAgICAgICAgICAgICAgIDxJY29uIG5hbWU9XCJjb3B5XCIgb25DbGljaz17KCkgPT4gY29weVRvQ2xpcGJvYXJkKGNvZGUpfSAvPlxuICAgICAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgICAgICA8cHJlPlxuICAgICAgICAgICAgICAgIDxjb2RlIHJlZj17cmVmfSBjbGFzc05hbWU9e2BsYW5ndWFnZS0ke3Byb3BzLmxhbmd9YH0+XG4gICAgICAgICAgICAgICAgICAgIHtjb2RlfVxuICAgICAgICAgICAgICAgICAgICA8L2NvZGU+XG4gICAgICAgICAgICA8L3ByZT5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBDb2RlVmlld1Byb3BzLCBleHBhbmRlZDogYm9vbGVhbik6IHN0cmluZyB7XG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IFtcImN1c3RvbVwiLCBcInZpZXctQ29kZVZpZXdcIiwgXCJ0aGVtZS1zaGFkb3ctYnV0dG9uXCJdXG4gICAgaWYgKHR5cGVvZiBwcm9wcy5jbGFzc05hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKHByb3BzLmNsYXNzTmFtZSlcbiAgICB9XG4gICAgaWYgKGV4cGFuZGVkKSBjbGFzc05hbWVzLnB1c2goXCJleHBhbmRlZFwiKVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cblxuY29uc3QgU1RBUlQgPSBcIi8vI3JlZ2lvblwiXG5jb25zdCBFTkQgPSBcIi8vI2VuZHJlZ2lvblwiXG5cbmZ1bmN0aW9uIGV4dHJhY3RSZWdpb24odmFsdWU6IHN0cmluZywgcmVnaW9uOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcge1xuICAgIGNvbnN0IGxpbmVzOiBBcnJheTx7XG4gICAgICAgIGxpbmU6IHN0cmluZ1xuICAgICAgICByZWdpb25zOiBzdHJpbmdbXVxuICAgIH0+ID0gW11cbiAgICBsZXQgcmVnaW9uczogc3RyaW5nW10gPSBbXVxuICAgIGZvciAoY29uc3QgbGluZSBvZiB2YWx1ZS5zcGxpdChcIlxcblwiKSkge1xuICAgICAgICBpZiAobGluZS5zdGFydHNXaXRoKFNUQVJUKSkge1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGxpbmUuc3Vic3RyaW5nKFNUQVJULmxlbmd0aCkudHJpbSgpXG4gICAgICAgICAgICBpZiAoIXJlZ2lvbnMuaW5jbHVkZXMobmFtZSkpIHJlZ2lvbnMucHVzaChuYW1lKVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuICAgICAgICBpZiAobGluZS5zdGFydHNXaXRoKEVORCkpIHtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBsaW5lLnN1YnN0cmluZyhFTkQubGVuZ3RoKS50cmltKClcbiAgICAgICAgICAgIHJlZ2lvbnMgPSByZWdpb25zLmZpbHRlcigoaXRlbSkgPT4gaXRlbSAhPSBuYW1lKVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuICAgICAgICBsaW5lcy5wdXNoKHtcbiAgICAgICAgICAgIGxpbmUsXG4gICAgICAgICAgICByZWdpb25zOiBbLi4ucmVnaW9uc10sXG4gICAgICAgIH0pXG4gICAgfVxuICAgIGlmICghcmVnaW9uKSByZXR1cm4gbGluZXMubWFwKChpdGVtKSA9PiBpdGVtLmxpbmUpLmpvaW4oXCJcXG5cIilcbiAgICByZXR1cm4gbGluZXNcbiAgICAgICAgLmZpbHRlcigoaXRlbSkgPT4gaXRlbS5yZWdpb25zLmluY2x1ZGVzKHJlZ2lvbikpXG4gICAgICAgIC5tYXAoKGl0ZW0pID0+IGl0ZW0ubGluZSlcbiAgICAgICAgLmpvaW4oXCJcXG5cIilcbn1cblxuZnVuY3Rpb24gdHJhbnNwaWxlSWZOZWVkZWQoXG4gICAgY29kZTogc3RyaW5nLFxuICAgIHRyYW5zcGlsZTogYm9vbGVhbixcbiAgICBsYW5nOiBzdHJpbmdcbik6IHN0cmluZyB7XG4gICAgaWYgKCF0cmFuc3BpbGUgfHwgbGFuZyAhPT0gXCJ0eXBlc2NyaXB0XCIpIHJldHVybiBjb2RlXG5cbiAgICByZXR1cm4gdHJhbnNwaWxlTW9kdWxlKGNvZGUsIHtcbiAgICAgICAgY29tcGlsZXJPcHRpb25zOiB7XG4gICAgICAgICAgICBtb2R1bGU6IE1vZHVsZUtpbmQuRVMyMDIwLFxuICAgICAgICAgICAgZXhwZXJpbWVudGFsRGVjb3JhdG9yczogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICB9KS5vdXRwdXRUZXh0XG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9jb2RlLXZpZXcnXG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFwiLi9mYWxsYmFjay12aWV3LmNzc1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgRmFsbGJhY2tWaWV3UHJvcHMge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBGYWxsYmFja1ZpZXcocHJvcHM6IEZhbGxiYWNrVmlld1Byb3BzKSB7XG4gICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgIENoYXJnZW1lbnQgZW4gIGNvdXJzLi4uXG4gICAgPC9kaXY+XG59XG5cblxuZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lcyhwcm9wczogRmFsbGJhY2tWaWV3UHJvcHMpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBbJ2N1c3RvbScsICd2aWV3LUZhbGxiYWNrVmlldyddXG4gICAgaWYgKHR5cGVvZiBwcm9wcy5jbGFzc05hbWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbignICcpXG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9mYWxsYmFjay12aWV3J1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBDb2RlIGZyb20gXCJAL3ZpZXcvY29kZVwiXG5pbXBvcnQgXCIuL2NvZGUtdmlldy5jc3NcIlxuXG5leHBvcnQgaW50ZXJmYWNlIENvZGVWaWV3UHJvcHMge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZ1xuICAgIGxhYmVsPzogc3RyaW5nXG4gICAgcmVnaW9uPzogc3RyaW5nXG4gICAgdHM/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9XG4gICAgZ2xzbD86IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH1cbiAgICBjaGlsZHJlbjogc3RyaW5nXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENvZGVWaWV3KHByb3BzOiBDb2RlVmlld1Byb3BzKSB7XG4gICAgY29uc3QgW2NvbnRlbnQsIGxhbmddID0gZ2V0Q29udGVudEFuZExhbmcocHJvcHMpXG4gICAgaWYgKCFsYW5nKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRoZW1lLWNvbG9yLWVycm9yXCI+XG4gICAgICAgICAgICAgICAgRXJyb3IhXG4gICAgICAgICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgICAgICAgQ29kZSBcIntjb250ZW50fVwiIGRvZXMgbm90IGV4aXN0LlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgICAgPENvZGVcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9XG4gICAgICAgICAgICBsYW5nPXtsYW5nfVxuICAgICAgICAgICAgcmVnaW9uPXtwcm9wcy5yZWdpb259XG4gICAgICAgICAgICBsYWJlbD17cHJvcHMubGFiZWx9XG4gICAgICAgICAgICB2YWx1ZT17Y29udGVudH1cbiAgICAgICAgLz5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IENvZGVWaWV3UHJvcHMpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBbXCJjdXN0b21cIiwgXCJ2aWV3LW1hcmtkb3duLUNvZGVWaWV3XCJdXG4gICAgaWYgKHR5cGVvZiBwcm9wcy5jbGFzc05hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY2xhc3NOYW1lcy5wdXNoKHByb3BzLmNsYXNzTmFtZSlcbiAgICB9XG5cbiAgICByZXR1cm4gY2xhc3NOYW1lcy5qb2luKFwiIFwiKVxufVxuXG5mdW5jdGlvbiBnZXRDb250ZW50QW5kTGFuZyhcbiAgICBwcm9wczogQ29kZVZpZXdQcm9wc1xuKTogW3N0cmluZywgbnVsbCB8IFwidHlwZXNjcmlwdFwiIHwgXCJnbHNsXCJdIHtcbiAgICBjb25zdCBjb250ZW50ID0gcHJvcHMuY2hpbGRyZW4udHJpbSgpXG4gICAgY29uc3QgdHMgPSAocHJvcHMudHMgPz8ge30pW2NvbnRlbnRdXG4gICAgaWYgKHRzKSByZXR1cm4gW3RzLCBcInR5cGVzY3JpcHRcIl1cbiAgICBjb25zdCBnbHNsID0gKHByb3BzLmdsc2wgPz8ge30pW2NvbnRlbnRdXG4gICAgaWYgKGdsc2wpIHJldHVybiBbZ2xzbCwgXCJnbHNsXCJdXG4gICAgcmV0dXJuIFtjb250ZW50LCBudWxsXVxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vY29kZS12aWV3J1xuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vbWFya2Rvd24tdmlldydcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgQ29kZSBmcm9tIFwiLi9jb2RlXCJcbmltcG9ydCBNYXJrZG93blRvSnN4IGZyb20gXCJtYXJrZG93bi10by1qc3hcIlxuaW1wb3J0IFwiLi9tYXJrZG93bi12aWV3LmNzc1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgTWFya2Rvd25WaWV3UHJvcHMge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZ1xuICAgIGNoaWxkcmVuOiBzdHJpbmcgJiBSZWFjdC5SZWFjdE5vZGVcbiAgICByZWdpb24/OiBzdHJpbmdcbiAgICB0cz86IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9XG4gICAgZ2xzbD86IHtba2V5OiBzdHJpbmddOiBzdHJpbmd9XG59XG5cbmludGVyZmFjZSBJbmxpbmVDb2RlUHJvcHMge1xuICAgIGxhYmVsPzogc3RyaW5nXG4gICAgcmVnaW9uPzogc3RyaW5nXG4gICAgY2hpbGRyZW46IHN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNYXJrZG93blZpZXcocHJvcHM6IE1hcmtkb3duVmlld1Byb3BzKSB7XG4gICAgY29uc3QgSW5saW5lQ29kZSA9IChpbmxpbmVwcm9wczogSW5saW5lQ29kZVByb3BzKSA9PiB7XG4gICAgICAgIHJldHVybiA8Q29kZVxuICAgICAgICAgICAgY2hpbGRyZW49e2Ake2lubGluZXByb3BzLmNoaWxkcmVufWB9XG4gICAgICAgICAgICBsYWJlbD17aW5saW5lcHJvcHMubGFiZWx9XG4gICAgICAgICAgICByZWdpb249e2lubGluZXByb3BzLnJlZ2lvbn1cbiAgICAgICAgICAgIGdsc2w9e3Byb3BzLmdsc2x9XG4gICAgICAgICAgICB0cz17cHJvcHMudHN9XG4gICAgICAgIC8+XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgICAgICA8TWFya2Rvd25Ub0pzeFxuICAgICAgICAgICAgICAgIG9wdGlvbnM9e3tcbiAgICAgICAgICAgICAgICAgICAgb3ZlcnJpZGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBDb2RlOiBJbmxpbmVDb2RlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgPntwcm9wcy5jaGlsZHJlbn08L01hcmtkb3duVG9Kc3g+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lcyhwcm9wczogTWFya2Rvd25WaWV3UHJvcHMpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBbXCJjdXN0b21cIiwgXCJ2aWV3LU1hcmtkb3duVmlld1wiXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL3NjZW5lLXZpZXcnXG5leHBvcnQgKiBmcm9tICcuL3NjZW5lLXZpZXcnXG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IENoZWNrYm94IGZyb20gXCJAL3VpL3ZpZXcvY2hlY2tib3hcIlxuaW1wb3J0IFwiLi9zY2VuZS12aWV3LmNzc1wiXG5cbmV4cG9ydCB0eXBlIFBhaW50RnVuYyA9ICh0aW1lOiBudW1iZXIpID0+IHZvaWRcblxuZXhwb3J0IGludGVyZmFjZSBTY2VuZVZpZXdQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgcGxheT86IGJvb2xlYW5cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgd2hlbiB0aGUgY2FudmFzIGlzIHJlYWR5IGFuZCBXZWJHTDIgY29udGV4dCBhdmFpbGFibGUuXG4gICAgICogQHJldHVybnMgQSBmdW5jdGlvbiB0byBjYWxsIGV2ZXJ5dGltZSB3ZSBuZWVkIHRvIHJlcGFpbnQgdGhlIGNhbnZhcy5cbiAgICAgKi9cbiAgICBvbkluaXQoZ2w6IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQpOiBQcm9taXNlPFBhaW50RnVuYz5cbiAgICAvLyBvbkRlc3Ryb3koKTogdm9pZFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTY2VuZVZpZXcocHJvcHM6IFNjZW5lVmlld1Byb3BzKSB7XG4gICAgY29uc3QgcmVmUGxheSA9IFJlYWN0LnVzZVJlZihwcm9wcy5wbGF5ID8/IGZhbHNlKVxuICAgIGNvbnN0IFthbmltYXRlLCBzZXRBbmltYXRlXSA9IFJlYWN0LnVzZVN0YXRlKHJlZlBsYXkuY3VycmVudClcbiAgICBjb25zdCBbZnVsbHNjcmVlbiwgc2V0RnVsbHNjcmVlbl0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSlcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICByZWZQbGF5LmN1cnJlbnQgPSBhbmltYXRlXG4gICAgfSwgW2FuaW1hdGVdKVxuICAgIGNvbnN0IHJlZkNhbnZhcyA9IFJlYWN0LnVzZUNhbGxiYWNrKChub2RlOiBIVE1MQ2FudmFzRWxlbWVudCB8IG51bGwpID0+IHtcbiAgICAgICAgaWYgKCFub2RlKSByZXR1cm5cblxuICAgICAgICBjb25zdCBnbCA9IG5vZGUuZ2V0Q29udGV4dChcIndlYmdsMlwiKVxuICAgICAgICBpZiAoIWdsKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVW5hYmxlIHRvIGNyZWF0ZSBhIFdlYkdMMiBDb250ZXh0IVwiKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICBwcm9wc1xuICAgICAgICAgICAgLm9uSW5pdChnbClcbiAgICAgICAgICAgIC50aGVuKChwYWludCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBsYXN0V2lkdGggPSAwXG4gICAgICAgICAgICAgICAgbGV0IGxhc3RIZWlnaHQgPSAwXG4gICAgICAgICAgICAgICAgLy8gYHN0b3BUaW1lYCBhbmQgYHNoaWZ0VGltZWAgYXJlIHVzZWQgdG8gYWxsb3cgcGF1c2luZyB0aGUgYW5pbWF0aW9uLlxuICAgICAgICAgICAgICAgIC8vIElmIHdlIGp1c3QgZG9uJ3QgcmVuZGVyIGltYWdlcyBmb3Igc29tZSB0aW1lLCB0aGUgdGltZSBzdGlsbCBnb2VzIG9uLlxuICAgICAgICAgICAgICAgIC8vIFRoZW4sIHdoZW4gd2UgcmVzdW1lIHJlbmRlcmluZywgdGhlcmUgd2lsbCBiZSBhIGp1bXAgaW4gdGltZS5cbiAgICAgICAgICAgICAgICAvLyBXaXRoIHRoZXNlIHZhcmlhYmxlcywgd2UgZW5zdXJlIHRoYXQgd2UgcmVzdW1lIHdoZW4gd2UgcGF1c2VkLlxuICAgICAgICAgICAgICAgIGxldCBzdG9wVGltZSA9IDBcbiAgICAgICAgICAgICAgICBsZXQgc2hpZnRUaW1lID0gMFxuICAgICAgICAgICAgICAgIGNvbnN0IHsgY2FudmFzIH0gPSBnbFxuICAgICAgICAgICAgICAgIGxldCBwbGF5ID0gdHJ1ZVxuICAgICAgICAgICAgICAgIGNvbnN0IGFuaW0gPSAodGltZTogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbSlcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgd2lkdGggPSBNYXRoLmNlaWwoY2FudmFzLmNsaWVudFdpZHRoKVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBoZWlnaHQgPSBNYXRoLmNlaWwoY2FudmFzLmNsaWVudEhlaWdodClcbiAgICAgICAgICAgICAgICAgICAgaWYgKHdpZHRoICE9PSBsYXN0V2lkdGggfHwgaGVpZ2h0ICE9PSBsYXN0SGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYXN0V2lkdGggPSB3aWR0aFxuICAgICAgICAgICAgICAgICAgICAgICAgbGFzdEhlaWdodCA9IGhlaWdodFxuICAgICAgICAgICAgICAgICAgICAgICAgY2FudmFzLndpZHRoID0gd2lkdGhcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgIGdsLnZpZXdwb3J0KDAsIDAsIHdpZHRoLCBoZWlnaHQpXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWludChzdG9wVGltZSArIHNoaWZ0VGltZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocGxheSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFpbnQodGltZSArIHNoaWZ0VGltZSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAocGxheSAhPT0gcmVmUGxheS5jdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5ID0gcmVmUGxheS5jdXJyZW50XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocGxheSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoaWZ0VGltZSArPSBzdG9wVGltZSAtIHRpbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RvcFRpbWUgPSB0aW1lXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxuICAgIH0sIFtdKVxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgICAgICA8Y2FudmFzXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtmdWxsc2NyZWVuID8gXCJmdWxsc2NyZWVuXCIgOiBcInRoZW1lLXNoYWRvdy1idXR0b25cIn1cbiAgICAgICAgICAgICAgICByZWY9e3JlZkNhbnZhc31cbiAgICAgICAgICAgICAgICBvbkRvdWJsZUNsaWNrPXsoKSA9PiBzZXRGdWxsc2NyZWVuKCFmdWxsc2NyZWVuKX1cbiAgICAgICAgICAgID48L2NhbnZhcz5cbiAgICAgICAgICAgIDxmb290ZXI+XG4gICAgICAgICAgICAgICAgPHA+RG91YmxlLWNsaWMgcG91ciBwYXNzZXIgZW4gcGxlaW4gw6ljcmFuIChldCByZXZlbmlyKTwvcD5cbiAgICAgICAgICAgICAgICA8Q2hlY2tib3hcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9XCJBbmltZXJcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17YW5pbWF0ZX1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldEFuaW1hdGV9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZm9vdGVyPlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IFNjZW5lVmlld1Byb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gW1wiY3VzdG9tXCIsIFwidmlldy1TY2VuZVZpZXdcIl1cbiAgICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cblxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oXCIgXCIpXG59XG4iLCJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi9zaGFkZXItY29kZS1lZGl0b3ItdmlldydcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgQ29kZUVkaXRvciBmcm9tIFwiLi4vY29kZS1lZGl0b3JcIlxuaW1wb3J0IHsgdXNlRGVib3VuY2VkRWZmZWN0IH0gZnJvbSBcIi4uLy4uL3VpL2hvb2tzXCJcbmltcG9ydCBcIi4vc2hhZGVyLWNvZGUtZWRpdG9yLXZpZXcuY3NzXCJcblxuY29uc3QgREVGQVVMVF9ERUJPVU5DSU5HID0gMTAwMFxuXG5leHBvcnQgaW50ZXJmYWNlIFNoYWRlckNvZGVFZGl0b3JWaWV3UHJvcHMge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZ1xuICAgIGxhYmVsOiBzdHJpbmdcbiAgICB2YWx1ZTogc3RyaW5nXG4gICAgb25DaGFuZ2UodmFsdWU6IHN0cmluZyk6IHZvaWRcbiAgICBlcnJvcjogc3RyaW5nIHwgbnVsbFxuICAgIC8qKiBEZWZhdWx0IHRvIDEwMDAgKi9cbiAgICBkZWJvdW5jaW5nPzogbnVtYmVyXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNoYWRlckNvZGVFZGl0b3JWaWV3KHByb3BzOiBTaGFkZXJDb2RlRWRpdG9yVmlld1Byb3BzKSB7XG4gICAgY29uc3QgW2NvZGUsIHNldENvZGVdID0gUmVhY3QudXNlU3RhdGUocHJvcHMudmFsdWUpXG4gICAgdXNlRGVib3VuY2VkRWZmZWN0KFxuICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoY29kZSAhPT0gcHJvcHMudmFsdWUpIHByb3BzLm9uQ2hhbmdlKGNvZGUpXG4gICAgICAgIH0sXG4gICAgICAgIHByb3BzLmRlYm91bmNpbmcgPz8gREVGQVVMVF9ERUJPVU5DSU5HLFxuICAgICAgICBbY29kZV1cbiAgICApXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHNldENvZGUocHJvcHMudmFsdWUpLCBbcHJvcHMudmFsdWVdKVxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0+XG4gICAgICAgICAgICA8aGVhZGVyIGNsYXNzTmFtZT1cInRoZW1lLWNvbG9yLXByaW1hcnktZGFya1wiPntwcm9wcy5sYWJlbH08L2hlYWRlcj5cbiAgICAgICAgICAgIDxDb2RlRWRpdG9yIGNsYXNzTmFtZT1cImNvZGUtZWRpdG9yXCIgbGFuZ3VhZ2U9XCJnbHNsXCIgdmFsdWU9e2NvZGV9IG9uQ2hhbmdlPXtzZXRDb2RlfSAvPlxuICAgICAgICAgICAge3Byb3BzLmVycm9yICYmIChcbiAgICAgICAgICAgICAgICA8cHJlIGNsYXNzTmFtZT1cInRoZW1lLWNvbG9yLWVycm9yXCI+e3Byb3BzLmVycm9yfTwvcHJlPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBTaGFkZXJDb2RlRWRpdG9yVmlld1Byb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gW1wiY3VzdG9tXCIsIFwidmlldy1TaGFkZXJDb2RlRWRpdG9yVmlld1wiXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbihcIiBcIilcbn1cbiIsImltcG9ydCB7IEF0dHJpYnV0ZURlc2NyaXB0aW9uLCBsaXN0QXR0cmlidXRlcyB9IGZyb20gXCIuL2F0dHJpYnV0ZXNcIlxuaW1wb3J0IHsgZ2V0RXhjZXB0aW9uTWVzc2FnZSB9IGZyb20gXCJAL3Rvb2xzL2V4Y2VwdGlvblwiXG5pbXBvcnQgeyBsaXN0VW5pZm9ybXMsIFVuaWZvcm1EZXNjcmlwdGlvbiB9IGZyb20gXCIuL3VuaWZvcm1zXCJcblxuZXhwb3J0IGludGVyZmFjZSBTaGFkZXJDb2RlIHtcbiAgICB2ZXJ0OiBzdHJpbmdcbiAgICBmcmFnOiBzdHJpbmdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9ncmFtQW5hbHlzZSB7XG4gICAgdmVydENvZGU6IHN0cmluZ1xuICAgIGZyYWdDb2RlOiBzdHJpbmdcbiAgICB2ZXJ0RXJyb3I6IHN0cmluZyB8IG51bGxcbiAgICBmcmFnRXJyb3I6IHN0cmluZyB8IG51bGxcbiAgICB1bmlmb3JtczogVW5pZm9ybURlc2NyaXB0aW9uW11cbiAgICBhdHRyaWJ1dGVzOiBBdHRyaWJ1dGVEZXNjcmlwdGlvbltdXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhbmFseXNlUHJvZ3JhbShjb2RlOiBTaGFkZXJDb2RlKSB7XG4gICAgY29uc3QgYW5hbHlzZTogUHJvZ3JhbUFuYWx5c2UgPSB7XG4gICAgICAgIHZlcnRDb2RlOiBjb2RlLnZlcnQsXG4gICAgICAgIGZyYWdDb2RlOiBjb2RlLmZyYWcsXG4gICAgICAgIHZlcnRFcnJvcjogbnVsbCxcbiAgICAgICAgZnJhZ0Vycm9yOiBudWxsLFxuICAgICAgICB1bmlmb3JtczogW10sXG4gICAgICAgIGF0dHJpYnV0ZXM6IFtdLFxuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBjb25zdCBnbCA9IGNyZWF0ZVdlYkdMQ29udGV4dCgpXG4gICAgICAgIGNvbnN0IHByZyA9IGNyZWF0ZVByb2dyYW0oZ2wpXG4gICAgICAgIGxpbmtWZXJ0U2hhZGVyKGdsLCBwcmcsIGNvZGUudmVydClcbiAgICAgICAgbGlua0ZyYWdTaGFkZXIoZ2wsIHByZywgY29kZS5mcmFnKVxuICAgICAgICBnbC5saW5rUHJvZ3JhbShwcmcpXG4gICAgICAgIGlmICghZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcihwcmcsIGdsLkxJTktfU1RBVFVTKSkge1xuICAgICAgICAgICAgdmFyIGluZm8gPSBnbC5nZXRQcm9ncmFtSW5mb0xvZyhwcmcpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBsaW5rIFdlYkdMMiBwcm9ncmFtLlxcblwiICsgaW5mbylcbiAgICAgICAgfVxuICAgICAgICBhbmFseXNlLnVuaWZvcm1zID0gbGlzdFVuaWZvcm1zKGdsLCBwcmcpXG4gICAgICAgIGFuYWx5c2UuYXR0cmlidXRlcyA9IGxpc3RBdHRyaWJ1dGVzKGdsLCBwcmcpXG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5qAIFthbmFseXNlLXByb2dyYW1dIGFuYWx5c2UuYXR0cmlidXRlcyA9ICcsIGFuYWx5c2UuYXR0cmlidXRlcykgLy8gQEZJWE1FOiBSZW1vdmUgdGhpcyBsaW5lIHdyaXR0ZW4gb24gMjAyMi0wNC0wNiBhdCAxOTo0NlxuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGNvbnN0IG1zZyA9IGdldEV4Y2VwdGlvbk1lc3NhZ2UoZXgpXG4gICAgICAgIGlmIChtc2cuc3RhcnRzV2l0aChcIjxWRVJUPlwiKSlcbiAgICAgICAgICAgIGFuYWx5c2UudmVydEVycm9yID0gbXNnLnN1YnN0cmluZyhcIjxWRVJUPlwiLmxlbmd0aClcbiAgICAgICAgZWxzZSBpZiAobXNnLnN0YXJ0c1dpdGgoXCI8RlJBRz5cIikpXG4gICAgICAgICAgICBhbmFseXNlLmZyYWdFcnJvciA9IG1zZy5zdWJzdHJpbmcoXCI8RlJBRz5cIi5sZW5ndGgpXG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYW5hbHlzZS52ZXJ0RXJyb3IgPSBtc2dcbiAgICAgICAgICAgIGFuYWx5c2UuZnJhZ0Vycm9yID0gbXNnXG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGFuYWx5c2Vcbn1cblxuZnVuY3Rpb24gY3JlYXRlV2ViR0xDb250ZXh0KCk6IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQge1xuICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIilcbiAgICBjb25zdCBnbCA9IGNhbnZhcy5nZXRDb250ZXh0KFwid2ViZ2wyXCIpXG4gICAgaWYgKCFnbCkgdGhyb3cgRXJyb3IoXCJVbmFibGUgdG8gY3JlYXRlIFdlYkdMMiBjb250ZXh0IVwiKVxuXG4gICAgcmV0dXJuIGdsXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVByb2dyYW0oZ2w6IFdlYkdMUmVuZGVyaW5nQ29udGV4dCk6IFdlYkdMUHJvZ3JhbSB7XG4gICAgY29uc3QgcHJnID0gZ2wuY3JlYXRlUHJvZ3JhbSgpXG4gICAgaWYgKCFwcmcpIHRocm93IEVycm9yKFwiVW5hYmxlIHRvIGNyZWF0ZSBXZWJHTCBQcm9ncmFtIVwiKVxuXG4gICAgcmV0dXJuIHByZ1xufVxuXG5mdW5jdGlvbiBnZXRTaGFkZXIoXG4gICAgdHlwZTogbnVtYmVyLFxuICAgIGdsOiBXZWJHTFJlbmRlcmluZ0NvbnRleHQsXG4gICAgY29kZTogc3RyaW5nXG4pOiBXZWJHTFNoYWRlciB7XG4gICAgY29uc3Qgc2hhZGVyID0gZ2wuY3JlYXRlU2hhZGVyKHR5cGUpXG4gICAgaWYgKCFzaGFkZXIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoYFVuYWJsZSB0byBjcmVhdGUgYSBXZWJHTCBzaGFkZXIgb2YgdHlwZSAke3R5cGV9IWApXG4gICAgfVxuICAgIGdsLnNoYWRlclNvdXJjZShzaGFkZXIsIGNvZGUpXG4gICAgZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpXG4gICAgaWYgKCFnbC5nZXRTaGFkZXJQYXJhbWV0ZXIoc2hhZGVyLCBnbC5DT01QSUxFX1NUQVRVUykpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXG4gICAgICAgICAgICBnbC5nZXRTaGFkZXJJbmZvTG9nKHNoYWRlcikgPz9cbiAgICAgICAgICAgICAgICBcIlVua25vdyBlcnJvciB3aGlsZSBjb21waWxpbmcgdGhlIHNoYWRlciFcIlxuICAgICAgICApXG4gICAgfVxuXG4gICAgcmV0dXJuIHNoYWRlclxufVxuXG5mdW5jdGlvbiBsaW5rVmVydFNoYWRlcihcbiAgICBnbDogV2ViR0xSZW5kZXJpbmdDb250ZXh0LFxuICAgIHByZzogV2ViR0xQcm9ncmFtLFxuICAgIGNvZGU6IHN0cmluZ1xuKTogc3RyaW5nIHwgV2ViR0xTaGFkZXIge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHNoYWRlciA9IGdldFNoYWRlcihnbC5WRVJURVhfU0hBREVSLCBnbCwgY29kZSlcbiAgICAgICAgZ2wuYXR0YWNoU2hhZGVyKHByZywgc2hhZGVyKVxuICAgICAgICByZXR1cm4gc2hhZGVyXG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoYDxWRVJUPiR7bWFrZVByZXR0eUVycm9yKGNvZGUsIGV4KX1gKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gbGlua0ZyYWdTaGFkZXIoXG4gICAgZ2w6IFdlYkdMUmVuZGVyaW5nQ29udGV4dCxcbiAgICBwcmc6IFdlYkdMUHJvZ3JhbSxcbiAgICBjb2RlOiBzdHJpbmdcbik6IHN0cmluZyB8IFdlYkdMU2hhZGVyIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBzaGFkZXIgPSBnZXRTaGFkZXIoZ2wuRlJBR01FTlRfU0hBREVSLCBnbCwgY29kZSlcbiAgICAgICAgZ2wuYXR0YWNoU2hhZGVyKHByZywgc2hhZGVyKVxuICAgICAgICByZXR1cm4gc2hhZGVyXG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoYDxGUkFHPiR7bWFrZVByZXR0eUVycm9yKGNvZGUsIGV4KX1gKVxuICAgIH1cbn1cblxuY29uc3QgUlhfRVJST1IgPSAvXihFUlJPUnxXQVJOSU5HKTogWzAtOV0rOihbMC05XSspL2d1XG5cbmZ1bmN0aW9uIG1ha2VQcmV0dHlFcnJvcihjb2RlOiBzdHJpbmcsIGV4OiB1bmtub3duKTogc3RyaW5nIHtcbiAgICBjb25zdCBsaW5lcyA9IGNvZGUuc3BsaXQoXCJcXG5cIilcbiAgICBjb25zdCB0ZXh0ID0gZXggaW5zdGFuY2VvZiBFcnJvciA/IGV4Lm1lc3NhZ2UgOiBKU09OLnN0cmluZ2lmeShleClcbiAgICBjb25zdCBzZXRMaW5lc1RvUHJpbnQgPSBuZXcgU2V0PG51bWJlcj4oKVxuICAgIGNvbnN0IHNldEVycm9yTGluZXMgPSBuZXcgU2V0PG51bWJlcj4oKVxuICAgIGZvciAoY29uc3QgbGluZSBvZiB0ZXh0LnNwbGl0KFwiXFxuXCIpKSB7XG4gICAgICAgIFJYX0VSUk9SLmxhc3RJbmRleCA9IC0xXG4gICAgICAgIGNvbnN0IG1hdGNoID0gUlhfRVJST1IuZXhlYyhsaW5lKVxuICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgIGNvbnN0IFtfYWxsLCBfdHlwZSwgbnVtXSA9IG1hdGNoXG4gICAgICAgICAgICBjb25zdCBsaW5lTnVtYmVyID0gcGFyc2VJbnQobnVtKVxuICAgICAgICAgICAgaWYgKCFpc05hTihsaW5lTnVtYmVyKSkge1xuICAgICAgICAgICAgICAgIHNldEVycm9yTGluZXMuYWRkKGxpbmVOdW1iZXIpXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgc2hpZnQgPSAtMjsgc2hpZnQgPD0gKzI7IHNoaWZ0KyspIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbnVtID0gbGluZU51bWJlciArIHNoaWZ0XG4gICAgICAgICAgICAgICAgICAgIGlmIChudW0gPCAxIHx8IG51bSA+IGxpbmVzLmxlbmd0aCkgY29udGludWVcblxuICAgICAgICAgICAgICAgICAgICBzZXRMaW5lc1RvUHJpbnQuYWRkKG51bSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgcHJldmlldzogc3RyaW5nW10gPSBbXVxuICAgIGNvbnN0IGxpbmVzVG9QcmludCA9IEFycmF5LmZyb20oc2V0TGluZXNUb1ByaW50KS5zb3J0KClcbiAgICBsZXQgcHJldmlvdXNMaW5lTnVtYmVyID0gMFxuICAgIGZvciAoY29uc3QgbnVtIG9mIGxpbmVzVG9QcmludCkge1xuICAgICAgICBpZiAobnVtIC0gcHJldmlvdXNMaW5lTnVtYmVyID4gMSkgcHJldmlldy5wdXNoKFwiXCIpXG4gICAgICAgIHByZXZpb3VzTGluZU51bWJlciA9IG51bVxuICAgICAgICBjb25zdCBwcmVmaXggPSBzZXRFcnJvckxpbmVzLmhhcyhudW0pID8gXCI+XCIgOiBcIiBcIlxuICAgICAgICBsZXQgcGFkZGVkTGluZU51bSA9IGAke251bX1gXG4gICAgICAgIHdoaWxlIChwYWRkZWRMaW5lTnVtLmxlbmd0aCA8IDcpIHBhZGRlZExpbmVOdW0gPSBgICR7cGFkZGVkTGluZU51bX1gXG4gICAgICAgIGNvbnN0IGxpbmUgPSBsaW5lc1tudW0gLSAxXVxuICAgICAgICBwcmV2aWV3LnB1c2goYCR7cHJlZml4fSR7cGFkZGVkTGluZU51bX0gfCAke2xpbmV9YClcbiAgICB9XG4gICAgcmV0dXJuIGAke3RleHR9XG4ke3ByZXZpZXcuam9pbihcIlxcblwiKX1gXG59XG4iLCJpbXBvcnQgeyBsb29rdXBDb25zdGFudE5hbWUgfSBmcm9tIFwiLi4vbG9va3VwLWNvbnN0LW5hbWVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIEF0dHJpYnV0ZURlc2NyaXB0aW9uIHtcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBzaXplOiBudW1iZXJcbiAgICBsZW5ndGg6IG51bWJlclxuICAgIHR5cGU6IHN0cmluZ1xuICAgIGluZGV4OiBudW1iZXJcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxpc3RBdHRyaWJ1dGVzKFxuICAgIGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0LFxuICAgIHByZzogV2ViR0xQcm9ncmFtXG4pOiBBdHRyaWJ1dGVEZXNjcmlwdGlvbltdIHtcbiAgICBjb25zdCBhdHRyaWJ1dGVzOiBBdHRyaWJ1dGVEZXNjcmlwdGlvbltdID0gW11cbiAgICBjb25zdCBjb3VudCA9IGdsLmdldFByb2dyYW1QYXJhbWV0ZXIocHJnLCBnbC5BQ1RJVkVfQVRUUklCVVRFUykgYXMgbnVtYmVyXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNvdW50OyBpbmRleCsrKSB7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZSA9IGdsLmdldEFjdGl2ZUF0dHJpYihwcmcsIGluZGV4KVxuICAgICAgICBpZiAoIWF0dHJpYnV0ZSB8fCBbXCJnbF9JbnN0YW5jZUlEXCJdLmluY2x1ZGVzKGF0dHJpYnV0ZS5uYW1lKSkgY29udGludWVcblxuICAgICAgICBjb25zdCBhdG9taWNTaXplID0gZmlndXJlT3V0QXR0cmlidXRlU2l6ZShnbCwgYXR0cmlidXRlKVxuICAgICAgICBpZiAoYXRvbWljU2l6ZSA9PT0gMClcbiAgICAgICAgICAgIHRocm93IEVycm9yKFxuICAgICAgICAgICAgICAgIGBEb24ndCBrbm93IGhvdyB0byBkZWFsIHdpdGggdHlwZSBcIiR7bG9va3VwQ29uc3RhbnROYW1lKFxuICAgICAgICAgICAgICAgICAgICBnbCxcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlLnR5cGVcbiAgICAgICAgICAgICAgICApfVwiIGZvciBhdHRyaWJ1dGUgXCIke2F0dHJpYnV0ZS5uYW1lfVwiIWBcbiAgICAgICAgICAgIClcbiAgICAgICAgYXR0cmlidXRlcy5wdXNoKHtcbiAgICAgICAgICAgIG5hbWU6IGF0dHJpYnV0ZS5uYW1lLFxuICAgICAgICAgICAgc2l6ZTogYXRvbWljU2l6ZSxcbiAgICAgICAgICAgIGxlbmd0aDogYXR0cmlidXRlLnNpemUsXG4gICAgICAgICAgICB0eXBlOiBsb29rdXBDb25zdGFudE5hbWUoZ2wsIGF0dHJpYnV0ZS50eXBlKSxcbiAgICAgICAgICAgIGluZGV4OiBnbC5nZXRBdHRyaWJMb2NhdGlvbihwcmcsIGF0dHJpYnV0ZS5uYW1lKSxcbiAgICAgICAgfSlcbiAgICB9XG4gICAgYXR0cmlidXRlcy5zb3J0KChhdHQxLCBhdHQyKSA9PiBhdHQxLmluZGV4IC0gYXR0Mi5pbmRleClcbiAgICBjb25zb2xlLmxvZyhcIvCfmoAgYXR0cmlidXRlcyA9IFwiLCBhdHRyaWJ1dGVzKSAvLyBARklYTUU6IFJlbW92ZSB0aGlzIGxpbmUgd3JpdHRlbiBvbiAyMDIyLTAxLTI3IGF0IDE3OjMzXG4gICAgcmV0dXJuIGF0dHJpYnV0ZXNcbn1cblxuZnVuY3Rpb24gZmlndXJlT3V0QXR0cmlidXRlU2l6ZShcbiAgICBnbDogV2ViR0xSZW5kZXJpbmdDb250ZXh0LFxuICAgIGF0dHJpYnV0ZTogV2ViR0xBY3RpdmVJbmZvXG4pIHtcbiAgICBzd2l0Y2ggKGF0dHJpYnV0ZS50eXBlKSB7XG4gICAgICAgIGNhc2UgZ2wuRkxPQVQ6XG4gICAgICAgICAgICByZXR1cm4gMVxuICAgICAgICBjYXNlIGdsLkZMT0FUX1ZFQzI6XG4gICAgICAgICAgICByZXR1cm4gMlxuICAgICAgICBjYXNlIGdsLkZMT0FUX1ZFQzM6XG4gICAgICAgICAgICByZXR1cm4gM1xuICAgICAgICBjYXNlIGdsLkZMT0FUX1ZFQzQ6XG4gICAgICAgICAgICByZXR1cm4gNFxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIDBcbiAgICB9XG59XG4iLCJleHBvcnQgKiBmcm9tIFwiLi9hbmFseXNlLXByb2dyYW1cIiIsImltcG9ydCB7IGxvb2t1cENvbnN0YW50TmFtZSB9IGZyb20gXCIuLi9sb29rdXAtY29uc3QtbmFtZVwiXG5cbmV4cG9ydCBpbnRlcmZhY2UgVW5pZm9ybURlc2NyaXB0aW9uIHtcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBzaXplOiBudW1iZXJcbiAgICB0eXBlOiBzdHJpbmdcbiAgICAvKiogVXNlZCBmb3IgdGV4dHVyZXMgKi9cbiAgICBzbG90OiBudW1iZXJcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxpc3RVbmlmb3JtcyhnbDogV2ViR0wyUmVuZGVyaW5nQ29udGV4dCwgcHJnOiBXZWJHTFByb2dyYW0pIHtcbiAgICBjb25zdCB1bmlmb3JtczogVW5pZm9ybURlc2NyaXB0aW9uW10gPSBbXVxuICAgIGNvbnN0IGNvdW50ID0gZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcihwcmcsIGdsLkFDVElWRV9VTklGT1JNUykgYXMgbnVtYmVyXG4gICAgbGV0IHNsb3QgPSAwXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNvdW50OyBpbmRleCsrKSB7XG4gICAgICAgIGNvbnN0IHVuaWZvcm0gPSBnbC5nZXRBY3RpdmVVbmlmb3JtKHByZywgaW5kZXgpXG4gICAgICAgIGlmICghdW5pZm9ybSkgY29udGludWVcblxuICAgICAgICBjb25zdCBsb2NhdGlvbiA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcmcsIHVuaWZvcm0ubmFtZSlcbiAgICAgICAgaWYgKGxvY2F0aW9uID09PSBudWxsKSBjb250aW51ZVxuXG4gICAgICAgIHVuaWZvcm1zLnB1c2goe1xuICAgICAgICAgICAgbmFtZTogdW5pZm9ybS5uYW1lLFxuICAgICAgICAgICAgc2l6ZTogdW5pZm9ybS5zaXplLFxuICAgICAgICAgICAgdHlwZTogbG9va3VwQ29uc3RhbnROYW1lKGdsLCB1bmlmb3JtLnR5cGUpLFxuICAgICAgICAgICAgc2xvdCxcbiAgICAgICAgfSlcbiAgICAgICAgaWYgKHVuaWZvcm0udHlwZSA9PT0gZ2wuU0FNUExFUl8yRCkge1xuICAgICAgICAgICAgc2xvdCArPSB1bmlmb3JtLnNpemVcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zb2xlLmxvZygn8J+agCBbaG9va3NdIHVuaWZvcm1zID0gJywgdW5pZm9ybXMpIC8vIEBGSVhNRTogUmVtb3ZlIHRoaXMgbGluZSB3cml0dGVuIG9uIDIwMjItMDEtMjcgYXQgMDk6MjRcbiAgICByZXR1cm4gdW5pZm9ybXNcbn1cbiIsIi8qKlxuICogQHJldHVybnMgVGhlIG5hbWUgb2YgYSBXZWJHTDIgY29uc3RhbnQgdmFsdWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb29rdXBDb25zdGFudE5hbWUoZ2w6IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQsIHZhbHVlOiBudW1iZXIpOiBzdHJpbmcge1xuICAgIGZvciAoY29uc3Qga2V5IGluIGdsKSB7XG4gICAgICAgIGlmIChnbFtrZXldID09PSB2YWx1ZSkgcmV0dXJuIGtleVxuICAgIH1cbiAgICByZXR1cm4gYCR7dmFsdWV9P2Bcbn0iLCJmdW5jdGlvbiB3ZWJwYWNrRW1wdHlDb250ZXh0KHJlcSkge1xuXHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0dGhyb3cgZTtcbn1cbndlYnBhY2tFbXB0eUNvbnRleHQua2V5cyA9ICgpID0+IChbXSk7XG53ZWJwYWNrRW1wdHlDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xud2VicGFja0VtcHR5Q29udGV4dC5pZCA9IDM0MTE7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tFbXB0eUNvbnRleHQ7IiwiZXhwb3J0IGRlZmF1bHQge2FkZDonTTE5LDEzSDEzVjE5SDExVjEzSDVWMTFIMTFWNUgxM1YxMUgxOVYxM1onLCdhcnJvdy1kb3duJzonTTksNEgxNVYxMkgxOS44NEwxMiwxOS44NEw0LjE2LDEySDlWNFonLCdhcnJvdy1sZWZ0JzonTTIwLDlWMTVIMTJWMTkuODRMNC4xNiwxMkwxMiw0LjE2VjlIMjBaJywnYXJyb3ctcmlnaHQnOidNNCwxNVY5SDEyVjQuMTZMMTkuODQsMTJMMTIsMTkuODRWMTVINFonLCdhcnJvdy11cCc6J00xNSwyMEg5VjEySDQuMTZMMTIsNC4xNkwxOS44NCwxMkgxNVYyMFonLGJhY2s6J00yMCwxMVYxM0g4TDEzLjUsMTguNUwxMi4wOCwxOS45Mkw0LjE2LDEyTDEyLjA4LDQuMDhMMTMuNSw1LjVMOCwxMUgyMFonLGJvb2s6J00yMSw1QzE5Ljg5LDQuNjUgMTguNjcsNC41IDE3LjUsNC41QzE1LjU1LDQuNSAxMy40NSw0LjkgMTIsNkMxMC41NSw0LjkgOC40NSw0LjUgNi41LDQuNUM0LjU1LDQuNSAyLjQ1LDQuOSAxLDZWMjAuNjVDMSwyMC45IDEuMjUsMjEuMTUgMS41LDIxLjE1QzEuNiwyMS4xNSAxLjY1LDIxLjEgMS43NSwyMS4xQzMuMSwyMC40NSA1LjA1LDIwIDYuNSwyMEM4LjQ1LDIwIDEwLjU1LDIwLjQgMTIsMjEuNUMxMy4zNSwyMC42NSAxNS44LDIwIDE3LjUsMjBDMTkuMTUsMjAgMjAuODUsMjAuMyAyMi4yNSwyMS4wNUMyMi4zNSwyMS4xIDIyLjQsMjEuMSAyMi41LDIxLjFDMjIuNzUsMjEuMSAyMywyMC44NSAyMywyMC42VjZDMjIuNCw1LjU1IDIxLjc1LDUuMjUgMjEsNU0yMSwxOC41QzE5LjksMTguMTUgMTguNywxOCAxNy41LDE4QzE1LjgsMTggMTMuMzUsMTguNjUgMTIsMTkuNVY4QzEzLjM1LDcuMTUgMTUuOCw2LjUgMTcuNSw2LjVDMTguNyw2LjUgMTkuOSw2LjY1IDIxLDdWMTguNVonLGJ1ZzonTTE0LDEySDEwVjEwSDE0TTE0LDE2SDEwVjE0SDE0TTIwLDhIMTcuMTlDMTYuNzQsNy4yMiAxNi4xMiw2LjU1IDE1LjM3LDYuMDRMMTcsNC40MUwxNS41OSwzTDEzLjQyLDUuMTdDMTIuOTYsNS4wNiAxMi41LDUgMTIsNUMxMS41LDUgMTEuMDQsNS4wNiAxMC41OSw1LjE3TDguNDEsM0w3LDQuNDFMOC42Miw2LjA0QzcuODgsNi41NSA3LjI2LDcuMjIgNi44MSw4SDRWMTBINi4wOUM2LjA0LDEwLjMzIDYsMTAuNjYgNiwxMVYxMkg0VjE0SDZWMTVDNiwxNS4zNCA2LjA0LDE1LjY3IDYuMDksMTZINFYxOEg2LjgxQzcuODUsMTkuNzkgOS43OCwyMSAxMiwyMUMxNC4yMiwyMSAxNi4xNSwxOS43OSAxNy4xOSwxOEgyMFYxNkgxNy45MUMxNy45NiwxNS42NyAxOCwxNS4zNCAxOCwxNVYxNEgyMFYxMkgxOFYxMUMxOCwxMC42NiAxNy45NiwxMC4zMyAxNy45MSwxMEgyMFY4WicsY2VudGVyOidNMTIsOUEzLDMgMCAwLDAgOSwxMkEzLDMgMCAwLDAgMTIsMTVBMywzIDAgMCwwIDE1LDEyQTMsMyAwIDAsMCAxMiw5TTE5LDE5SDE1VjIxSDE5QTIsMiAwIDAsMCAyMSwxOVYxNUgxOU0xOSwzSDE1VjVIMTlWOUgyMVY1QTIsMiAwIDAsMCAxOSwzTTUsNUg5VjNINUEyLDIgMCAwLDAgMyw1VjlINU01LDE1SDNWMTlBMiwyIDAgMCwwIDUsMjFIOVYxOUg1VjE1WicsJ2NoZXZyb24tZG93bic6J003LjQxLDguNThMMTIsMTMuMTdMMTYuNTksOC41OEwxOCwxMEwxMiwxNkw2LDEwTDcuNDEsOC41OFonLCdjaGV2cm9uLXJpZ2h0JzonTTguNTksMTYuNThMMTMuMTcsMTJMOC41OSw3LjQxTDEwLDZMMTYsMTJMMTAsMThMOC41OSwxNi41OFonLGNsb3NlOidNMTksNi40MUwxNy41OSw1TDEyLDEwLjU5TDYuNDEsNUw1LDYuNDFMMTAuNTksMTJMNSwxNy41OUw2LjQxLDE5TDEyLDEzLjQxTDE3LjU5LDE5TDE5LDE3LjU5TDEzLjQxLDEyTDE5LDYuNDFaJyxjb3B5OidNMTksMjFIOFY3SDE5TTE5LDVIOEEyLDIgMCAwLDAgNiw3VjIxQTIsMiAwIDAsMCA4LDIzSDE5QTIsMiAwIDAsMCAyMSwyMVY3QTIsMiAwIDAsMCAxOSw1TTE2LDFINEEyLDIgMCAwLDAgMiwzVjE3SDRWM0gxNlYxWicsY3V0OidNMTksM0wxMyw5TDE1LDExTDIyLDRWM00xMiwxMi41QTAuNSwwLjUgMCAwLDEgMTEuNSwxMkEwLjUsMC41IDAgMCwxIDEyLDExLjVBMC41LDAuNSAwIDAsMSAxMi41LDEyQTAuNSwwLjUgMCAwLDEgMTIsMTIuNU02LDIwQTIsMiAwIDAsMSA0LDE4QzQsMTYuODkgNC45LDE2IDYsMTZBMiwyIDAgMCwxIDgsMThDOCwxOS4xMSA3LjEsMjAgNiwyME02LDhBMiwyIDAgMCwxIDQsNkM0LDQuODkgNC45LDQgNiw0QTIsMiAwIDAsMSA4LDZDOCw3LjExIDcuMSw4IDYsOE05LjY0LDcuNjRDOS44Nyw3LjE0IDEwLDYuNTkgMTAsNkE0LDQgMCAwLDAgNiwyQTQsNCAwIDAsMCAyLDZBNCw0IDAgMCwwIDYsMTBDNi41OSwxMCA3LjE0LDkuODcgNy42NCw5LjY0TDEwLDEyTDcuNjQsMTQuMzZDNy4xNCwxNC4xMyA2LjU5LDE0IDYsMTRBNCw0IDAgMCwwIDIsMThBNCw0IDAgMCwwIDYsMjJBNCw0IDAgMCwwIDEwLDE4QzEwLDE3LjQxIDkuODcsMTYuODYgOS42NCwxNi4zNkwxMiwxNEwxOSwyMUgyMlYyMEw5LjY0LDcuNjRaJywnZGVsZXRlJzonTTYsMTlBMiwyIDAgMCwwIDgsMjFIMTZBMiwyIDAgMCwwIDE4LDE5VjdINlYxOU04LjQ2LDExLjg4TDkuODcsMTAuNDdMMTIsMTIuNTlMMTQuMTIsMTAuNDdMMTUuNTMsMTEuODhMMTMuNDEsMTRMMTUuNTMsMTYuMTJMMTQuMTIsMTcuNTNMMTIsMTUuNDFMOS44OCwxNy41M0w4LjQ3LDE2LjEyTDEwLjU5LDE0TDguNDYsMTEuODhNMTUuNSw0TDE0LjUsM0g5LjVMOC41LDRINVY2SDE5VjRIMTUuNVonLGVkaXQ6J00yMC43MSw3LjA0QzIxLjEsNi42NSAyMS4xLDYgMjAuNzEsNS42M0wxOC4zNywzLjI5QzE4LDIuOSAxNy4zNSwyLjkgMTYuOTYsMy4yOUwxNS4xMiw1LjEyTDE4Ljg3LDguODdNMywxNy4yNVYyMUg2Ljc1TDE3LjgxLDkuOTNMMTQuMDYsNi4xOEwzLDE3LjI1WicsJ2V4cG9ydCc6J001LDIwSDE5VjE4SDVNMTksOUgxNVYzSDlWOUg1TDEyLDE2TDE5LDlaJywnZXh0ZXJuYWwtbGluayc6J00xNCwzVjVIMTcuNTlMNy43NiwxNC44M0w5LjE3LDE2LjI0TDE5LDYuNDFWMTBIMjFWM00xOSwxOUg1VjVIMTJWM0g1QzMuODksMyAzLDMuOSAzLDVWMTlBMiwyIDAgMCwwIDUsMjFIMTlBMiwyIDAgMCwwIDIxLDE5VjEySDE5VjE5WicsZmlsdGVyOidNMTQsMTJWMTkuODhDMTQuMDQsMjAuMTggMTMuOTQsMjAuNSAxMy43MSwyMC43MUMxMy4zMiwyMS4xIDEyLjY5LDIxLjEgMTIuMywyMC43MUwxMC4yOSwxOC43QzEwLjA2LDE4LjQ3IDkuOTYsMTguMTYgMTAsMTcuODdWMTJIOS45N0w0LjIxLDQuNjJDMy44Nyw0LjE5IDMuOTUsMy41NiA0LjM4LDMuMjJDNC41NywzLjA4IDQuNzgsMyA1LDNWM0gxOVYzQzE5LjIyLDMgMTkuNDMsMy4wOCAxOS42MiwzLjIyQzIwLjA1LDMuNTYgMjAuMTMsNC4xOSAxOS43OSw0LjYyTDE0LjAzLDEySDE0WicsZmx5OidNNSw3SDlBMiwyLDAsMCwxLDExLDlWMTVBMiwyLDAsMCwxLDksMTdINVYxNUg5VjEzSDZWMTFIOVY5SDVWN00xMyw3SDE2QTMsMywwLDAsMSwxOSwxMFYxNEEzLDMsMCwwLDEsMTYsMTdIMTNWN00xNiwxNUExLDEsMCwwLDAsMTcsMTRWMTBBMSwxLDAsMCwwLDE2LDlIMTVWMTVIMTZaJyxmb2N1czonTTEyLDlBMywzIDAgMCwwIDksMTJBMywzIDAgMCwwIDEyLDE1QTMsMyAwIDAsMCAxNSwxMkEzLDMgMCAwLDAgMTIsOU0xOSwxOUgxNVYyMUgxOUEyLDIgMCAwLDAgMjEsMTlWMTVIMTlNMTksM0gxNVY1SDE5VjlIMjFWNUEyLDIgMCAwLDAgMTksM001LDVIOVYzSDVBMiwyIDAgMCwwIDMsNVY5SDVNNSwxNUgzVjE5QTIsMiAwIDAsMCA1LDIxSDlWMTlINVYxNVonLCdmb3JtYXQtYm9sZCc6J00xMy41LDE1LjVIMTBWMTIuNUgxMy41QTEuNSwxLjUgMCAwLDEgMTUsMTRBMS41LDEuNSAwIDAsMSAxMy41LDE1LjVNMTAsNi41SDEzQTEuNSwxLjUgMCAwLDEgMTQuNSw4QTEuNSwxLjUgMCAwLDEgMTMsOS41SDEwTTE1LjYsMTAuNzlDMTYuNTcsMTAuMTEgMTcuMjUsOSAxNy4yNSw4QzE3LjI1LDUuNzQgMTUuNSw0IDEzLjI1LDRIN1YxOEgxNC4wNEMxNi4xNCwxOCAxNy43NSwxNi4zIDE3Ljc1LDE0LjIxQzE3Ljc1LDEyLjY5IDE2Ljg5LDExLjM5IDE1LjYsMTAuNzlaJywnZm9ybWF0LWJ1bGxldHMnOidNNyw1SDIxVjdIN1Y1TTcsMTNWMTFIMjFWMTNIN000LDQuNUExLjUsMS41IDAgMCwxIDUuNSw2QTEuNSwxLjUgMCAwLDEgNCw3LjVBMS41LDEuNSAwIDAsMSAyLjUsNkExLjUsMS41IDAgMCwxIDQsNC41TTQsMTAuNUExLjUsMS41IDAgMCwxIDUuNSwxMkExLjUsMS41IDAgMCwxIDQsMTMuNUExLjUsMS41IDAgMCwxIDIuNSwxMkExLjUsMS41IDAgMCwxIDQsMTAuNU03LDE5VjE3SDIxVjE5SDdNNCwxNi41QTEuNSwxLjUgMCAwLDEgNS41LDE4QTEuNSwxLjUgMCAwLDEgNCwxOS41QTEuNSwxLjUgMCAwLDEgMi41LDE4QTEuNSwxLjUgMCAwLDEgNCwxNi41WicsJ2Zvcm1hdC1pdGFsaWMnOidNMTAsNFY3SDEyLjIxTDguNzksMTVINlYxOEgxNFYxNUgxMS43OUwxNS4yMSw3SDE4VjRIMTBaJyxmdWxsc2NyZWVuOidNMTIgNS41TDEwIDhIMTRMMTIgNS41TTE4IDEwVjE0TDIwLjUgMTJMMTggMTBNNiAxMEwzLjUgMTJMNiAxNFYxME0xNCAxNkgxMEwxMiAxOC41TDE0IDE2TTIxIDNIM0MxLjkgMyAxIDMuOSAxIDVWMTlDMSAyMC4xIDEuOSAyMSAzIDIxSDIxQzIyLjEgMjEgMjMgMjAuMSAyMyAxOVY1QzIzIDMuOSAyMi4xIDMgMjEgM00yMSAxOUgzVjVIMjFWMTlaJyxnZWFyOidNMTIsMTUuNUEzLjUsMy41IDAgMCwxIDguNSwxMkEzLjUsMy41IDAgMCwxIDEyLDguNUEzLjUsMy41IDAgMCwxIDE1LjUsMTJBMy41LDMuNSAwIDAsMSAxMiwxNS41TTE5LjQzLDEyLjk3QzE5LjQ3LDEyLjY1IDE5LjUsMTIuMzMgMTkuNSwxMkMxOS41LDExLjY3IDE5LjQ3LDExLjM0IDE5LjQzLDExTDIxLjU0LDkuMzdDMjEuNzMsOS4yMiAyMS43OCw4Ljk1IDIxLjY2LDguNzNMMTkuNjYsNS4yN0MxOS41NCw1LjA1IDE5LjI3LDQuOTYgMTkuMDUsNS4wNUwxNi41Niw2LjA1QzE2LjA0LDUuNjYgMTUuNSw1LjMyIDE0Ljg3LDUuMDdMMTQuNSwyLjQyQzE0LjQ2LDIuMTggMTQuMjUsMiAxNCwySDEwQzkuNzUsMiA5LjU0LDIuMTggOS41LDIuNDJMOS4xMyw1LjA3QzguNSw1LjMyIDcuOTYsNS42NiA3LjQ0LDYuMDVMNC45NSw1LjA1QzQuNzMsNC45NiA0LjQ2LDUuMDUgNC4zNCw1LjI3TDIuMzQsOC43M0MyLjIxLDguOTUgMi4yNyw5LjIyIDIuNDYsOS4zN0w0LjU3LDExQzQuNTMsMTEuMzQgNC41LDExLjY3IDQuNSwxMkM0LjUsMTIuMzMgNC41MywxMi42NSA0LjU3LDEyLjk3TDIuNDYsMTQuNjNDMi4yNywxNC43OCAyLjIxLDE1LjA1IDIuMzQsMTUuMjdMNC4zNCwxOC43M0M0LjQ2LDE4Ljk1IDQuNzMsMTkuMDMgNC45NSwxOC45NUw3LjQ0LDE3Ljk0QzcuOTYsMTguMzQgOC41LDE4LjY4IDkuMTMsMTguOTNMOS41LDIxLjU4QzkuNTQsMjEuODIgOS43NSwyMiAxMCwyMkgxNEMxNC4yNSwyMiAxNC40NiwyMS44MiAxNC41LDIxLjU4TDE0Ljg3LDE4LjkzQzE1LjUsMTguNjcgMTYuMDQsMTguMzQgMTYuNTYsMTcuOTRMMTkuMDUsMTguOTVDMTkuMjcsMTkuMDMgMTkuNTQsMTguOTUgMTkuNjYsMTguNzNMMjEuNjYsMTUuMjdDMjEuNzgsMTUuMDUgMjEuNzMsMTQuNzggMjEuNTQsMTQuNjNMMTkuNDMsMTIuOTdaJywnZ3BzLW9mZic6J00zLjA1LDEzSDFWMTFIMy4wNUMzLjUsNi44MyA2LjgzLDMuNSAxMSwzLjA1VjFIMTNWMy4wNUMxNy4xNywzLjUgMjAuNSw2LjgzIDIwLjk1LDExSDIzVjEzSDIwLjk1QzIwLjUsMTcuMTcgMTcuMTcsMjAuNSAxMywyMC45NVYyM0gxMVYyMC45NUM2LjgzLDIwLjUgMy41LDE3LjE3IDMuMDUsMTNNMTIsNUE3LDcgMCAwLDAgNSwxMkE3LDcgMCAwLDAgMTIsMTlBNyw3IDAgMCwwIDE5LDEyQTcsNyAwIDAsMCAxMiw1WicsJ2dwcy1vbic6J00xMiw4QTQsNCAwIDAsMSAxNiwxMkE0LDQgMCAwLDEgMTIsMTZBNCw0IDAgMCwxIDgsMTJBNCw0IDAgMCwxIDEyLDhNMy4wNSwxM0gxVjExSDMuMDVDMy41LDYuODMgNi44MywzLjUgMTEsMy4wNVYxSDEzVjMuMDVDMTcuMTcsMy41IDIwLjUsNi44MyAyMC45NSwxMUgyM1YxM0gyMC45NUMyMC41LDE3LjE3IDE3LjE3LDIwLjUgMTMsMjAuOTVWMjNIMTFWMjAuOTVDNi44MywyMC41IDMuNSwxNy4xNyAzLjA1LDEzTTEyLDVBNyw3IDAgMCwwIDUsMTJBNyw3IDAgMCwwIDEyLDE5QTcsNyAwIDAsMCAxOSwxMkE3LDcgMCAwLDAgMTIsNVonLGhlbHA6J00xOS43OSwxNS40MUMyMC43NCwxMy4yNCAyMC43NCwxMC43NSAxOS43OSw4LjU5TDE3LjA1LDkuODNDMTcuNjUsMTEuMjEgMTcuNjUsMTIuNzggMTcuMDYsMTQuMTdMMTkuNzksMTUuNDFNMTUuNDIsNC4yMUMxMy4yNSwzLjI2IDEwLjc2LDMuMjYgOC41OSw0LjIxTDkuODMsNi45NEMxMS4yMiw2LjM1IDEyLjc5LDYuMzUgMTQuMTgsNi45NUwxNS40Miw0LjIxTTQuMjEsOC41OEMzLjI2LDEwLjc2IDMuMjYsMTMuMjQgNC4yMSwxNS40Mkw2Ljk1LDE0LjE3QzYuMzUsMTIuNzkgNi4zNSwxMS4yMSA2Ljk1LDkuODJMNC4yMSw4LjU4TTguNTksMTkuNzlDMTAuNzYsMjAuNzQgMTMuMjUsMjAuNzQgMTUuNDIsMTkuNzhMMTQuMTgsMTcuMDVDMTIuOCwxNy42NSAxMS4yMiwxNy42NSA5Ljg0LDE3LjA2TDguNTksMTkuNzlNMTIsMkExMCwxMCAwIDAsMSAyMiwxMkExMCwxMCAwIDAsMSAxMiwyMkExMCwxMCAwIDAsMSAyLDEyQTEwLDEwIDAgMCwxIDEyLDJNMTIsOEE0LDQgMCAwLDAgOCwxMkE0LDQgMCAwLDAgMTIsMTZBNCw0IDAgMCwwIDE2LDEyQTQsNCAwIDAsMCAxMiw4WicsaGlkZTonTTExLjgzLDlMMTUsMTIuMTZDMTUsMTIuMTEgMTUsMTIuMDUgMTUsMTJBMywzIDAgMCwwIDEyLDlDMTEuOTQsOSAxMS44OSw5IDExLjgzLDlNNy41Myw5LjhMOS4wOCwxMS4zNUM5LjAzLDExLjU2IDksMTEuNzcgOSwxMkEzLDMgMCAwLDAgMTIsMTVDMTIuMjIsMTUgMTIuNDQsMTQuOTcgMTIuNjUsMTQuOTJMMTQuMiwxNi40N0MxMy41MywxNi44IDEyLjc5LDE3IDEyLDE3QTUsNSAwIDAsMSA3LDEyQzcsMTEuMjEgNy4yLDEwLjQ3IDcuNTMsOS44TTIsNC4yN0w0LjI4LDYuNTVMNC43Myw3QzMuMDgsOC4zIDEuNzgsMTAgMSwxMkMyLjczLDE2LjM5IDcsMTkuNSAxMiwxOS41QzEzLjU1LDE5LjUgMTUuMDMsMTkuMiAxNi4zOCwxOC42NkwxNi44MSwxOS4wOEwxOS43MywyMkwyMSwyMC43M0wzLjI3LDNNMTIsN0E1LDUgMCAwLDEgMTcsMTJDMTcsMTIuNjQgMTYuODcsMTMuMjYgMTYuNjQsMTMuODJMMTkuNTcsMTYuNzVDMjEuMDcsMTUuNSAyMi4yNywxMy44NiAyMywxMkMyMS4yNyw3LjYxIDE3LDQuNSAxMiw0LjVDMTAuNiw0LjUgOS4yNiw0Ljc1IDgsNS4yTDEwLjE3LDcuMzVDMTAuNzQsNy4xMyAxMS4zNSw3IDEyLDdaJywnaW1wb3J0JzonTTksMTZWMTBINUwxMiwzTDE5LDEwSDE1VjE2SDlNNSwyMFYxOEgxOVYyMEg1WicsaW52ZXJ0OidNMjEsOUwxNyw1VjhIMTBWMTBIMTdWMTNNNywxMUwzLDE1TDcsMTlWMTZIMTRWMTRIN1YxMVonLGpzOidNMywzSDIxVjIxSDNWM003LjczLDE4LjA0QzguMTMsMTguODkgOC45MiwxOS41OSAxMC4yNywxOS41OUMxMS43NywxOS41OSAxMi44LDE4Ljc5IDEyLjgsMTcuMDRWMTEuMjZIMTEuMVYxN0MxMS4xLDE3Ljg2IDEwLjc1LDE4LjA4IDEwLjIsMTguMDhDOS42MiwxOC4wOCA5LjM4LDE3LjY4IDkuMTEsMTcuMjFMNy43MywxOC4wNE0xMy43MSwxNy44NkMxNC4yMSwxOC44NCAxNS4yMiwxOS41OSAxNi44LDE5LjU5QzE4LjQsMTkuNTkgMTkuNiwxOC43NiAxOS42LDE3LjIzQzE5LjYsMTUuODIgMTguNzksMTUuMTkgMTcuMzUsMTQuNTdMMTYuOTMsMTQuMzlDMTYuMiwxNC4wOCAxNS44OSwxMy44NyAxNS44OSwxMy4zN0MxNS44OSwxMi45NiAxNi4yLDEyLjY0IDE2LjcsMTIuNjRDMTcuMTgsMTIuNjQgMTcuNSwxMi44NSAxNy43OSwxMy4zN0wxOS4xLDEyLjVDMTguNTUsMTEuNTQgMTcuNzcsMTEuMTcgMTYuNywxMS4xN0MxNS4xOSwxMS4xNyAxNC4yMiwxMi4xMyAxNC4yMiwxMy40QzE0LjIyLDE0Ljc4IDE1LjAzLDE1LjQzIDE2LjI1LDE1Ljk1TDE2LjY3LDE2LjEzQzE3LjQ1LDE2LjQ3IDE3LjkxLDE2LjY4IDE3LjkxLDE3LjI2QzE3LjkxLDE3Ljc0IDE3LjQ2LDE4LjA5IDE2Ljc2LDE4LjA5QzE1LjkzLDE4LjA5IDE1LjQ1LDE3LjY2IDE1LjA5LDE3LjA2TDEzLjcxLDE3Ljg2WicsbGluazonTTEwLjU5LDEzLjQxQzExLDEzLjggMTEsMTQuNDQgMTAuNTksMTQuODNDMTAuMiwxNS4yMiA5LjU2LDE1LjIyIDkuMTcsMTQuODNDNy4yMiwxMi44OCA3LjIyLDkuNzEgOS4xNyw3Ljc2VjcuNzZMMTIuNzEsNC4yMkMxNC42NiwyLjI3IDE3LjgzLDIuMjcgMTkuNzgsNC4yMkMyMS43Myw2LjE3IDIxLjczLDkuMzQgMTkuNzgsMTEuMjlMMTguMjksMTIuNzhDMTguMywxMS45NiAxOC4xNywxMS4xNCAxNy44OSwxMC4zNkwxOC4zNiw5Ljg4QzE5LjU0LDguNzEgMTkuNTQsNi44MSAxOC4zNiw1LjY0QzE3LjE5LDQuNDYgMTUuMjksNC40NiAxNC4xMiw1LjY0TDEwLjU5LDkuMTdDOS40MSwxMC4zNCA5LjQxLDEyLjI0IDEwLjU5LDEzLjQxTTEzLjQxLDkuMTdDMTMuOCw4Ljc4IDE0LjQ0LDguNzggMTQuODMsOS4xN0MxNi43OCwxMS4xMiAxNi43OCwxNC4yOSAxNC44MywxNi4yNFYxNi4yNEwxMS4yOSwxOS43OEM5LjM0LDIxLjczIDYuMTcsMjEuNzMgNC4yMiwxOS43OEMyLjI3LDE3LjgzIDIuMjcsMTQuNjYgNC4yMiwxMi43MUw1LjcxLDExLjIyQzUuNywxMi4wNCA1LjgzLDEyLjg2IDYuMTEsMTMuNjVMNS42NCwxNC4xMkM0LjQ2LDE1LjI5IDQuNDYsMTcuMTkgNS42NCwxOC4zNkM2LjgxLDE5LjU0IDguNzEsMTkuNTQgOS44OCwxOC4zNkwxMy40MSwxNC44M0MxNC41OSwxMy42NiAxNC41OSwxMS43NiAxMy40MSwxMC41OUMxMywxMC4yIDEzLDkuNTYgMTMuNDEsOS4xN1onLGxvZ291dDonTTE2LDE3VjE0SDlWMTBIMTZWN0wyMSwxMkwxNiwxN00xNCwyQTIsMiAwIDAsMSAxNiw0VjZIMTRWNEg1VjIwSDE0VjE4SDE2VjIwQTIsMiAwIDAsMSAxNCwyMkg1QTIsMiAwIDAsMSAzLDIwVjRBMiwyIDAgMCwxIDUsMkgxNFonLG1hcDonTTE1LDE5TDksMTYuODlWNUwxNSw3LjExTTIwLjUsM0MyMC40NCwzIDIwLjM5LDMgMjAuMzQsM0wxNSw1LjFMOSwzTDMuMzYsNC45QzMuMTUsNC45NyAzLDUuMTUgMyw1LjM4VjIwLjVBMC41LDAuNSAwIDAsMCAzLjUsMjFDMy41NSwyMSAzLjYxLDIxIDMuNjYsMjAuOTdMOSwxOC45TDE1LDIxTDIwLjY0LDE5LjFDMjAuODUsMTkgMjEsMTguODUgMjEsMTguNjJWMy41QTAuNSwwLjUgMCAwLDAgMjAuNSwzWicsbWVudTonTTMsNkgyMVY4SDNWNk0zLDExSDIxVjEzSDNWMTFNMywxNkgyMVYxOEgzVjE2WicsJ21pbnVzLW8nOidNMTIsMjBDNy41OSwyMCA0LDE2LjQxIDQsMTJDNCw3LjU5IDcuNTksNCAxMiw0QzE2LjQxLDQgMjAsNy41OSAyMCwxMkMyMCwxNi40MSAxNi40MSwyMCAxMiwyME0xMiwyQTEwLDEwIDAgMCwwIDIsMTJBMTAsMTAgMCAwLDAgMTIsMjJBMTAsMTAgMCAwLDAgMjIsMTJBMTAsMTAgMCAwLDAgMTIsMk03LDEzSDE3VjExSDcnLG1vcmU6J00xNiwxMkEyLDIgMCAwLDEgMTgsMTBBMiwyIDAgMCwxIDIwLDEyQTIsMiAwIDAsMSAxOCwxNEEyLDIgMCAwLDEgMTYsMTJNMTAsMTJBMiwyIDAgMCwxIDEyLDEwQTIsMiAwIDAsMSAxNCwxMkEyLDIgMCAwLDEgMTIsMTRBMiwyIDAgMCwxIDEwLDEyTTQsMTJBMiwyIDAgMCwxIDYsMTBBMiwyIDAgMCwxIDgsMTJBMiwyIDAgMCwxIDYsMTRBMiwyIDAgMCwxIDQsMTJaJyxvazonTTIxLDdMOSwxOUwzLjUsMTMuNUw0LjkxLDEyLjA5TDksMTYuMTdMMTkuNTksNS41OUwyMSw3Wicsb3JpZW50YXRpb246J005LDFIM0EyLDIgMCAwLDAgMSwzVjE2QTIsMiAwIDAsMCAzLDE4SDlBMiwyIDAgMCwwIDExLDE2VjNBMiwyIDAgMCwwIDksMU05LDE1SDNWM0g5VjE1TTIxLDEzSDEzVjE1SDIxVjIxSDlWMjBINlYyMUEyLDIgMCAwLDAgOCwyM0gyMUEyLDIgMCAwLDAgMjMsMjFWMTVBMiwyIDAgMCwwIDIxLDEzTTIzLDEwTDE5LDhMMjAuOTEsNy4wOUMxOS43NCw0LjMxIDE3LDIuNSAxNCwyLjVWMUE5LDkgMCAwLDEgMjMsMTBaJyxwYWNrOidNMjEsMTYuNUMyMSwxNi44OCAyMC43OSwxNy4yMSAyMC40NywxNy4zOEwxMi41NywyMS44MkMxMi40MSwyMS45NCAxMi4yMSwyMiAxMiwyMkMxMS43OSwyMiAxMS41OSwyMS45NCAxMS40MywyMS44MkwzLjUzLDE3LjM4QzMuMjEsMTcuMjEgMywxNi44OCAzLDE2LjVWNy41QzMsNy4xMiAzLjIxLDYuNzkgMy41Myw2LjYyTDExLjQzLDIuMThDMTEuNTksMi4wNiAxMS43OSwyIDEyLDJDMTIuMjEsMiAxMi40MSwyLjA2IDEyLjU3LDIuMThMMjAuNDcsNi42MkMyMC43OSw2Ljc5IDIxLDcuMTIgMjEsNy41VjE2LjVNMTIsNC4xNUwxMC4xMSw1LjIyTDE2LDguNjFMMTcuOTYsNy41TDEyLDQuMTVNNi4wNCw3LjVMMTIsMTAuODVMMTMuOTYsOS43NUw4LjA4LDYuMzVMNi4wNCw3LjVNNSwxNS45MUwxMSwxOS4yOVYxMi41OEw1LDkuMjFWMTUuOTFNMTksMTUuOTFWOS4yMUwxMywxMi41OFYxOS4yOUwxOSwxNS45MVonLHBhdXNlOidNMTQsMTlIMThWNUgxNE02LDE5SDEwVjVINlYxOVonLHBsYXk6J004LDUuMTRWMTkuMTRMMTksMTIuMTRMOCw1LjE0WicsJ3BsdXMtbyc6J00xMiwyMEM3LjU5LDIwIDQsMTYuNDEgNCwxMkM0LDcuNTkgNy41OSw0IDEyLDRDMTYuNDEsNCAyMCw3LjU5IDIwLDEyQzIwLDE2LjQxIDE2LjQxLDIwIDEyLDIwTTEyLDJBMTAsMTAgMCAwLDAgMiwxMkExMCwxMCAwIDAsMCAxMiwyMkExMCwxMCAwIDAsMCAyMiwxMkExMCwxMCAwIDAsMCAxMiwyTTEzLDdIMTFWMTFIN1YxM0gxMVYxN0gxM1YxM0gxN1YxMUgxM1Y3WicscG9zdGVyOidNMTMsOUgxOC41TDEzLDMuNVY5TTYsMkgxNEwyMCw4VjIwQTIsMiAwIDAsMSAxOCwyMkg2QzQuODksMjIgNCwyMS4xIDQsMjBWNEM0LDIuODkgNC44OSwyIDYsMk02LDIwSDE1TDE4LDIwVjEyTDE0LDE2TDEyLDE0TDYsMjBNOCw5QTIsMiAwIDAsMCA2LDExQTIsMiAwIDAsMCA4LDEzQTIsMiAwIDAsMCAxMCwxMUEyLDIgMCAwLDAgOCw5WicscHJvZmlsOidNMS4xLDIyLjlMMTAuMSwxLjEsMTUuOCwxNS44LDE3LjYsMTAuMSwyMi45LDIyLjlaJyxxdW90ZTonTTkgMjJDOC40IDIyIDggMjEuNiA4IDIxVjE4SDRDMi45IDE4IDIgMTcuMSAyIDE2VjRDMiAyLjkgMi45IDIgNCAySDIwQzIxLjEgMiAyMiAyLjkgMjIgNFYxNkMyMiAxNy4xIDIxLjEgMTggMjAgMThIMTMuOUwxMC4yIDIxLjdDMTAgMjEuOSA5LjggMjIgOS41IDIySDlNMTAgMTZWMTkuMUwxMy4xIDE2SDIwVjRINFYxNkgxME0xNi4zIDZMMTQuOSA5SDE3VjEzSDEzVjguOEwxNC4zIDZIMTYuM00xMC4zIDZMOC45IDlIMTFWMTNIN1Y4LjhMOC4zIDZIMTAuM1onLHFyY29kZTonTTMsMTFINVYxM0gzVjExTTExLDVIMTNWOUgxMVY1TTksMTFIMTNWMTVIMTFWMTNIOVYxMU0xNSwxMUgxN1YxM0gxOVYxMUgyMVYxM0gxOVYxNUgyMVYxOUgxOVYyMUgxN1YxOUgxM1YyMUgxMVYxN0gxNVYxNUgxN1YxM0gxNVYxMU0xOSwxOVYxNUgxN1YxOUgxOU0xNSwzSDIxVjlIMTVWM00xNyw1VjdIMTlWNUgxN00zLDNIOVY5SDNWM001LDVWN0g3VjVINU0zLDE1SDlWMjFIM1YxNU01LDE3VjE5SDdWMTdINVonLHJhbmRvbTonTTE5Ljc4LDNIMTEuMjJDMTAuNTUsMyAxMCwzLjU1IDEwLDQuMjJWOEgxNlYxNEgxOS43OEMyMC40NSwxNCAyMSwxMy40NSAyMSwxMi43OFY0LjIyQzIxLDMuNTUgMjAuNDUsMyAxOS43OCwzTTEyLjQ0LDYuNjdDMTEuNzYsNi42NyAxMS4yMSw2LjEyIDExLjIxLDUuNDRDMTEuMjEsNC43NiAxMS43Niw0LjIxIDEyLjQ0LDQuMjFBMS4yMywxLjIzIDAgMCwxIDEzLjY3LDUuNDRDMTMuNjcsNi4xMiAxMy4xMiw2LjY3IDEyLjQ0LDYuNjdNMTguNTYsMTIuNzhDMTcuODgsMTIuNzkgMTcuMzMsMTIuMjQgMTcuMzIsMTEuNTZDMTcuMzEsMTAuODggMTcuODYsMTAuMzMgMTguNTQsMTAuMzJDMTkuMjIsMTAuMzEgMTkuNzcsMTAuODYgMTkuNzgsMTEuNTZDMTkuNzcsMTIuMjMgMTkuMjMsMTIuNzcgMTguNTYsMTIuNzhNMTguNTYsNi42N0MxNy44OCw2LjY4IDE3LjMzLDYuMTMgMTcuMzIsNS40NUMxNy4zMSw0Ljc3IDE3Ljg2LDQuMjIgMTguNTQsNC4yMUMxOS4yMiw0LjIgMTkuNzcsNC43NSAxOS43OCw1LjQ0QzE5Ljc4LDYuMTIgMTkuMjQsNi42NiAxOC41Niw2LjY3TTQuMjIsMTBIMTIuNzhBMS4yMiwxLjIyIDAgMCwxIDE0LDExLjIyVjE5Ljc4QzE0LDIwLjQ1IDEzLjQ1LDIxIDEyLjc4LDIxSDQuMjJDMy41NSwyMSAzLDIwLjQ1IDMsMTkuNzhWMTEuMjJDMywxMC41NSAzLjU1LDEwIDQuMjIsMTBNOC41LDE0LjI4QzcuODMsMTQuMjggNy4yOCwxNC44MyA3LjI4LDE1LjVDNy4yOCwxNi4xNyA3LjgzLDE2LjcyIDguNSwxNi43MkM5LjE3LDE2LjcyIDkuNzIsMTYuMTcgOS43MiwxNS41QTEuMjIsMS4yMiAwIDAsMCA4LjUsMTQuMjhNNS40NCwxMS4yMkM0Ljc3LDExLjIyIDQuMjIsMTEuNzcgNC4yMiwxMi40NEExLjIyLDEuMjIgMCAwLDAgNS40NCwxMy42NkM2LjExLDEzLjY2IDYuNjYsMTMuMTEgNi42NiwxMi40NFYxMi40NEM2LjY2LDExLjc3IDYuMTEsMTEuMjIgNS40NCwxMS4yMk0xMS41NSwxNy4zM0MxMC44OCwxNy4zMyAxMC4zMywxNy44OCAxMC4zMywxOC41NUMxMC4zMywxOS4yMiAxMC44OCwxOS43NyAxMS41NSwxOS43N0ExLjIyLDEuMjIgMCAwLDAgMTIuNzcsMTguNTVIMTIuNzdDMTIuNzcsMTcuODggMTIuMjMsMTcuMzQgMTEuNTYsMTcuMzNIMTEuNTVaJyxyZWRvOidNMTguNCwxMC42QzE2LjU1LDkgMTQuMTUsOCAxMS41LDhDNi44NSw4IDIuOTIsMTEuMDMgMS41NCwxNS4yMkwzLjksMTZDNC45NSwxMi44MSA3Ljk1LDEwLjUgMTEuNSwxMC41QzEzLjQ1LDEwLjUgMTUuMjMsMTEuMjIgMTYuNjIsMTIuMzhMMTMsMTZIMjJWN0wxOC40LDEwLjZaJyxyZWZyZXNoOidNMTksOEwxNSwxMkgxOEE2LDYgMCAwLDEgMTIsMThDMTEsMTggMTAuMDMsMTcuNzUgOS4yLDE3LjNMNy43NCwxOC43NkM4Ljk3LDE5LjU0IDEwLjQzLDIwIDEyLDIwQTgsOCAwIDAsMCAyMCwxMkgyM002LDEyQTYsNiAwIDAsMSAxMiw2QzEzLDYgMTMuOTcsNi4yNSAxNC44LDYuN0wxNi4yNiw1LjI0QzE1LjAzLDQuNDYgMTMuNTcsNCAxMiw0QTgsOCAwIDAsMCA0LDEySDFMNSwxNkw5LDEyJyxzZWFyY2g6J005LjUsM0E2LjUsNi41IDAgMCwxIDE2LDkuNUMxNiwxMS4xMSAxNS40MSwxMi41OSAxNC40NCwxMy43M0wxNC43MSwxNEgxNS41TDIwLjUsMTlMMTksMjAuNUwxNCwxNS41VjE0LjcxTDEzLjczLDE0LjQ0QzEyLjU5LDE1LjQxIDExLjExLDE2IDkuNSwxNkE2LjUsNi41IDAgMCwxIDMsOS41QTYuNSw2LjUgMCAwLDEgOS41LDNNOS41LDVDNyw1IDUsNyA1LDkuNUM1LDEyIDcsMTQgOS41LDE0QzEyLDE0IDE0LDEyIDE0LDkuNUMxNCw3IDEyLDUgOS41LDVaJyxzaGFyZTonTTE4LDE2LjA4QzE3LjI0LDE2LjA4IDE2LjU2LDE2LjM4IDE2LjA0LDE2Ljg1TDguOTEsMTIuN0M4Ljk2LDEyLjQ3IDksMTIuMjQgOSwxMkM5LDExLjc2IDguOTYsMTEuNTMgOC45MSwxMS4zTDE1Ljk2LDcuMTlDMTYuNSw3LjY5IDE3LjIxLDggMTgsOEEzLDMgMCAwLDAgMjEsNUEzLDMgMCAwLDAgMTgsMkEzLDMgMCAwLDAgMTUsNUMxNSw1LjI0IDE1LjA0LDUuNDcgMTUuMDksNS43TDguMDQsOS44MUM3LjUsOS4zMSA2Ljc5LDkgNiw5QTMsMyAwIDAsMCAzLDEyQTMsMyAwIDAsMCA2LDE1QzYuNzksMTUgNy41LDE0LjY5IDguMDQsMTQuMTlMMTUuMTYsMTguMzRDMTUuMTEsMTguNTUgMTUuMDgsMTguNzcgMTUuMDgsMTlDMTUuMDgsMjAuNjEgMTYuMzksMjEuOTEgMTgsMjEuOTFDMTkuNjEsMjEuOTEgMjAuOTIsMjAuNjEgMjAuOTIsMTlBMi45MiwyLjkyIDAgMCwwIDE4LDE2LjA4Wicsc2hvdzonTTEyLDlBMywzIDAgMCwwIDksMTJBMywzIDAgMCwwIDEyLDE1QTMsMyAwIDAsMCAxNSwxMkEzLDMgMCAwLDAgMTIsOU0xMiwxN0E1LDUgMCAwLDEgNywxMkE1LDUgMCAwLDEgMTIsN0E1LDUgMCAwLDEgMTcsMTJBNSw1IDAgMCwxIDEyLDE3TTEyLDQuNUM3LDQuNSAyLjczLDcuNjEgMSwxMkMyLjczLDE2LjM5IDcsMTkuNSAxMiwxOS41QzE3LDE5LjUgMjEuMjcsMTYuMzkgMjMsMTJDMjEuMjcsNy42MSAxNyw0LjUgMTIsNC41Wicsc25hcHNob3Q6J00yMCw0SDE2LjgzTDE1LDJIOUw3LjE3LDRINEEyLDIgMCAwLDAgMiw2VjE4QTIsMiAwIDAsMCA0LDIwSDIwQTIsMiAwIDAsMCAyMiwxOFY2QTIsMiAwIDAsMCAyMCw0TTIwLDE4SDRWNkg4LjA1TDkuODgsNEgxNC4xMkwxNS45NSw2SDIwVjE4TTEyLDdBNSw1IDAgMCwwIDcsMTJBNSw1IDAgMCwwIDEyLDE3QTUsNSAwIDAsMCAxNywxMkE1LDUgMCAwLDAgMTIsN00xMiwxNUEzLDMgMCAwLDEgOSwxMkEzLDMgMCAwLDEgMTIsOUEzLDMgMCAwLDEgMTUsMTJBMywzIDAgMCwxIDEyLDE1WicsJ3RwL3Bhc3N3b3JkJzonTTEyLDhBMSwxLDAsMCwxLDEzLDlBMSwxLDAsMCwxLDEyLDEwQTEsMSwwLDAsMSwxMSw5QTEsMSwwLDAsMSwxMiw4TTIxLDExQzIxLDE2LjYsMTcuMiwyMS43LDEyLDIzQzYuOCwyMS43LDMsMTYuNiwzLDExVjVMMTIsMUwyMSw1VjExTTEyLDZBMywzLDAsMCwwLDksOUM5LDEwLjMsOS44LDExLjQsMTEsMTEuOFYxOEgxM1YxNkgxNVYxNEgxM1YxMS44QzE0LjIsMTEuNCwxNSwxMC4zLDE1LDlBMywzLDAsMCwwLDEyLDZaJyx0cmFuc2xhdGU6J00xMi44NywxNS4wN0wxMC4zMywxMi41NkwxMC4zNiwxMi41M0MxMi4xLDEwLjU5IDEzLjM0LDguMzYgMTQuMDcsNkgxN1Y0SDEwVjJIOFY0SDFWNkgxMi4xN0MxMS41LDcuOTIgMTAuNDQsOS43NSA5LDExLjM1QzguMDcsMTAuMzIgNy4zLDkuMTkgNi42OSw4SDQuNjlDNS40Miw5LjYzIDYuNDIsMTEuMTcgNy42NywxMi41NkwyLjU4LDE3LjU4TDQsMTlMOSwxNEwxMi4xMSwxNy4xMUwxMi44NywxNS4wN00xOC41LDEwSDE2LjVMMTIsMjJIMTRMMTUuMTIsMTlIMTkuODdMMjEsMjJIMjNMMTguNSwxME0xNS44OCwxN0wxNy41LDEyLjY3TDE5LjEyLDE3SDE1Ljg4WicsdHM6J00zLDNIMjFWMjFIM1YzTTEzLjcxLDE3Ljg2QzE0LjIxLDE4Ljg0IDE1LjIyLDE5LjU5IDE2LjgsMTkuNTlDMTguNCwxOS41OSAxOS42LDE4Ljc2IDE5LjYsMTcuMjNDMTkuNiwxNS44MiAxOC43OSwxNS4xOSAxNy4zNSwxNC41N0wxNi45MywxNC4zOUMxNi4yLDE0LjA4IDE1Ljg5LDEzLjg3IDE1Ljg5LDEzLjM3QzE1Ljg5LDEyLjk2IDE2LjIsMTIuNjQgMTYuNywxMi42NEMxNy4xOCwxMi42NCAxNy41LDEyLjg1IDE3Ljc5LDEzLjM3TDE5LjEsMTIuNUMxOC41NSwxMS41NCAxNy43NywxMS4xNyAxNi43LDExLjE3QzE1LjE5LDExLjE3IDE0LjIyLDEyLjEzIDE0LjIyLDEzLjRDMTQuMjIsMTQuNzggMTUuMDMsMTUuNDMgMTYuMjUsMTUuOTVMMTYuNjcsMTYuMTNDMTcuNDUsMTYuNDcgMTcuOTEsMTYuNjggMTcuOTEsMTcuMjZDMTcuOTEsMTcuNzQgMTcuNDYsMTguMDkgMTYuNzYsMTguMDlDMTUuOTMsMTguMDkgMTUuNDUsMTcuNjYgMTUuMDksMTcuMDZMMTMuNzEsMTcuODZNMTMsMTEuMjVIOFYxMi43NUg5LjVWMjBIMTEuMjVWMTIuNzVIMTNWMTEuMjVaJyx1bmRvOidNMTIuNSw4QzkuODUsOCA3LjQ1LDkgNS42LDEwLjZMMiw3VjE2SDExTDcuMzgsMTIuMzhDOC43NywxMS4yMiAxMC41NCwxMC41IDEyLjUsMTAuNUMxNi4wNCwxMC41IDE5LjA1LDEyLjgxIDIwLjEsMTZMMjIuNDcsMTUuMjJDMjEuMDgsMTEuMDMgMTcuMTUsOCAxMi41LDhaJyx1c2VyOidNMTIsNEE0LDQgMCAwLDEgMTYsOEE0LDQgMCAwLDEgMTIsMTJBNCw0IDAgMCwxIDgsOEE0LDQgMCAwLDEgMTIsNE0xMiwxNEMxNi40MiwxNCAyMCwxNS43OSAyMCwxOFYyMEg0VjE4QzQsMTUuNzkgNy41OCwxNCAxMiwxNFonLHdhaXQ6J002LDJIMThWOEgxOFY4TDE0LDEyTDE4LDE2VjE2SDE4VjIySDZWMTZINlYxNkwxMCwxMkw2LDhWOEg2VjJNMTYsMTYuNUwxMiwxMi41TDgsMTYuNVYyMEgxNlYxNi41TTEyLDExLjVMMTYsNy41VjRIOFY3LjVMMTIsMTEuNU0xMCw2SDE0VjYuNzVMMTIsOC43NUwxMCw2Ljc1VjZaJyx3YXJuaW5nOidNMTMgMTRIMTFWOUgxM00xMyAxOEgxMVYxNkgxM00xIDIxSDIzTDEyIDJMMSAyMVonLCd6b29tLWluJzonTTE1LjUsMTRMMjAuNSwxOUwxOSwyMC41TDE0LDE1LjVWMTQuNzFMMTMuNzMsMTQuNDNDMTIuNTksMTUuNDEgMTEuMTEsMTYgOS41LDE2QTYuNSw2LjUgMCAwLDEgMyw5LjVBNi41LDYuNSAwIDAsMSA5LjUsM0E2LjUsNi41IDAgMCwxIDE2LDkuNUMxNiwxMS4xMSAxNS40MSwxMi41OSAxNC40MywxMy43M0wxNC43MSwxNEgxNS41TTkuNSwxNEMxMiwxNCAxNCwxMiAxNCw5LjVDMTQsNyAxMiw1IDkuNSw1QzcsNSA1LDcgNSw5LjVDNSwxMiA3LDE0IDkuNSwxNE0xMiwxMEgxMFYxMkg5VjEwSDdWOUg5VjdIMTBWOUgxMlYxMFonLCd6b29tLW91dCc6J00xNS41LDE0SDE0LjcxTDE0LjQzLDEzLjczQzE1LjQxLDEyLjU5IDE2LDExLjExIDE2LDkuNUE2LjUsNi41IDAgMCwwIDkuNSwzQTYuNSw2LjUgMCAwLDAgMyw5LjVBNi41LDYuNSAwIDAsMCA5LjUsMTZDMTEuMTEsMTYgMTIuNTksMTUuNDEgMTMuNzMsMTQuNDNMMTQsMTQuNzFWMTUuNUwxOSwyMC41TDIwLjUsMTlMMTUuNSwxNE05LjUsMTRDNywxNCA1LDEyIDUsOS41QzUsNyA3LDUgOS41LDVDMTIsNSAxNCw3IDE0LDkuNUMxNCwxMiAxMiwxNCA5LjUsMTRNNyw5SDEyVjEwSDdWOVonfTsiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfM19fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8zX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzVfX18iLCJvcHRpb25zIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJzZXRBdHRyaWJ1dGVzIiwiaW5zZXJ0IiwiZG9tQVBJIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwidW5kZWZpbmVkIiwiVGVzdCIsImxhenkiLCJXZWxjb21lQXJ0aWNsZSIsIldlYmdsMkNvbnRleHRBcnRpY2xlIiwiQXR0cmlidXRlc0FydGljbGUiLCJJbnN0YW5jZXNBcnRpY2xlIiwiQmFzaWNQZXJzcGVjdGl2ZUFydGljbGUiLCJQYWludGVyVG9vbCIsIlBBR0VTIiwiaGFzaCIsInVzZUhhc2giLCJ1c2VTdGF0ZSIsInNob3dOYXYiLCJwYWdlIiwibmF2Q2xhc3NOYW1lIiwiY29uc29sZSIsImxvZyIsImNsYXNzTmFtZSIsIlN1c3BlbnNlIiwiZmFsbGJhY2siLCJvbkNsaWNrIiwid2luZG93IiwibG9jYXRpb24iLCJuYW1lIiwiZGVmYXVsdCIsInNwbGFzaCIsImFwcGx5IiwiY29sb3JzIiwiYmxhY2siLCJ3aGl0ZSIsImVycm9yIiwiaW5wdXQiLCJzZWN0aW9uIiwiZnJhbWUiLCJzY3JlZW4iLCJwcmltYXJ5Iiwic2hhZGUiLCJhY2NlbnQiLCJ2ZXJzaW9uIiwicmVuZGVyIiwiU3RyaWN0TW9kZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRUaW1lb3V0IiwicGFyZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiZ2V0Q2xhc3NOYW1lcyIsInByb3BzIiwiY2xhc3NOYW1lcyIsImpvaW4iLCJyZWYiLCJSZWFjdCIsInVzZVJlZiIsInNsb3BlIiwic2NhbGUiLCJjdXJyZW50Iiwic2V0U2xvcGUiLCJzZXRTY2FsZSIsInVzZUVmZmVjdCIsInVzZUNhbGxiYWNrIiwiZ2wiLCJjYW52YXMiLCJjcmVhdGVFbGVtZW50Iiwid2lkdGgiLCJoZWlnaHQiLCJjdHgiLCJnZXRDb250ZXh0IiwiRXJyb3IiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibGVmdCIsInRvcCIsIlgiLCJjbGllbnRYIiwiWSIsImNsaWVudFkiLCJyIiwiZHJhd2luZ0J1ZmZlcldpZHRoIiwiZHJhd2luZ0J1ZmZlckhlaWdodCIsInMiLCJwIiwieSIsIngiLCJjYW52YXNYIiwiY2FudmFzWSIsImRyYXdJbWFnZSIsImltZyIsImxpbmVXaWR0aCIsInN0cm9rZVN0eWxlIiwiYmVnaW5QYXRoIiwibW92ZVRvIiwibGluZVRvIiwic3Ryb2tlIiwidGV4SW1hZ2UyRCIsIlRFWFRVUkVfMkQiLCJSR0JBIiwiVU5TSUdORURfQllURSIsImZpbGxTdHlsZSIsImZpbGxUZXh0IiwidGV4dHVyZSIsImNyZWF0ZVRleHR1cmUiLCJiaW5kVGV4dHVyZSIsInBpeGVsU3RvcmVpIiwiVU5QQUNLX0ZMSVBfWV9XRUJHTCIsInRleFBhcmFtZXRlcmkiLCJURVhUVVJFX01BR19GSUxURVIiLCJMSU5FQVIiLCJURVhUVVJFX01JTl9GSUxURVIiLCJJbWFnZSIsInNyYyIsIm9ubG9hZCIsInBhaW50ZXIiLCJwb2tlVmVydFN0YXRpY0RhdGEiLCJwdXNoVmVydFN0YXRpY0FycmF5IiwiY2xlYXJDb2xvciIsIlByb21pc2UiLCJyZXNvbHZlIiwidGltZSIsInBhaW50IiwiY2xlYXIiLCJDT0xPUl9CVUZGRVJfQklUIiwiJHVuaVRleCIsIiR1bmlTY2FsZSIsIiR1bmlSYXRpbyIsIiR1bmlDZW50ZXIiLCIkdW5pU2xvcGUiLCJtYWtlUmVuZGVyIiwibGFiZWwiLCJ3aWRlIiwibWluIiwibWF4Iiwic3RlcHMiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwicGxheSIsIm9uSW5pdCIsImxhbmciLCJ2ZXJ0Q291bnQiLCJ2ZXJ0U3RhdGljQ3Vyc29yIiwib25QYWludCIsInByZyIsInVzZVByb2dyYW0iLCJiaW5kVmVydGV4QXJyYXkiLCJ2ZXJ0QXJyYXkiLCJkcmF3QXJyYXlzIiwiVFJJQU5HTEVfU1RSSVAiLCJjcmVhdGVQcm9ncmFtIiwiUGFpbnRlciIsImNyZWF0ZVNoYWRlciIsIlZFUlRFWF9TSEFERVIiLCJWRVJUIiwiRlJBR01FTlRfU0hBREVSIiwiRlJBRyIsImxpbmtQcm9ncmFtIiwidGhpcyIsIl8kdW5pUmF0aW8iLCJnZXRVbmlmb3JtTG9jYXRpb24iLCJfJHVuaUNlbnRlciIsIl8kdW5pU2xvcGUiLCJfJHVuaVRleCIsIl8kdW5pU2NhbGUiLCJjcmVhdGVWZXJ0ZXhBcnJheSIsIkJQRSIsIkZsb2F0MzJBcnJheSIsIkJZVEVTX1BFUl9FTEVNRU5UIiwic3RyaWRlVmVydFN0YXRpYyIsInZlcnRTdGF0aWNCdWZmIiwiY3JlYXRlQnVmZmVyIiwiYmluZEJ1ZmZlciIsIkFSUkFZX0JVRkZFUiIsInZlcnRTdGF0aWNEYXRhIiwiYnVmZmVyRGF0YSIsIlNUQVRJQ19EUkFXIiwiX2F0dFBvaW50IiwiZ2V0QXR0cmliTG9jYXRpb24iLCJlbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSIsInZlcnRleEF0dHJpYlBvaW50ZXIiLCJGTE9BVCIsInZlcnRleEF0dHJpYkRpdmlzb3IiLCJfYXR0VVYiLCJwdXNoVmVydFN0YXRpY1N1YkFycmF5Iiwic3RhcnQiLCJlbmQiLCJzdWJEYXRhIiwic3ViYXJyYXkiLCJidWZmZXJTdWJEYXRhIiwiYXR0UG9pbnRfWCIsImF0dFBvaW50X1kiLCJhdHRVVl9YIiwiYXR0VVZfWSIsInZlcnRJbmRleCIsImRhdGEiLCJpbmRleCIsImRlc3Ryb3kiLCJkZWxldGVCdWZmZXIiLCJkZWxldGVQcm9ncmFtIiwiZGVsZXRlVmVydGV4QXJyYXkiLCJ1bmlmb3JtMWYiLCJ1bmlmb3JtMmYiLCJhY3RpdmVUZXh0dXJlIiwiVEVYVFVSRTAiLCJ1bmlmb3JtMWkiLCJ0eXBlIiwiY29kZSIsInNoYWRlciIsInNoYWRlclNvdXJjZSIsImNvbXBpbGVTaGFkZXIiLCJhdHRhY2hTaGFkZXIiLCJpbnN0YW5jZXMiLCJzZXRJbnN0YW5jZXMiLCJyZWZJbnN0YW5jZXMiLCJhIiwiYiIsInBva2VJbnN0RXZlcnk3U3RhdGljRGF0YSIsInB1c2hJbnN0RXZlcnk3U3RhdGljQXJyYXkiLCJpIiwicG9rZUluc3RTdGF0aWNEYXRhIiwicHVzaEluc3RTdGF0aWNBcnJheSIsImluc3RDb3VudCIsInQiLCJlbmFibGUiLCJCTEVORCIsImJsZW5kRnVuYyIsIlNSQ19BTFBIQSIsIk9ORV9NSU5VU19TUkNfQUxQSEEiLCIkdW5pT3BhY2l0eSIsIiR1bmlBbmdsZVN0ZXAiLCIkdW5pVHJpYW5nbGVzU2NhbGUiLCJNYXRoIiwiYWJzIiwic2luIiwidyIsImgiLCIkdW5pU2NyZWVuU2NhbGUiLCJpbnN0RXZlcnk3U3RhdGljQ3Vyc29yIiwiaW5zdFN0YXRpY0N1cnNvciIsImRyYXdBcnJheXNJbnN0YW5jZWQiLCJUUklBTkdMRVMiLCJfJHVuaVRyaWFuZ2xlc1NjYWxlIiwiXyR1bmlBbmdsZVN0ZXAiLCJfJHVuaVNjcmVlblNjYWxlIiwiXyR1bmlPcGFjaXR5IiwiX2F0dFZlcnRleFBvbGFyQ29vcmRzIiwic3RyaWRlSW5zdEV2ZXJ5N1N0YXRpYyIsImluc3RFdmVyeTdTdGF0aWNCdWZmIiwiaW5zdEV2ZXJ5N1N0YXRpY0RhdGEiLCJmbG9vciIsIl9hdHRJbnN0YW5jZUNvbG9yIiwic3RyaWRlSW5zdFN0YXRpYyIsImluc3RTdGF0aWNCdWZmIiwiaW5zdFN0YXRpY0RhdGEiLCJfYXR0SW5zdGFuY2VBbmdsZSIsInB1c2hJbnN0RXZlcnk3U3RhdGljU3ViQXJyYXkiLCJwdXNoSW5zdFN0YXRpY1N1YkFycmF5IiwiYXR0VmVydGV4UG9sYXJDb29yZHNfWCIsImF0dFZlcnRleFBvbGFyQ29vcmRzX1kiLCJhdHRWZXJ0ZXhQb2xhckNvb3Jkc19aIiwiYXR0SW5zdGFuY2VDb2xvcl9YIiwiYXR0SW5zdGFuY2VDb2xvcl9ZIiwiYXR0SW5zdGFuY2VDb2xvcl9aIiwiYXR0SW5zdGFuY2VBbmdsZSIsImNyZWF0ZVZlcnREYXRhQXJyYXkiLCJwb2tlVmVydERhdGEiLCJwdXNoVmVydERhdGEiLCJ0cyIsInZlcnREYXRhIiwidmVydEJ1ZmYiLCJzdHJpZGUiLCJBVFRSSUJTX0NPVU5UIiwiX2F0dFBvcyIsInZlcnRleEluZGV4IiwiYXR0UG9zX1giLCJhdHRQb3NfWSIsInJlZCIsImNvcyIsImdyZWVuIiwiYmx1ZSIsImV4cGFuZGVkIiwibWFrZVBhaW50ZXJDbGFzc0NvZGUiLCJsZW5ndGgiLCJjb21wdXRlQXR0cmlidXRlc1RvdGFsTGVuZ3RoIiwiYXR0cmlidXRlcyIsImF0dCIsInNpemUiLCJtYWtlQXR0cmlidXRlc0dyb3VwcyIsIm1hcCIsIk1hcCIsImRpdmlzb3IiLCJnZXREaXZpc29yRm9yQXR0aWJ1dGUiLCJkeW5hbWljIiwiZ2V0RHluYW1pY01vZGVGb3JBdHRpYnV0ZSIsImtleSIsImhhcyIsInNldCIsImJhc2VOYW1lIiwibWFrZUdyb3VwQmFzZU5hbWUiLCJncm91cCIsImdldCIsIkFycmF5IiwiZnJvbSIsInZhbHVlcyIsInN1ZmZpeCIsImdldFZlcnRPckluc3RDb3VudCIsImdyb3VwcyIsImF0dHJpYnV0ZXNMZW5ndGgiLCJiYXNlIiwiQmFzZSIsImNhcGl0YWxpemUiLCJvZmZzZXQiLCJkcmF3RWxlbWVudHMiLCJidWZmZXJzIiwiY29tcHJlc3NHTFNMIiwidGV4dCIsInJlcGxhY2VBbGwiLCJzcGxpdCIsInNvdXJjZSIsImRlc3RpbmF0aW9uIiwiZGF0ZUZvcm1hdHRlciIsIkludGwiLCJEYXRlVGltZUZvcm1hdCIsImZvcm1hdCIsIkRhdGUiLCJpbmRlbnQiLCJtYWtlQnVmZmVyc0NvZGUiLCJtYWtlVW5pZm9ybXNMb2NhdGlvbnNDb2RlIiwiZ2V0QXJyYXlUeXBlRm9yRWxlbWVudCIsIm1ha2VWZXJ0ZXhBbmRJbnN0YW5jZUZsb2F0MzJBcnJheXMiLCJtYWtlQ29uc3RydWN0b3JDb2RlIiwibWFrZUNyZWF0ZURhdGFBcnJheUZ1bmN0aW9uQ29kZSIsIm1ha2VQdXNoRGF0YSIsIm1ha2VQb2tlRGF0YUZ1bmN0aW9uQ29kZSIsIm1ha2VTd2FwRGF0YUZ1bmN0aW9uQ29kZSIsIm1ha2VEZXN0cm95RnVuY3Rpb25Db2RlIiwibWFrZVBhaW50RnVuY3Rpb25Db2RlIiwibWFrZVVuaWZvcm1zQ29kZSIsIm1ha2VDcmVhdGVTaGFkZXJGdW5jdGlvbkNvZGUiLCJtaW5pZnlTaGFkZXJDb2RlIiwidmVydENvZGUiLCJmcmFnQ29kZSIsImluZGVudGF0aW9uIiwicHJlZml4IiwiZmlsbCIsImxpbmUiLCJoYXNJbnN0YW5jZXMiLCJmaWx0ZXIiLCJ1bmlmb3JtcyIsInVuaSIsIm1ha2VCaW5kQXR0cmlidXRlc0NvZGUiLCJyZXBlYXQiLCJjb3VudCIsImFyciIsInZhck5hbWVzIiwiZ3JwIiwicHJpbWl0aXZlIiwiZWxlbWVudHNTaXplIiwibWFrZVVuaWZvcm1Db2RlRm9yVmVjdG9yIiwidW5pZm9ybSIsImRpbWVuc2lvbiIsInBhcmFtcyIsInN1YnN0cmluZyIsIm1ha2VVbmlmb3JtQ29kZUZvckZsb2F0Iiwic2xvdCIsIm1ha2VVbmlmb3JtQ29kZUZvclRleHR1cmUiLCJtYWtlVW5pZm9ybUNvZGVGb3JBdG9tIiwibWFrZVVuaWZvcm1Db2RlIiwiYXNzZXJ0T2JqZWN0IiwiYXNzZXJ0U3RyaW5nIiwiYXNzZXJ0Qm9vbGVhbiIsImFzc2VydEFycmF5IiwiYXR0cmlidXRlc0Rpdmlzb3JzIiwiYXR0cmlidXRlc0R5bmFtaWNNb2RlcyIsImluY2x1ZGVzIiwiZXgiLCJQUklNSVRJVkVTIiwiUE9JTlRTIiwiTElORV9TVFJJUCIsIkxJTkVfTE9PUCIsIkxJTkVTIiwiVFJJQU5HTEVfRkFOIiwiZ2V0RXhhbXBsZUNvZGVGb3JVbmlmb3JtIiwicmFuZG9tIiwidXBkYXRlIiwiVU5TSUdORURfU0hPUlQiLCJVTlNJR05FRF9JTlQiLCJ0aXRsZSIsInNldER5bmFtaWNNb2RlRm9yQXR0aWJ1dGUiLCJzZXREaXZpc29yRm9yQXR0aWJ1dGUiLCJhdHROYW1lIiwiRHluYW1pY01vZGUiLCJlbmRzV2l0aCIsIkRFRkFVTFRfQ09ERV9PUFRJT05TIiwicHJvamVjdCIsInVzZVBlcnNpc3RlbnRTdGF0ZSIsImlzQ29kZU9wdGlvbnMiLCJzZXRPcHRpb25zIiwiYW5hbHlzZSIsInNldEFuYWx5c2UiLCJoZWFkZXJzIiwib25BbmFseXNlIiwiZW5zdXJlR0xTTDMwMCIsInN0YXJ0c1dpdGgiLCJpc1N0cmluZyIsInNldFZlcnRDb2RlIiwidmVydEVycm9yIiwic2V0VmVydEVycm9yIiwic2V0RnJhZ0NvZGUiLCJmcmFnRXJyb3IiLCJzZXRGcmFnRXJyb3IiLCJhbmFseXNlUHJvZ3JhbSIsInZlcnQiLCJmcmFnIiwiYWN0aW9uIiwiZGVsYXkiLCJ0aW1lciIsImNsZWFyVGltZW91dCIsImFyZ3MiLCJEZWJvdW5jZXIiLCJzbGVlcCIsIlRocm90dGxlciIsIlVwZGF0ZVRhc2tzIiwidGltZXN0YW1wIiwibmV4dEFjdGlvbiIsIm5leHRBcmdzIiwidGhyb3R0bGVBY3Rpb24iLCJub3ciLCJlbGFwc2VkVGltZSIsImFjdGlvblJ1bm5pbmciLCJleGVjIiwidGFzayIsImN1clRhc2siLCJueHRUYXNrIiwibmF2aWdhdG9yIiwiY2xpcGJvYXJkIiwid3JpdGVUZXh0IiwibWVzc2FnZSIsInN0cmluZ2lmeSIsImxhbmd1YWdlIiwiR0xTTCIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsIm51bWJlciIsIm1ha2VJZGVudGlmaWVyc1JYIiwia2V5d29yZCIsImdsb2JhbCIsImZ1bmN0aW9uIiwid29yZHMiLCJSZWdFeHAiLCJEQiIsInRhYmxlIiwiZGVmYXVsdFZhbHVlIiwiY29udGVudCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJtYWtlS2V5IiwicGFyc2UiLCJzZXRJdGVtIiwidmFsaWRhdG9yIiwic2V0VmFsdWUiLCJ0aGVuIiwidiIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwiaXNVbmRlZmluZWQiLCJpc09iamVjdCIsImlzQXJyYXkiLCJpc1N0cmluZ09ySVVuZGVmaW5lZCIsImlzTnVtYmVyIiwiYXNzZXJ0TnVtYmVyIiwiaXNCb29sZWFuIiwiaXNTdHJpbmdBcnJheSIsImlzTnVtYmVyQXJyYXkiLCJBcnJheUJ1ZmZlciIsIlJYX0VNQUlMIiwiZW1haWwiLCJsYXN0SW5kZXgiLCJ0ZXN0IiwiRVBTSUxPTiIsIk1BWF9CWVRFX1ZBTFVFIiwiSU5WXzYiLCJJTlZfMTUiLCJJTlZfOTkiLCJJTlZfMjU1IiwiY29kZUNTUyIsIlIiLCJHIiwiQiIsIkgiLCJTIiwiTCIsIkEiLCJDb2xvciIsImlzVmFsaWQiLCJmcm9tQ29sb3JPclN0cmluZyIsImNvbG9yT3JTdHJpbmciLCJuZXdCbGFjayIsImZyb21BcnJheVJHQiIsInJnYiIsImZyb21SR0IiLCJmcm9tQXJyYXlSR0JBIiwicmdiYSIsImZyb21SR0JBIiwiZnJvbUhTTCIsImh1ZSIsInNhdHVyYXRpb24iLCJsdW1pbmFuY2UiLCJjb2xvciIsImhzbDJyZ2IiLCJmcm9tSFNMQSIsImFscGhhIiwiY29udHJhc3QiLCJiYWNrZ3JvdW5kIiwiZm9yZWdyb3VuZCIsImJhY2tDb2xvciIsImNvbG9yMiIsImZvcmVDb2xvciIsIm1peCIsImx1bTEiLCJsdW0yIiwiQ09OVFJBU1RfRVBTSUxPTiIsImJlc3RDb250cmFzdCIsInJlYWxCYWNrQ29sb3IiLCJiZXN0Rm9yZUNvbG9ySW5kZXgiLCJmb3JlQ29sb3JzIiwibHVtaW5hbmNlU3RlcCIsImx1bSIsImlzRGFya0NvbG9yIiwiaXNMaWdodENvbG9yIiwibWFrZURhcmtlciIsImx1bWluYW5jZVBlcmNlbnRhZ2UiLCJtYWtlSHVlUm90YXRlZCIsInJvdGF0aW9uIiwicmdiMmhzbCIsIm1ha2VUcmFuc3BhcmVudCIsImNsYW1wMDEiLCJjb2xvck9yU3RyaW5nMSIsImNvbG9yT3JTdHJpbmcyIiwiY29sb3IxIiwiYmV0YSIsIm5ld1doaXRlIiwibm9ybWFsaXplIiwiaW50ZXJwb2xhdGUiLCJhcnJheUxlbmd0aCIsImMiLCJyZXN1bHQiLCJzdGVwIiwicmFtcCIsInNwYWNlc0NvdW50IiwiZmlyc3RDb2xvckluZGV4IiwidHJhbnNsYXRlZEFscGhhIiwiY29weSIsIm5ld0NvbG9yIiwiY2hyb21hIiwic2hpZnQiLCJUSFJFU0hPTEQiLCJBTFBIQSIsIlNISUZUIiwiQkVUQSIsInBvdyIsInRyaW0iLCJwYXJzZUhleGEiLCJjYWxsIiwicGFyc2VSR0IiLCJwYXJzZVJHQkEiLCJwYXJzZUhTTCIsImRlbHRhIiwiaGV4YTIiLCJjYW5CZVNob3J0ZW4iLCJ0b0FycmF5UkdCIiwidG9BcnJheVJHQkEiLCJwYXJzZUludCIsInN1YnN0ciIsImlzTmFOIiwibSIsIlJYX0hTTCIsIlJYX1JHQiIsIlJYX1JHQkEiLCJwYXJzZUZsb2F0Iiwib3V0IiwidG9TdHJpbmciLCJERUZBVUxUX0lDT04iLCJ2aWV3Qm94IiwicHJlc2VydmVBc3BlY3RSYXRpbyIsImQiLCJmYWN0b3J5IiwiaWNvbnMiLCJyZWdpc3RlciIsInN2ZyIsInJlZ2lzdGVyRnJvbVBhdGgiLCJwYXRoIiwicmVnaXN0ZXJNYW55IiwiT2JqZWN0Iiwia2V5cyIsIm1ha2UiLCJlZmZlY3QiLCJkZXBzIiwicmVmVGltZW91dCIsInNldEhhc2giLCJoYW5kbGVIYXNoQ2hhbmdlIiwibmV3VVJMIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInVzZURlYm91bmNlZEVmZmVjdCIsInVzZUxvY2FsU3RvcmFnZVN0YXRlIiwidXNlUmVzaXplT2JzZXJ2ZXIiLCJ1c2VUb2dnbGVQb3B1cCIsInN0b3JhZ2VLZXkiLCJpbml0aWFsVHJhbnNmb3JtIiwibmV3VmFsdWUiLCJnZXRJbml0aWFsU2l6ZSIsImVsZW1lbnQiLCJjbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsImRlYm91bmNlRGVsYXkiLCJzZXRTaXplIiwidXBkYXRlU2l6ZSIsInVzZU1lbW8iLCJ1cGRhdGVyIiwib2JzZXJ2ZXIiLCJSZXNpemVPYnNlcnZlciIsIm9ic2VydmUiLCJ1bm9ic2VydmUiLCJpbmNyZW1lbnRhbElkIiwiaXNUb2dnbGVQb3B1cFN0YXRlIiwiZXhwZWN0ZWRJZCIsIm1ha2VUb2dnbGVQb3B1cFN0YXRlIiwiYmFjayIsImhpc3RvcnkiLCJyZWZJZCIsInJlZkhpc3RvcnlTdGF0ZSIsInZpc2libGUiLCJzZXRWaXNpYmxlIiwibGlzdGVuZXIiLCJzdGF0ZSIsInByZXZpb3VzU3RhdGUiLCJmb3J3YXJkIiwibmV3VmlzaWJsZSIsInB1c2hTdGF0ZSIsInRhcmdldCIsImJvZHkiLCJzdHlsZSIsInNldFByb3BlcnR5Iiwic2FuaXRpemVOYW1lIiwiZ2V0UHJvcGVydHlWYWx1ZSIsIkNTU19QUkVGSVgiLCJDU1NfQ09MT1IiLCJDU1NfT1BBQ0lUWSIsIlRoZW1lIiwic2V0dGluZ3MiLCJjdXJyZW50VGhlbWUiLCJ2YXJzIiwiYXBwbHlDb2xvciIsImxpZ2h0IiwiZGFyayIsImxpbmsiLCJ2YXJOYW1lRm9yQ29sb3IiLCJhcHBseUNvbG9ycyIsInR5cGVzIiwiY2FyZCIsImJ1dHRvbiIsImhlYWRlciIsImRpYWxvZyIsImFwcGx5U2hhZG93cyIsImJhc2VDb2xvciIsInNwcmVhZCIsImRlZmF1bHREYXJrVGhlbWUiLCJkZWZhdWx0TGlnaHRUaGVtZSIsImNvbG9yTmFtZSIsImNvbG9yVmFsdWUiLCJvcGFjaXR5IiwiY29sb3JPbiIsInZhck5hbWVGb3JDb2xvck9uIiwidHJhbnNwYXJlbnRDb2xvck9uIiwiQ09MT1JfQ0xBU1NOQU1FX01BUFBJTkciLCJjb2xvckNsYXNzTmFtZSIsImVuYWJsZWQiLCJyZXZlcnNlIiwiZGlzYWJsZWQiLCJhbmltYXRlIiwidGFiSW5kZXgiLCJvbkVudGVyUHJlc3NlZCIsIlJYX0lOVEVHRVIiLCJudW1lcmljVmFsdWUiLCJJRCIsImdsb2JhbElkIiwidmFsaWQiLCJmb2N1cyIsInBsYWNlaG9sZGVyIiwic3VnZ2VzdGlvbnMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJvblZhbGlkYXRpb24iLCJzZXRJZCIsInNldFRleHQiLCJzZXRWYWxpZCIsImJsdXIiLCJsaXN0SWQiLCJiZ0NvbG9yIiwiZmdDb2xvciIsImZvbnRXZWlnaHQiLCJzdWdnZXN0aW9uIiwibGlzdCIsIm5ld1RleHQiLCJ2YWxpZGl0eSIsIm9uS2V5RG93bkNhcHR1cmUiLCJodG1sRm9yIiwiayIsInJlbmRlck9wdGlvbnMiLCJjbGFtcCIsInJlZlRyYWNrIiwiZGl2IiwiaGFuZGxlS2V5RG93biIsIm1ha2VLZXlEb3duSGFuZGxlciIsInVzZUtleWJvYXJkSGFuZGxlciIsInNlbGVjdGlvbiIsInNldFNlbGVjdGlvbiIsImNoaWxkIiwiY2hpbGRyZW4iLCJpdGVtIiwiaWR4Iiwib25WYWx1ZUNoYW5nZSIsImhpZ2hsaWdodCIsImdldEdyYW1tYXJGb3JMYW5ndWFnZSIsInJlZ2lzdGVyTGFuZ3VhZ2UiLCJzZXRFeHBhbmRlZCIsInRyYW5zcGlsZSIsInNldFRyYW5zcGlsZSIsInRvZ2dsZSIsImhpZ2hsaWdodEVsZW1lbnQiLCJ0cmFuc3BpbGVNb2R1bGUiLCJjb21waWxlck9wdGlvbnMiLCJNb2R1bGVLaW5kIiwiRVMyMDIwIiwiZXhwZXJpbWVudGFsRGVjb3JhdG9ycyIsIm91dHB1dFRleHQiLCJ0cmFuc3BpbGVJZk5lZWRlZCIsInJlZ2lvbiIsImxpbmVzIiwicmVnaW9ucyIsIlNUQVJUIiwiRU5EIiwiZXh0cmFjdFJlZ2lvbiIsImNvcHlUb0NsaXBib2FyZCIsImdsc2wiLCJnZXRDb250ZW50QW5kTGFuZyIsIm92ZXJyaWRlcyIsIkNvZGUiLCJpbmxpbmVwcm9wcyIsInJlZlBsYXkiLCJzZXRBbmltYXRlIiwiZnVsbHNjcmVlbiIsInNldEZ1bGxzY3JlZW4iLCJyZWZDYW52YXMiLCJub2RlIiwibGFzdFdpZHRoIiwibGFzdEhlaWdodCIsInN0b3BUaW1lIiwic2hpZnRUaW1lIiwiYW5pbSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNlaWwiLCJ2aWV3cG9ydCIsImNhdGNoIiwib25Eb3VibGVDbGljayIsInNldENvZGUiLCJkZWJvdW5jaW5nIiwiZ2V0U2hhZGVyIiwiZ2V0U2hhZGVyUGFyYW1ldGVyIiwiQ09NUElMRV9TVEFUVVMiLCJnZXRTaGFkZXJJbmZvTG9nIiwiY3JlYXRlV2ViR0xDb250ZXh0IiwibWFrZVByZXR0eUVycm9yIiwibGlua1ZlcnRTaGFkZXIiLCJsaW5rRnJhZ1NoYWRlciIsImdldFByb2dyYW1QYXJhbWV0ZXIiLCJMSU5LX1NUQVRVUyIsImluZm8iLCJnZXRQcm9ncmFtSW5mb0xvZyIsImxpc3RVbmlmb3JtcyIsImxpc3RBdHRyaWJ1dGVzIiwibXNnIiwiZ2V0RXhjZXB0aW9uTWVzc2FnZSIsIlJYX0VSUk9SIiwiSlNPTiIsInNldExpbmVzVG9QcmludCIsIlNldCIsInNldEVycm9yTGluZXMiLCJtYXRjaCIsIm51bSIsImxpbmVOdW1iZXIiLCJwcmV2aWV3IiwibGluZXNUb1ByaW50Iiwic29ydCIsInByZXZpb3VzTGluZU51bWJlciIsInBhZGRlZExpbmVOdW0iLCJmaWd1cmVPdXRBdHRyaWJ1dGVTaXplIiwiYXR0cmlidXRlIiwiRkxPQVRfVkVDMiIsIkZMT0FUX1ZFQzMiLCJGTE9BVF9WRUM0IiwiQUNUSVZFX0FUVFJJQlVURVMiLCJnZXRBY3RpdmVBdHRyaWIiLCJhdG9taWNTaXplIiwibG9va3VwQ29uc3RhbnROYW1lIiwiYXR0MSIsImF0dDIiLCJBQ1RJVkVfVU5JRk9STVMiLCJnZXRBY3RpdmVVbmlmb3JtIiwiU0FNUExFUl8yRCIsIndlYnBhY2tFbXB0eUNvbnRleHQiLCJyZXEiLCJlIiwiZXhwb3J0cyIsImJvb2siLCJidWciLCJjZW50ZXIiLCJjbG9zZSIsImN1dCIsImVkaXQiLCJmbHkiLCJnZWFyIiwiaGVscCIsImhpZGUiLCJpbnZlcnQiLCJqcyIsImxvZ291dCIsIm1lbnUiLCJtb3JlIiwib2siLCJvcmllbnRhdGlvbiIsInBhY2siLCJwYXVzZSIsInBvc3RlciIsInByb2ZpbCIsInF1b3RlIiwicXJjb2RlIiwicmVkbyIsInJlZnJlc2giLCJzZWFyY2giLCJzaGFyZSIsInNob3ciLCJzbmFwc2hvdCIsInRyYW5zbGF0ZSIsInVuZG8iLCJ1c2VyIiwid2FpdCIsIndhcm5pbmciXSwic291cmNlUm9vdCI6IiJ9