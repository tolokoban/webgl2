(self.webpackChunkWebGL_2=self.webpackChunkWebGL_2||[]).push([[143],{6164:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".App {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n.App > div.body {\n    position: absolute;\n    left: 0;\n    top: 2rem;\n    width: 100%;\n    bottom: 0;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n\n.App > div.body > * {\n    position: absolute;\n    left: .5rem;\n    top: .5rem;\n    right: .5rem;\n    bottom: .5rem;\n    margin: 0;\n    padding: 0;\n}\n\n\n.App > nav {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 2rem;\n    margin: 0;\n    padding: 1rem;\n    overflow: auto;\n    transition: transform .2s;\n    transform: translateX(calc(1rem - 100%));\n}\n\n.App > nav.show {\n    transform: translateX(0);\n}","",{version:3,sources:["webpack://./src/app/app.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,SAAS;IACT,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,SAAS;IACT,WAAW;IACX,SAAS;IACT,SAAS;IACT,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,UAAU;IACV,YAAY;IACZ,aAAa;IACb,SAAS;IACT,UAAU;AACd;;;AAGA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,SAAS;IACT,aAAa;IACb,cAAc;IACd,yBAAyB;IACzB,wCAAwC;AAC5C;;AAEA;IACI,wBAAwB;AAC5B",sourcesContent:[".App {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n.App > div.body {\n    position: absolute;\n    left: 0;\n    top: 2rem;\n    width: 100%;\n    bottom: 0;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n\n.App > div.body > * {\n    position: absolute;\n    left: .5rem;\n    top: .5rem;\n    right: .5rem;\n    bottom: .5rem;\n    margin: 0;\n    padding: 0;\n}\n\n\n.App > nav {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 2rem;\n    margin: 0;\n    padding: 1rem;\n    overflow: auto;\n    transition: transform .2s;\n    transform: translateX(calc(1rem - 100%));\n}\n\n.App > nav.show {\n    transform: translateX(0);\n}"],sourceRoot:""}]);const s=a},4958:(e,t,n)=>{"use strict";n.d(t,{Z:()=>w});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i),s=n(1667),c=n.n(s),u=new URL(n(3245),n.b),l=new URL(n(1060),n.b),f=new URL(n(9297),n.b),d=new URL(n(3319),n.b),A=new URL(n(5416),n.b),p=new URL(n(5533),n.b),m=a()(o()),h=c()(u),v=c()(l),b=c()(f),g=c()(d),C=c()(A),y=c()(p);m.push([e.id,"\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url("+h+") format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url("+v+") format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url("+b+") format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+g+") format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+C+") format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+y+") format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n","",{version:3,sources:["webpack://./src/fonts/dosis.css"],names:[],mappings:";AACA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,gHAAgH;AAClH;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,mHAAmH;AACrH;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,yKAAyK;AAC3K;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,gHAAgH;AAClH;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,mHAAmH;AACrH;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+C;EAC/C,yKAAyK;AAC3K",sourcesContent:["\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url(./dosis/dosis-0.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url(./dosis/dosis-1.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 300;\n  font-display: swap;\n  src: url(./dosis/dosis-2.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./dosis/dosis-3.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./dosis/dosis-4.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: dosis;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./dosis/dosis-5.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n"],sourceRoot:""}]);const w=m},3788:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,"html,\nbody,\n#root {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: dosis, sans-serif;\n    font-size: 18px;\n}\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n\narticle {\n    width: 100%;\n    margin: 0;\n    padding: 1rem 0;\n    height: 100%;\n    overflow: auto;\n    display: grid;\n    grid-template-columns: 1fr min(320px, 50vw) min(320px, 50vw) 1fr;\n    grid-auto-rows: min-content;\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n\narticle > * {\n    grid-column: 2/4;\n}\n\narticle > *.full-width {\n    grid-column: 1/5;\n    width: 100%;\n}\n\narticle > *.left {\n    grid-column: 1/3;\n    place-self: flex-start center;\n}\n\narticle > *.right {\n    grid-column: 3/5;\n    place-self: flex-start center;\n}\n\narticle > *.margin-left {\n    grid-column: 1/2;\n}\n\narticle > *.margin-right {\n    grid-column: 4/5;\n}\n\n@media (max-width: 800px) {\n    article > *.left,\n    article > *.margin-left {\n        grid-column: 1/4;\n    }\n\n    article > *.right,\n    article > *.margin-right {\n        grid-column: 2/5;\n    }\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;IAGI,SAAS;IACT,mCAAmC;IACnC,kCAAkC;IAClC,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,8BAA8B;IAC9B,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,WAAW;IACX,SAAS;IACT,eAAe;IACf,YAAY;IACZ,cAAc;IACd,aAAa;IACb,gEAAgE;IAChE,2BAA2B;IAC3B,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;IACI,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI;;QAEI,gBAAgB;IACpB;;IAEA;;QAEI,gBAAgB;IACpB;AACJ",sourcesContent:["html,\nbody,\n#root {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    font-family: dosis, sans-serif;\n    font-size: 18px;\n}\n\n#tgd-logo.vanish {\n    opacity: 0;\n    transition: opacity 0.9s;\n}\n\narticle {\n    width: 100%;\n    margin: 0;\n    padding: 1rem 0;\n    height: 100%;\n    overflow: auto;\n    display: grid;\n    grid-template-columns: 1fr min(320px, 50vw) min(320px, 50vw) 1fr;\n    grid-auto-rows: min-content;\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n\narticle > * {\n    grid-column: 2/4;\n}\n\narticle > *.full-width {\n    grid-column: 1/5;\n    width: 100%;\n}\n\narticle > *.left {\n    grid-column: 1/3;\n    place-self: flex-start center;\n}\n\narticle > *.right {\n    grid-column: 3/5;\n    place-self: flex-start center;\n}\n\narticle > *.margin-left {\n    grid-column: 1/2;\n}\n\narticle > *.margin-right {\n    grid-column: 4/5;\n}\n\n@media (max-width: 800px) {\n    article > *.left,\n    article > *.margin-left {\n        grid-column: 1/4;\n    }\n\n    article > *.right,\n    article > *.margin-right {\n        grid-column: 2/5;\n    }\n}\n"],sourceRoot:""}]);const s=a},8977:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".article-BasicPerspective {\n}\n","",{version:3,sources:["webpack://./src/pages/articles/basic-perspective/basic-perspective.css"],names:[],mappings:"AAAA;AACA",sourcesContent:[".article-BasicPerspective {\n}\n"],sourceRoot:""}]);const s=a},9697:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".pages-articles-AttributesView {}\n","",{version:3,sources:["webpack://./src/pages/articles/intro/attributes/attributes-view.css"],names:[],mappings:"AAAA,gCAAgC",sourcesContent:[".pages-articles-AttributesView {}\n"],sourceRoot:""}]);const s=a},8226:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".pages-articles-Webgl2contextView {}\n","",{version:3,sources:["webpack://./src/pages/articles/intro/webgl2context/webgl2context-view.css"],names:[],mappings:"AAAA,mCAAmC",sourcesContent:[".pages-articles-Webgl2contextView {}\n"],sourceRoot:""}]);const s=a},100:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".pages-tools-Welcome {}\n","",{version:3,sources:["webpack://./src/pages/articles/welcome/welcome.css"],names:[],mappings:"AAAA,sBAAsB",sourcesContent:[".pages-tools-Welcome {}\n"],sourceRoot:""}]);const s=a},5921:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".pages-tools-painter-CodeGeneratorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    margin: 0.5em 0;\n}\n\n.pages-tools-painter-CodeGeneratorView > header {\n    padding: 0.25em 1em;\n    border-radius: 0.5em 0.5em 0 0;\n    flex: 0 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 1em;\n}\n\n.pages-tools-painter-CodeGeneratorView > pre {\n    font-size: 80%;\n    overflow: auto;\n    white-space: pre-wrap;\n    flex: 1 1 auto;\n    padding: 1em;\n}\n","",{version:3,sources:["webpack://./src/pages/tools/painter/code-generator/code-generator-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,8BAA8B;IAC9B,SAAS;IACT,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,eAAe;IACf,QAAQ;AACZ;;AAEA;IACI,cAAc;IACd,cAAc;IACd,qBAAqB;IACrB,cAAc;IACd,YAAY;AAChB",sourcesContent:[".pages-tools-painter-CodeGeneratorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    margin: 0.5em 0;\n}\n\n.pages-tools-painter-CodeGeneratorView > header {\n    padding: 0.25em 1em;\n    border-radius: 0.5em 0.5em 0 0;\n    flex: 0 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 1em;\n}\n\n.pages-tools-painter-CodeGeneratorView > pre {\n    font-size: 80%;\n    overflow: auto;\n    white-space: pre-wrap;\n    flex: 1 1 auto;\n    padding: 1em;\n}\n"],sourceRoot:""}]);const s=a},677:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".pages-tools-painter-CodeOptionsView div.grid-3 {\n    display: grid;\n    grid-template-columns: auto auto 1fr;\n    gap: 0 1.5em;\n    place-items: center start;\n}\n\n.pages-tools-painter-CodeOptionsView div.grid-3 > div.hint {\n    opacity: 0.5;\n}\n\n.pages-tools-painter-CodeOptionsView .small-input {\n    width: 3em;\n}","",{version:3,sources:["webpack://./src/pages/tools/painter/code-options/code-options-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,oCAAoC;IACpC,YAAY;IACZ,yBAAyB;AAC7B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,UAAU;AACd",sourcesContent:[".pages-tools-painter-CodeOptionsView div.grid-3 {\n    display: grid;\n    grid-template-columns: auto auto 1fr;\n    gap: 0 1.5em;\n    place-items: center start;\n}\n\n.pages-tools-painter-CodeOptionsView div.grid-3 > div.hint {\n    opacity: 0.5;\n}\n\n.pages-tools-painter-CodeOptionsView .small-input {\n    width: 3em;\n}"],sourceRoot:""}]);const s=a},3697:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,"div.pages-tools-painter-PainterTools {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\ndiv.pages-tools-painter-PainterTools > div.tab-strip {\n    width: 100%;\n    height: 100%;\n}\n\ndiv.pages-tools-painter-PainterTools > div.tab-strip main > div > div {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: .5em;\n}","",{version:3,sources:["webpack://./src/pages/tools/painter/painter-tools.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,uBAAuB;IACvB,SAAS;AACb",sourcesContent:["div.pages-tools-painter-PainterTools {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\ndiv.pages-tools-painter-PainterTools > div.tab-strip {\n    width: 100%;\n    height: 100%;\n}\n\ndiv.pages-tools-painter-PainterTools > div.tab-strip main > div > div {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: .5em;\n}"],sourceRoot:""}]);const s=a},6750:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".pages-tools-painter-ProgramCodeEditorView {\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 0.5em;\n    padding: .5em;\n}\n","",{version:3,sources:["webpack://./src/pages/tools/painter/program-code-editor/program-code-editor-view.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;IACb,8BAA8B;IAC9B,UAAU;IACV,aAAa;AACjB",sourcesContent:[".pages-tools-painter-ProgramCodeEditorView {\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 0.5em;\n    padding: .5em;\n}\n"],sourceRoot:""}]);const s=a},9163:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".Test {\n}\n","",{version:3,sources:["webpack://./src/test/test.css"],names:[],mappings:"AAAA;AACA",sourcesContent:[".Test {\n}\n"],sourceRoot:""}]);const s=a},9722:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,"/***************/\n/** RESET CSS **/\n/***************/\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for\n   people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n   scroll-behavior: auto;\n  }\n  \n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/*********/\n/* Theme */\n/*********/\n\nhtml {\n    font-family: sans-serif;\n    font-size: 16px;\n}\n\n/* Focus */\n* {\n    -webkit-tap-highlight-color: transparent;\n    accent-color: var(--theme-color-accent);\n}\n*::-moz-focus-inner {\n  border: 0;\n}\n*:focus {\n    outline: 2px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n    z-index: 999999;\n}\n\nh1,\nh2 {\n    border: 0.0625em solid currentColor;\n    border-image: linear-gradient(to right, currentColor, transparent) 0 0 1 0;\n    margin: 0.5rem 0 1rem 0;\n}\n\nh1 {\n    font-size: 1.2rem;\n}\n\nh2 {\n    font-size: 1.1rem;\n}\n\nhr {\n    border: none;\n    height: 1px;\n    width: 100%;\n    margin: 1rem 0;\n    background-image: linear-gradient(\n        to left,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.theme-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 2rem;\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0;\n    z-index: 1;\n}\n\n.theme-header > * {\n    flex: 1 1 auto;\n    margin: 0 0.5rem;\n}\n\n.theme-header > div {\n    text-align: center;\n}\n\n.theme-header > div:first-child {\n    text-align: left;\n}\n\n.theme-header > svg,\n.theme-header > img {\n    height: 1.5rem;\n    flex: 0 0 auto;\n}\n\nprogress[value] {\n    box-sizing: border-box;\n    margin: 1rem 0;\n    appearance: none;\n    border: none;\n    height: 0.5rem;\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n    position: relative;\n    overflow: hidden;\n}\n\nprogress[value]::-webkit-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n}\n\nprogress[value]::-webkit-progress-value {\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n}\n\nprogress[value]::-moz-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n}\n\nfieldset {\n    margin: 1rem 0;\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n}\n\nfieldset > legend {\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section-opacity-50);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n    font-size: 80%;\n    padding: 0.25em 1em;\n    border-radius: 100vw;\n}\n\n.theme-flashing-text {\n    animation: theme-flashing-text-anim 1s infinite;\n}\n\n@keyframes theme-flashing-text-anim {\n    0% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n    50% {\n        text-shadow: 0 0 0.2em var(--theme-color-accent);\n    }\n    100% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n}\n\n*:focus {\n    outline: 3px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n}\n*:focus:not(:focus-visible) {\n    outline: none;\n}\n\n.theme-color-primary {\n    background-color: var(--theme-color-primary);\n    color: var(--theme-color-on-primary);\n}\n.theme-color-primary-dark {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n}\n.theme-color-primary-light {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n.theme-color-accent {\n    background-color: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n.theme-color-accent-dark {\n    background-color: var(--theme-color-accent-dark);\n    color: var(--theme-color-on-accent-dark);\n}\n.theme-color-accent-light {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n.theme-color-screen {\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen);\n}\n.theme-color-frame {\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n.theme-color-section {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n}\n.theme-color-input {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n}\n.theme-color-error {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.theme-shadow-card {\n    box-shadow: var(--theme-shadow-card);\n}\n.theme-shadow-button {\n    box-shadow: var(--theme-shadow-button);\n}\n.theme-shadow-header {\n    box-shadow: var(--theme-shadow-header);\n}\n.theme-shadow-button-pressed {\n    box-shadow: var(--theme-shadow-button-pressed);\n}\n.theme-shadow-dialog {\n    box-shadow: var(--theme-shadow-dialog);\n}\n\na, a:visited { color: var(--theme-color-link) }","",{version:3,sources:["webpack://./src/ui/theme/theme.css"],names:[],mappings:"AAAA,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;;AAEhB,qBAAqB;AACrB;;;EAGE,sBAAsB;AACxB;;AAEA,0BAA0B;AAC1B;;;;;;;;;;EAUE,SAAS;AACX;;AAEA,2GAA2G;AAC3G;;EAEE,gBAAgB;AAClB;;AAEA,2BAA2B;AAC3B;EACE,uBAAuB;AACzB;;AAEA,2BAA2B;AAC3B;EACE,iBAAiB;EACjB,6BAA6B;EAC7B,gBAAgB;AAClB;;AAEA,0DAA0D;AAC1D;EACE,8BAA8B;AAChC;;AAEA,oCAAoC;AACpC;;EAEE,eAAe;EACf,cAAc;AAChB;;AAEA,yCAAyC;AACzC;;;;EAIE,aAAa;AACf;;AAEA;uCACuC;AACvC;EACE;GACC,qBAAqB;EACtB;;EAEA;;;IAGE,qCAAqC;IACrC,uCAAuC;IACvC,sCAAsC;IACtC,gCAAgC;EAClC;AACF;;AAEA,UAAU;AACV,UAAU;AACV,UAAU;;AAEV;IACI,uBAAuB;IACvB,eAAe;AACnB;;AAEA,UAAU;AACV;IACI,wCAAwC;IACxC,uCAAuC;AAC3C;AACA;EACE,SAAS;AACX;AACA;IACI,6CAA6C;IAC7C,mBAAmB;IACnB,eAAe;AACnB;;AAEA;;IAEI,mCAAmC;IACnC,0EAA0E;IAC1E,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,WAAW;IACX,cAAc;IACd;;;;;;KAMC;AACL;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,iDAAiD;IACjD,yCAAyC;IACzC,UAAU;IACV,UAAU;AACd;;AAEA;IACI,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,sBAAsB;IACtB,cAAc;IACd,gBAAgB;IAChB,YAAY;IACZ,cAAc;IACd;;;;;;;6EAOyE;IACzE,qBAAqB;IACrB,2EAA2E;IAC3E,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI;;;;;;;6EAOyE;IACzE,qBAAqB;IACrB,2EAA2E;AAC/E;;AAEA;IACI,kDAAkD;IAClD,qBAAqB;IACrB,iDAAiD;IACjD;;;;;;;;;;;;;;;;;;;SAmBK;AACT;;AAEA;IACI;;;;;;;;;;;;;;;;;;;SAmBK;IACL,kDAAkD;IAClD,qBAAqB;IACrB,iDAAiD;AACrD;;AAEA;IACI,cAAc;IACd,sCAAsC;IACtC,oCAAoC;IACpC,0DAA0D;AAC9D;;AAEA;IACI,sCAAsC;IACtC,+CAA+C;IAC/C,0DAA0D;IAC1D,cAAc;IACd,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,+CAA+C;AACnD;;AAEA;IACI;QACI,kCAAkC;IACtC;IACA;QACI,gDAAgD;IACpD;IACA;QACI,kCAAkC;IACtC;AACJ;;AAEA;IACI,6CAA6C;IAC7C,mBAAmB;AACvB;AACA;IACI,aAAa;AACjB;;AAEA;IACI,4CAA4C;IAC5C,oCAAoC;AACxC;AACA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C;AACA;IACI,kDAAkD;IAClD,0CAA0C;AAC9C;AACA;IACI,2CAA2C;IAC3C,mCAAmC;AACvC;AACA;IACI,gDAAgD;IAChD,wCAAwC;AAC5C;AACA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C;AACA;IACI,2CAA2C;IAC3C,mCAAmC;AACvC;AACA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;AACA;IACI,4CAA4C;IAC5C,oCAAoC;AACxC;AACA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;AACA;IACI,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA;IACI,oCAAoC;AACxC;AACA;IACI,sCAAsC;AAC1C;AACA;IACI,sCAAsC;AAC1C;AACA;IACI,8CAA8C;AAClD;AACA;IACI,sCAAsC;AAC1C;;AAEA,eAAe,+BAA+B",sourcesContent:["/***************/\n/** RESET CSS **/\n/***************/\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for\n   people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n   scroll-behavior: auto;\n  }\n  \n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/*********/\n/* Theme */\n/*********/\n\nhtml {\n    font-family: sans-serif;\n    font-size: 16px;\n}\n\n/* Focus */\n* {\n    -webkit-tap-highlight-color: transparent;\n    accent-color: var(--theme-color-accent);\n}\n*::-moz-focus-inner {\n  border: 0;\n}\n*:focus {\n    outline: 2px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n    z-index: 999999;\n}\n\nh1,\nh2 {\n    border: 0.0625em solid currentColor;\n    border-image: linear-gradient(to right, currentColor, transparent) 0 0 1 0;\n    margin: 0.5rem 0 1rem 0;\n}\n\nh1 {\n    font-size: 1.2rem;\n}\n\nh2 {\n    font-size: 1.1rem;\n}\n\nhr {\n    border: none;\n    height: 1px;\n    width: 100%;\n    margin: 1rem 0;\n    background-image: linear-gradient(\n        to left,\n        transparent,\n        currentColor,\n        currentColor,\n        transparent\n    );\n}\n\n.theme-header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 2rem;\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n    padding: 0;\n    z-index: 1;\n}\n\n.theme-header > * {\n    flex: 1 1 auto;\n    margin: 0 0.5rem;\n}\n\n.theme-header > div {\n    text-align: center;\n}\n\n.theme-header > div:first-child {\n    text-align: left;\n}\n\n.theme-header > svg,\n.theme-header > img {\n    height: 1.5rem;\n    flex: 0 0 auto;\n}\n\nprogress[value] {\n    box-sizing: border-box;\n    margin: 1rem 0;\n    appearance: none;\n    border: none;\n    height: 0.5rem;\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n    position: relative;\n    overflow: hidden;\n}\n\nprogress[value]::-webkit-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(var(--theme-color-screen), var(--theme-color-screen));\n    border-radius: 0.5rem;\n    box-shadow: 0 0.125rem 0.25rem #0007 inset, 0 -0.125rem 0.25rem #fff7 inset;\n}\n\nprogress[value]::-webkit-progress-value {\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n}\n\nprogress[value]::-moz-progress-bar {\n    background-image: linear-gradient(\n            to top,\n            transparent,\n            transparent 50%,\n            #fff7 50%,\n            #fff7\n        ),\n        linear-gradient(\n            135deg,\n            transparent,\n            transparent 33%,\n            #0002 33%,\n            #0002 66%,\n            transparent 66%\n        ),\n        linear-gradient(\n            to top,\n            var(--theme-color-primary-light),\n            var(--theme-color-primary-dark)\n        );\n    background-size: 100% 100%, 1.5rem 1rem, 100% 100%;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 0.5rem var(--theme-color-primary);\n}\n\nfieldset {\n    margin: 1rem 0;\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n}\n\nfieldset > legend {\n    background: var(--theme-color-section);\n    color: var(--theme-color-on-section-opacity-50);\n    border: 1px solid var(--theme-color-on-section-opacity-30);\n    font-size: 80%;\n    padding: 0.25em 1em;\n    border-radius: 100vw;\n}\n\n.theme-flashing-text {\n    animation: theme-flashing-text-anim 1s infinite;\n}\n\n@keyframes theme-flashing-text-anim {\n    0% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n    50% {\n        text-shadow: 0 0 0.2em var(--theme-color-accent);\n    }\n    100% {\n        text-shadow: 0 0 0.2em transparent;\n    }\n}\n\n*:focus {\n    outline: 3px dotted var(--theme-color-accent);\n    outline-offset: 2px;\n}\n*:focus:not(:focus-visible) {\n    outline: none;\n}\n\n.theme-color-primary {\n    background-color: var(--theme-color-primary);\n    color: var(--theme-color-on-primary);\n}\n.theme-color-primary-dark {\n    background-color: var(--theme-color-primary-dark);\n    color: var(--theme-color-on-primary-dark);\n}\n.theme-color-primary-light {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n.theme-color-accent {\n    background-color: var(--theme-color-accent);\n    color: var(--theme-color-on-accent);\n}\n.theme-color-accent-dark {\n    background-color: var(--theme-color-accent-dark);\n    color: var(--theme-color-on-accent-dark);\n}\n.theme-color-accent-light {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n.theme-color-screen {\n    background-color: var(--theme-color-screen);\n    color: var(--theme-color-on-screen);\n}\n.theme-color-frame {\n    background-color: var(--theme-color-frame);\n    color: var(--theme-color-on-frame);\n}\n.theme-color-section {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n}\n.theme-color-input {\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n}\n.theme-color-error {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.theme-shadow-card {\n    box-shadow: var(--theme-shadow-card);\n}\n.theme-shadow-button {\n    box-shadow: var(--theme-shadow-button);\n}\n.theme-shadow-header {\n    box-shadow: var(--theme-shadow-header);\n}\n.theme-shadow-button-pressed {\n    box-shadow: var(--theme-shadow-button-pressed);\n}\n.theme-shadow-dialog {\n    box-shadow: var(--theme-shadow-dialog);\n}\n\na, a:visited { color: var(--theme-color-link) }"],sourceRoot:""}]);const s=a},1963:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,"div.ui-view-ButtonView {\n    position: relative;\n    margin: 0.5rem;\n}\n\ndiv.ui-view-ButtonView > button {\n    position: relative;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.25rem;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n    line-height: 1;\n}\n\ndiv.ui-view-ButtonView.flat > button,\ndiv.ui-view-ButtonView.flat > button:hover {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: none;\n}\n\ndiv.ui-view-ButtonView.outline > button {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: 0 0 0 0.25rem currentcolor inset, var(--theme-shadow-button);\n}\n\ndiv.ui-view-ButtonView > button > svg {\n    height: 1.5rem;\n    margin: 0 1rem 0 0;\n}\ndiv.ui-view-ButtonView > button > div {\n    order: 1;\n}\ndiv.ui-view-ButtonView.flip > button > svg {\n    order: 2;\n    margin: 0 0 0 1rem;\n}\n\ndiv.ui-view-ButtonView.wide > button {\n    display: flex;\n    width: 100%;\n    margin: 0.5rem 0;\n}\n\ndiv.ui-view-ButtonView > button > * {\n    flex: 0 0 auto;\n}\n\ndiv.ui-view-ButtonView.disabled > button {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\ndiv.ui-view-ButtonView > button:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView.flat > button:active {\n    box-shadow: none;\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView > button > div.label {\n    flex: 1 1 auto;\n    text-align: center;\n}\n\ndiv.ui-view-ButtonView > label.error {\n    position: absolute;\n    left: 0;\n    right: 0;\n    width: 100%;\n    opacity: 1;\n    transform: translateY(-100%);\n}\n","",{version:3,sources:["webpack://./src/ui/view/button/button-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,sBAAsB;IACtB,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,sBAAsB;IACtB,wBAAwB;IACxB,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,eAAe;IACf,sCAAsC;IACtC,oBAAoB;IACpB,wBAAwB;IACxB,cAAc;AAClB;;AAEA;;IAEI,6BAA6B;IAC7B,iCAAiC;IACjC,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;IAC7B,iCAAiC;IACjC,wEAAwE;AAC5E;;AAEA;IACI,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,QAAQ;AACZ;AACA;IACI,QAAQ;IACR,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,8CAA8C;IAC9C,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;IAChB,wBAAwB;AAC5B;;AAEA;IACI,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,WAAW;IACX,UAAU;IACV,4BAA4B;AAChC",sourcesContent:["div.ui-view-ButtonView {\n    position: relative;\n    margin: 0.5rem;\n}\n\ndiv.ui-view-ButtonView > button {\n    position: relative;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.25rem;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n    line-height: 1;\n}\n\ndiv.ui-view-ButtonView.flat > button,\ndiv.ui-view-ButtonView.flat > button:hover {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: none;\n}\n\ndiv.ui-view-ButtonView.outline > button {\n    background-color: transparent;\n    color: var(--theme-color-primary);\n    box-shadow: 0 0 0 0.25rem currentcolor inset, var(--theme-shadow-button);\n}\n\ndiv.ui-view-ButtonView > button > svg {\n    height: 1.5rem;\n    margin: 0 1rem 0 0;\n}\ndiv.ui-view-ButtonView > button > div {\n    order: 1;\n}\ndiv.ui-view-ButtonView.flip > button > svg {\n    order: 2;\n    margin: 0 0 0 1rem;\n}\n\ndiv.ui-view-ButtonView.wide > button {\n    display: flex;\n    width: 100%;\n    margin: 0.5rem 0;\n}\n\ndiv.ui-view-ButtonView > button > * {\n    flex: 0 0 auto;\n}\n\ndiv.ui-view-ButtonView.disabled > button {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\ndiv.ui-view-ButtonView > button:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView.flat > button:active {\n    box-shadow: none;\n    filter: brightness(150%);\n}\n\ndiv.ui-view-ButtonView > button > div.label {\n    flex: 1 1 auto;\n    text-align: center;\n}\n\ndiv.ui-view-ButtonView > label.error {\n    position: absolute;\n    left: 0;\n    right: 0;\n    width: 100%;\n    opacity: 1;\n    transform: translateY(-100%);\n}\n"],sourceRoot:""}]);const s=a},2865:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,'.ui-view-CheckboxView {\n    padding: 0;\n    border: none;\n    background: transparent;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    cursor: pointer;\n    color: inherit;\n    margin: 0.25rem;\n}\n\n.ui-view-CheckboxView[disabled] {\n    opacity: 0.5;\n    font-style: italic;\n    cursor: default;\n    pointer-events: none;\n    font-style: italic;\n}\n\n.ui-view-CheckboxView.wide {\n    display: flex;\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-CheckboxView > div.label {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-grow: 1;\n    text-align: left;\n    transition: opacity 0.2s;\n    cursor: pointer;\n    padding: 0 0.75em;\n    order: 1;\n}\n\n.ui-view-CheckboxView.reverse > div.label {\n    order: -1;\n}\n\n.ui-view-CheckboxView > div.pin {\n    position: relative;\n    width: 34px;\n    height: 20px;\n    overflow: visible;\n    flex-grow: 0;\n    margin: 0.125rem;\n    order: 0;\n}\n\n.ui-view-CheckboxView > div.pin > div.bar {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-primary-light);\n    filter: grayscale(100%);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.bar {\n    filter: none;\n}\n\n.ui-view-CheckboxView > div.pin > div.btn {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin: 0;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    transform: translateX(0);\n    transition: transform 0.2s, opacity 0.2s;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-section);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.btn {\n    background-color: var(--theme-color-primary-dark);\n    transform: translateX(14px);\n}\n\n.ui-view-CheckboxView > header.hide {\n    display: none;\n}\n',"",{version:3,sources:["webpack://./src/ui/view/checkbox/checkbox-view.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,2BAA2B;IAC3B,uBAAuB;IACvB,eAAe;IACf,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,oBAAoB;IACpB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;IACvB,YAAY;IACZ,gBAAgB;IAChB,wBAAwB;IACxB,eAAe;IACf,iBAAiB;IACjB,QAAQ;AACZ;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,gBAAgB;IAChB,QAAQ;AACZ;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,sCAAsC;IACtC,kDAAkD;IAClD,uBAAuB;AAC3B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,SAAS;IACT,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,wBAAwB;IACxB,wCAAwC;IACxC,sCAAsC;IACtC,4CAA4C;AAChD;;AAEA;IACI,iDAAiD;IACjD,2BAA2B;AAC/B;;AAEA;IACI,aAAa;AACjB",sourcesContent:['.ui-view-CheckboxView {\n    padding: 0;\n    border: none;\n    background: transparent;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    cursor: pointer;\n    color: inherit;\n    margin: 0.25rem;\n}\n\n.ui-view-CheckboxView[disabled] {\n    opacity: 0.5;\n    font-style: italic;\n    cursor: default;\n    pointer-events: none;\n    font-style: italic;\n}\n\n.ui-view-CheckboxView.wide {\n    display: flex;\n    width: 100%;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-CheckboxView > div.label {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    flex-grow: 1;\n    text-align: left;\n    transition: opacity 0.2s;\n    cursor: pointer;\n    padding: 0 0.75em;\n    order: 1;\n}\n\n.ui-view-CheckboxView.reverse > div.label {\n    order: -1;\n}\n\n.ui-view-CheckboxView > div.pin {\n    position: relative;\n    width: 34px;\n    height: 20px;\n    overflow: visible;\n    flex-grow: 0;\n    margin: 0.125rem;\n    order: 0;\n}\n\n.ui-view-CheckboxView > div.pin > div.bar {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-primary-light);\n    filter: grayscale(100%);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.bar {\n    filter: none;\n}\n\n.ui-view-CheckboxView > div.pin > div.btn {\n    content: ".";\n    font-size: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    margin: 0;\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    transform: translateX(0);\n    transition: transform 0.2s, opacity 0.2s;\n    box-shadow: var(--theme-shadow-button);\n    background-color: var(--theme-color-section);\n}\n\n.ui-view-CheckboxView.ok > div.pin > div.btn {\n    background-color: var(--theme-color-primary-dark);\n    transform: translateX(14px);\n}\n\n.ui-view-CheckboxView > header.hide {\n    display: none;\n}\n'],sourceRoot:""}]);const s=a},7471:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,"button.ui-view-FloatingButtonView {\n    font: inherit;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    border-radius: 50%;\n    width: 3.5rem;\n    height: 3.5rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n}\n\nbutton.ui-view-FloatingButtonView.small {\n    width: 2.5rem;\n    height: 2.5rem;\n}\n\nbutton.ui-view-FloatingButtonView.disabled {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\nbutton.ui-view-FloatingButtonView:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\nbutton.ui-view-FloatingButtonView > svg {\n    width: 80%;\n    height: 80%;\n}","",{version:3,sources:["webpack://./src/ui/view/floating-button/floating-button-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;IAClB,aAAa;IACb,cAAc;IACd,eAAe;IACf,sCAAsC;IACtC,oBAAoB;IACpB,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,8CAA8C;IAC9C,wBAAwB;AAC5B;;AAEA;IACI,UAAU;IACV,WAAW;AACf",sourcesContent:["button.ui-view-FloatingButtonView {\n    font: inherit;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    border-radius: 50%;\n    width: 3.5rem;\n    height: 3.5rem;\n    cursor: pointer;\n    box-shadow: var(--theme-shadow-button);\n    transition: all 0.2s;\n    filter: brightness(100%);\n}\n\nbutton.ui-view-FloatingButtonView.small {\n    width: 2.5rem;\n    height: 2.5rem;\n}\n\nbutton.ui-view-FloatingButtonView.disabled {\n    cursor: default;\n    pointer-events: none;\n    box-shadow: none;\n    opacity: 0.5;\n    filter: grayscale(100%);\n}\n\nbutton.ui-view-FloatingButtonView:active {\n    box-shadow: var(--theme-shadow-button-pressed);\n    filter: brightness(150%);\n}\n\nbutton.ui-view-FloatingButtonView > svg {\n    width: 80%;\n    height: 80%;\n}"],sourceRoot:""}]);const s=a},7071:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".ui-view-IconView {\n    display: inline-block;\n    padding: 0;\n    transition: all 0.3s;\n    flex: 0 0 auto;\n}\n\n.ui-view-IconView.clickable {\n    cursor: pointer;\n}\n\n.ui-view-IconView.clickable:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.ui-view-IconView > svg {\n    height: 100%;\n}\n\n.ui-view-IconView.animate {\n    animation: ui-view-IconView-anim 1s linear infinite;\n}\n\n@keyframes ui-view-IconView-anim {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(-360deg); } \n}\n","",{version:3,sources:["webpack://./src/ui/view/icon/icon-view.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,UAAU;IACV,oBAAoB;IACpB,cAAc;AAClB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,qBAAqB;AACzB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,mDAAmD;AACvD;;AAEA;EACE;IACE,uBAAuB,EAAE;EAC3B;IACE,0BAA0B,EAAE;AAChC",sourcesContent:[".ui-view-IconView {\n    display: inline-block;\n    padding: 0;\n    transition: all 0.3s;\n    flex: 0 0 auto;\n}\n\n.ui-view-IconView.clickable {\n    cursor: pointer;\n}\n\n.ui-view-IconView.clickable:active {\n    filter: brightness(150%);\n    transform: scale(0.9);\n}\n\n.ui-view-IconView > svg {\n    height: 100%;\n}\n\n.ui-view-IconView.animate {\n    animation: ui-view-IconView-anim 1s linear infinite;\n}\n\n@keyframes ui-view-IconView-anim {\n  0% {\n    transform: rotate(0deg); }\n  100% {\n    transform: rotate(-360deg); } \n}\n"],sourceRoot:""}]);const s=a},7148:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".ui-view-input-IntegerView {}\n","",{version:3,sources:["webpack://./src/ui/view/input/integer/integer-view.css"],names:[],mappings:"AAAA,4BAA4B",sourcesContent:[".ui-view-input-IntegerView {}\n"],sourceRoot:""}]);const s=a},944:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".ui-view-input-TextView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-input-TextView input {\n    line-height: 2rem;\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n}\n\n.ui-view-input-TextView.invalid input,\n.ui-view-input-TextView.invalid input:focus {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.ui-view-input-TextView input:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n\n.ui-view-input-TextView input[disabled] {\n    box-shadow: none;\n    outline: 1px solid var(--theme-color-input-opacity-50);\n    background-color: inherit;\n    color: inherit;\n}\n\n.ui-view-input-TextView.wide {\n    display: flex;\n    width: 100%;\n    box-sizing: content-box;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-input-TextView.wide * {\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.ui-view-input-TextView .hide {\n    opacity: 0;\n}\n","",{version:3,sources:["webpack://./src/ui/view/input/text/text-view.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,0CAA0C;IAC1C,kCAAkC;IAClC,YAAY;IACZ,sCAAsC;IACtC,iBAAiB;AACrB;;AAEA;;IAEI,0CAA0C;IAC1C,kCAAkC;AACtC;;AAEA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C;;AAEA;IACI,gBAAgB;IAChB,sDAAsD;IACtD,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,WAAW;IACX,uBAAuB;IACvB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,sBAAsB;AAC1B;;AAEA;IACI,UAAU;AACd",sourcesContent:[".ui-view-input-TextView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-input-TextView input {\n    line-height: 2rem;\n    background-color: var(--theme-color-input);\n    color: var(--theme-color-on-input);\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n}\n\n.ui-view-input-TextView.invalid input,\n.ui-view-input-TextView.invalid input:focus {\n    background-color: var(--theme-color-error);\n    color: var(--theme-color-on-error);\n}\n\n.ui-view-input-TextView input:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n\n.ui-view-input-TextView input[disabled] {\n    box-shadow: none;\n    outline: 1px solid var(--theme-color-input-opacity-50);\n    background-color: inherit;\n    color: inherit;\n}\n\n.ui-view-input-TextView.wide {\n    display: flex;\n    width: 100%;\n    box-sizing: content-box;\n    margin-left: 0;\n    margin-right: 0;\n}\n\n.ui-view-input-TextView.wide * {\n    width: 100%;\n    box-sizing: border-box;\n}\n\n.ui-view-input-TextView .hide {\n    opacity: 0;\n}\n"],sourceRoot:""}]);const s=a},1009:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".ui-view-LabelView {\n    opacity: .5;\n    font-size: .8rem;\n    line-height: 1.5rem;\n    margin: 0;\n    padding: 0 .5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.ui-view-LabelView.error {\n    color: var(--theme-color-error);\n}\n\n.ui-view-LabelView.hide {\n    visibility: hidden;\n}","",{version:3,sources:["webpack://./src/ui/view/label/label-view.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gBAAgB;IAChB,mBAAmB;IACnB,SAAS;IACT,gBAAgB;IAChB,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:[".ui-view-LabelView {\n    opacity: .5;\n    font-size: .8rem;\n    line-height: 1.5rem;\n    margin: 0;\n    padding: 0 .5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.ui-view-LabelView.error {\n    color: var(--theme-color-error);\n}\n\n.ui-view-LabelView.hide {\n    visibility: hidden;\n}"],sourceRoot:""}]);const s=a},657:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".ui-view-SimpleComboView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-SimpleComboView.wide {\n    display: flex;\n    width: 100%;\n}\n\n.ui-view-SimpleComboView select {\n    width: 100%;\n    line-height: 2rem;\n    height: 2rem;\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n    appearance: none;\n    position: relative;\n    z-index: 0;\n}\n\n.ui-view-SimpleComboView div.container {\n    position: relative;\n    padding: 0;\n    margin: 0;\n}\n\n.ui-view-SimpleComboView div.container > div.dropdown-button {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 1.5rem;\n    display: grid;\n    place-items: center;\n    pointer-events: none;\n    border-left: 1px solid var(--theme-color-on-primary-opacity-25);\n    z-index: 1;\n}\n\n.ui-view-SimpleComboView select:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n","",{version:3,sources:["webpack://./src/ui/view/simple-combo/simple-combo-view.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,WAAW;AACf;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,sCAAsC;IACtC,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,SAAS;IACT,QAAQ;IACR,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,oBAAoB;IACpB,+DAA+D;IAC/D,UAAU;AACd;;AAEA;IACI,iDAAiD;IACjD,yCAAyC;AAC7C",sourcesContent:[".ui-view-SimpleComboView {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0.25rem;\n}\n\n.ui-view-SimpleComboView.wide {\n    display: flex;\n    width: 100%;\n}\n\n.ui-view-SimpleComboView select {\n    width: 100%;\n    line-height: 2rem;\n    height: 2rem;\n    border: none;\n    box-shadow: var(--theme-shadow-button);\n    padding: 0 0.5rem;\n    appearance: none;\n    position: relative;\n    z-index: 0;\n}\n\n.ui-view-SimpleComboView div.container {\n    position: relative;\n    padding: 0;\n    margin: 0;\n}\n\n.ui-view-SimpleComboView div.container > div.dropdown-button {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 1.5rem;\n    display: grid;\n    place-items: center;\n    pointer-events: none;\n    border-left: 1px solid var(--theme-color-on-primary-opacity-25);\n    z-index: 1;\n}\n\n.ui-view-SimpleComboView select:focus {\n    background-color: var(--theme-color-accent-light);\n    color: var(--theme-color-on-accent-light);\n}\n"],sourceRoot:""}]);const s=a},1404:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".ui-view-SliderView {\n    min-width: 2rem;\n    margin: 0 1rem;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\n.ui-view-SliderView.wide {\n    width: calc(100% - 2rem);\n}\n\n","",{version:3,sources:["webpack://./src/ui/view/slider/slider.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,cAAc;IACd,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;AACxB;;AAEA;IACI,wBAAwB;AAC5B",sourcesContent:[".ui-view-SliderView {\n    min-width: 2rem;\n    margin: 0 1rem;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n}\n\n.ui-view-SliderView.wide {\n    width: calc(100% - 2rem);\n}\n\n"],sourceRoot:""}]);const s=a},7539:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".ui-view-TabstripView {\n    --tabstrip-bg: var(--theme-color-section);\n    --tabstrip-fg: var(--theme-color-on-section);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.ui-view-TabstripView > header {\n    flex: 0 0 auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-end;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    color: inherit;\n}\n\n.ui-view-TabstripView > header > * {\n    flex: 1 1 auto;\n}\n\n.ui-view-TabstripView > header > button,\n.ui-view-TabstripView > header > button:hover {\n    flex: 0 0 auto;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.5rem 0.5rem 0 0;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: none;\n    transition: filter 0.2s;\n    filter: brightness(100%);\n    margin: 0;\n    background: transparent;\n    color: currentColor;\n}\n\n.ui-view-TabstripView > header > button:active {\n    filter: brightness(150%);\n}\n\n.ui-view-TabstripView > header > button.selected {\n    background-color: var(--tabstrip-bg);\n    color: var(--tabstrip-fg);\n    pointer-events: none;\n    cursor: default;\n}\n\n.ui-view-TabstripView > main {\n    flex: 1 1 auto;\n    background-color: var(--tabstrip-bg);\n    color: var(--tabstrip-fg);\n    padding: 0.5rem;\n    overflow: auto;\n}\n\n.ui-view-TabstripView > main > div {\n    display: none;\n}\n\n.ui-view-TabstripView > main > div.selected {\n    display: block;\n}\n","",{version:3,sources:["webpack://./src/ui/view/tabstrip/tabstrip-view.css"],names:[],mappings:"AAAA;IACI,yCAAyC;IACzC,4CAA4C;IAC5C,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;AACV;;AAEA;IACI,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,qBAAqB;IACrB,SAAS;IACT,UAAU;IACV,6BAA6B;IAC7B,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;;IAEI,cAAc;IACd,sBAAsB;IACtB,aAAa;IACb,oBAAoB;IACpB,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,gCAAgC;IAChC,wBAAwB;IACxB,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,uBAAuB;IACvB,wBAAwB;IACxB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,oCAAoC;IACpC,yBAAyB;IACzB,oBAAoB;IACpB,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,oCAAoC;IACpC,yBAAyB;IACzB,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB",sourcesContent:[".ui-view-TabstripView {\n    --tabstrip-bg: var(--theme-color-section);\n    --tabstrip-fg: var(--theme-color-on-section);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.ui-view-TabstripView > header {\n    flex: 0 0 auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-end;\n    margin: 0;\n    padding: 0;\n    background-color: transparent;\n    color: inherit;\n}\n\n.ui-view-TabstripView > header > * {\n    flex: 1 1 auto;\n}\n\n.ui-view-TabstripView > header > button,\n.ui-view-TabstripView > header > button:hover {\n    flex: 0 0 auto;\n    box-sizing: border-box;\n    font: inherit;\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: none;\n    border-radius: 0.5rem 0.5rem 0 0;\n    font-variant: small-caps;\n    font-weight: bolder;\n    height: 2.25rem;\n    padding: 0 1rem;\n    cursor: pointer;\n    box-shadow: none;\n    transition: filter 0.2s;\n    filter: brightness(100%);\n    margin: 0;\n    background: transparent;\n    color: currentColor;\n}\n\n.ui-view-TabstripView > header > button:active {\n    filter: brightness(150%);\n}\n\n.ui-view-TabstripView > header > button.selected {\n    background-color: var(--tabstrip-bg);\n    color: var(--tabstrip-fg);\n    pointer-events: none;\n    cursor: default;\n}\n\n.ui-view-TabstripView > main {\n    flex: 1 1 auto;\n    background-color: var(--tabstrip-bg);\n    color: var(--tabstrip-fg);\n    padding: 0.5rem;\n    overflow: auto;\n}\n\n.ui-view-TabstripView > main > div {\n    display: none;\n}\n\n.ui-view-TabstripView > main > div.selected {\n    display: block;\n}\n"],sourceRoot:""}]);const s=a},4854:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,'div.view-CodeEditorView {\n    position: relative;\n    margin: 0;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 1rem;\n    color: #fffb;\n    background-color: #333;\n    padding: 1em;\n    line-height: 1.2;\n}\n\ndiv.view-CodeEditorView pre .comment {\n    color: #fff7;\n}\n\ndiv.view-CodeEditorView pre .number {\n    color: #fff;\n    font-weight: bolder;\n}\n\ndiv.view-CodeEditorView pre .type {\n    color: #cf9;\n}\n\ndiv.view-CodeEditorView pre .keyword {\n    color: #07f;\n}\n\ndiv.view-CodeEditorView pre .global {\n    color: #f70;\n}\n\ndiv.view-CodeEditorView pre .function {\n    color: #ed0;\n    font-weight: bold;\n}',"",{version:3,sources:["webpack://./src/view/code-editor/code-editor-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,SAAS;IACT,sEAAsE;IACtE,eAAe;IACf,YAAY;IACZ,sBAAsB;IACtB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;IACX,iBAAiB;AACrB",sourcesContent:['div.view-CodeEditorView {\n    position: relative;\n    margin: 0;\n    font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;\n    font-size: 1rem;\n    color: #fffb;\n    background-color: #333;\n    padding: 1em;\n    line-height: 1.2;\n}\n\ndiv.view-CodeEditorView pre .comment {\n    color: #fff7;\n}\n\ndiv.view-CodeEditorView pre .number {\n    color: #fff;\n    font-weight: bolder;\n}\n\ndiv.view-CodeEditorView pre .type {\n    color: #cf9;\n}\n\ndiv.view-CodeEditorView pre .keyword {\n    color: #07f;\n}\n\ndiv.view-CodeEditorView pre .global {\n    color: #f70;\n}\n\ndiv.view-CodeEditorView pre .function {\n    color: #ed0;\n    font-weight: bold;\n}'],sourceRoot:""}]);const s=a},4868:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".view-CodeView {\n    overflow: auto;\n    border-radius: .5rem;\n    margin: 2px;\n    max-width: calc(100vw - 1em);\n    margin: 1em 0;\n}\n\n.view-CodeView pre {\n    display: none;\n    margin: 0;\n    font-size: 80%;\n}\n\n.view-CodeView.expanded pre {\n    display: block;\n    white-space: pre-wrap;\n}\n\n.view-CodeView pre code {\n    background: #eee;\n}\n\n.view-CodeView > header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 .5em;\n    height: 2em;\n}\n\n.view-CodeView > header > div.label {\n    flex: 1 1 auto;\n    cursor: pointer;\n}","",{version:3,sources:["webpack://./src/view/code/code-view.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,oBAAoB;IACpB,WAAW;IACX,4BAA4B;IAC5B,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;IACf,WAAW;AACf;;AAEA;IACI,cAAc;IACd,eAAe;AACnB",sourcesContent:[".view-CodeView {\n    overflow: auto;\n    border-radius: .5rem;\n    margin: 2px;\n    max-width: calc(100vw - 1em);\n    margin: 1em 0;\n}\n\n.view-CodeView pre {\n    display: none;\n    margin: 0;\n    font-size: 80%;\n}\n\n.view-CodeView.expanded pre {\n    display: block;\n    white-space: pre-wrap;\n}\n\n.view-CodeView pre code {\n    background: #eee;\n}\n\n.view-CodeView > header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 .5em;\n    height: 2em;\n}\n\n.view-CodeView > header > div.label {\n    flex: 1 1 auto;\n    cursor: pointer;\n}"],sourceRoot:""}]);const s=a},2800:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".view-FallbackView {}\n","",{version:3,sources:["webpack://./src/view/fallback/fallback-view.css"],names:[],mappings:"AAAA,oBAAoB",sourcesContent:[".view-FallbackView {}\n"],sourceRoot:""}]);const s=a},5324:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".view-markdown-CodeView code {\n    color: var(--theme-color-on-accent-light);\n    background-color: var(--theme-color-accent-light);\n}\n","",{version:3,sources:["webpack://./src/view/markdown/code/code-view.css"],names:[],mappings:"AAAA;IACI,yCAAyC;IACzC,iDAAiD;AACrD",sourcesContent:[".view-markdown-CodeView code {\n    color: var(--theme-color-on-accent-light);\n    background-color: var(--theme-color-accent-light);\n}\n"],sourceRoot:""}]);const s=a},4051:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".view-MarkdownView {\n    padding: 1em;\n    margin: 0.5em 0;\n}\n\n.view-MarkdownView table {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border-collapse: collapse;\n}\n\n.view-MarkdownView table th {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n\n.view-MarkdownView table th,\n.view-MarkdownView table td {\n    border: 1px solid var(--theme-color-on-frame);\n    padding: 0.25em 0.5em;\n    text-align: center;\n}\n\n.view-MarkdownView code {\n    color: var(--theme-color-on-accent-light);\n    background-color: var(--theme-color-accent-light);\n}\n\n.view-MarkdownView blockquote {\n    color: var(--theme-color-on-section);\n    background-color: var(--theme-color-section);\n    padding: 1em;\n    font-style: italic;\n}","",{version:3,sources:["webpack://./src/view/markdown/markdown-view.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,4CAA4C;IAC5C,oCAAoC;IACpC,yBAAyB;AAC7B;;AAEA;IACI,kDAAkD;IAClD,0CAA0C;AAC9C;;AAEA;;IAEI,6CAA6C;IAC7C,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,yCAAyC;IACzC,iDAAiD;AACrD;;AAEA;IACI,oCAAoC;IACpC,4CAA4C;IAC5C,YAAY;IACZ,kBAAkB;AACtB",sourcesContent:[".view-MarkdownView {\n    padding: 1em;\n    margin: 0.5em 0;\n}\n\n.view-MarkdownView table {\n    background-color: var(--theme-color-section);\n    color: var(--theme-color-on-section);\n    border-collapse: collapse;\n}\n\n.view-MarkdownView table th {\n    background-color: var(--theme-color-primary-light);\n    color: var(--theme-color-on-primary-light);\n}\n\n.view-MarkdownView table th,\n.view-MarkdownView table td {\n    border: 1px solid var(--theme-color-on-frame);\n    padding: 0.25em 0.5em;\n    text-align: center;\n}\n\n.view-MarkdownView code {\n    color: var(--theme-color-on-accent-light);\n    background-color: var(--theme-color-accent-light);\n}\n\n.view-MarkdownView blockquote {\n    color: var(--theme-color-on-section);\n    background-color: var(--theme-color-section);\n    padding: 1em;\n    font-style: italic;\n}"],sourceRoot:""}]);const s=a},2779:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".view-SceneView {\n    margin: 0.5em;\n}\n\n.view-SceneView > footer{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n}   \n\n.view-SceneView > canvas {\n    width: calc(100% - 1em);\n    max-width: calc(100vw - 1rem);\n    width: 100%;\n    height: 480px;\n    max-height: 90vmin;\n}\n\n.view-SceneView.small > canvas {\n    height: 240px;\n}\n\n.view-SceneView > canvas.fullscreen,\n.view-SceneView.small > canvas.fullscreen {\n    z-index: 999999;\n    position: fixed;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    max-width: none;\n    max-height: none;\n}\n","",{version:3,sources:["webpack://./src/view/scene/scene-view.css"],names:[],mappings:"AAAA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,6BAA6B;IAC7B,WAAW;IACX,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,eAAe;IACf,eAAe;IACf,OAAO;IACP,MAAM;IACN,SAAS;IACT,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,SAAS;IACT,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[".view-SceneView {\n    margin: 0.5em;\n}\n\n.view-SceneView > footer{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n}   \n\n.view-SceneView > canvas {\n    width: calc(100% - 1em);\n    max-width: calc(100vw - 1rem);\n    width: 100%;\n    height: 480px;\n    max-height: 90vmin;\n}\n\n.view-SceneView.small > canvas {\n    height: 240px;\n}\n\n.view-SceneView > canvas.fullscreen,\n.view-SceneView.small > canvas.fullscreen {\n    z-index: 999999;\n    position: fixed;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    max-width: none;\n    max-height: none;\n}\n"],sourceRoot:""}]);const s=a},9551:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,".view-ShaderCodeEditorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.view-ShaderCodeEditorView > .code-editor {\n    flex: 1 1 auto;\n    overflow: auto;\n}\n\n.view-ShaderCodeEditorView > header {\n    padding: .25em 1em;\n    border-radius: .5em .5em 0 0;\n}\n\n.view-ShaderCodeEditorView > header,\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    flex: 0 0 auto;\n}\n\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    font-size: 80%;\n    padding: 1em;\n    max-height: 40vh;\n    overflow: auto;\n    margin: 0;\n    white-space: pre-wrap;\n}","",{version:3,sources:["webpack://./src/view/shader-code-editor/shader-code-editor-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;AACV;;AAEA;IACI,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,4BAA4B;AAChC;;AAEA;;IAEI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,cAAc;IACd,SAAS;IACT,qBAAqB;AACzB",sourcesContent:[".view-ShaderCodeEditorView {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n}\n\n.view-ShaderCodeEditorView > .code-editor {\n    flex: 1 1 auto;\n    overflow: auto;\n}\n\n.view-ShaderCodeEditorView > header {\n    padding: .25em 1em;\n    border-radius: .5em .5em 0 0;\n}\n\n.view-ShaderCodeEditorView > header,\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    flex: 0 0 auto;\n}\n\n.view-ShaderCodeEditorView > pre.theme-color-error {\n    font-size: 80%;\n    padding: 1em;\n    max-height: 40vh;\n    overflow: auto;\n    margin: 0;\n    white-space: pre-wrap;\n}"],sourceRoot:""}]);const s=a},6305:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(6164),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9263:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(4958),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9317:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(3788),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},7016:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(8977),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},6943:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(9697),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},8614:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(8226),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},1865:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(100),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},935:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(5921),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},4619:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(677),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2533:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(3697),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9266:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(6750),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},4370:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(9163),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},3003:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(9722),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},9898:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(1963),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},5192:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(2865),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},8892:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(7471),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},160:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(7071),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},8291:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(7148),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},4342:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(944),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},6825:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(1009),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2384:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(657),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},357:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(1404),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},743:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(7539),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},117:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(4854),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},6850:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(4868),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},5075:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(2800),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},3605:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(5324),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2661:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(4051),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},7176:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(2779),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},2357:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>v});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),l=n.n(u),f=n(9216),d=n.n(f),A=n(4589),p=n.n(A),m=n(9551),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),o()(m.Z,h);const v=m.Z&&m.Z.locals?m.Z.locals:void 0},3397:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=s(n(8260)),u=s(n(7937)),l=i(n(7294)),f=n(9383);n(6305);var d=l.default.lazy((function(){return Promise.resolve().then((function(){return i(n(6047))}))})),A=l.default.lazy((function(){return Promise.resolve().then((function(){return i(n(6317))}))})),p=l.default.lazy((function(){return Promise.resolve().then((function(){return i(n(3604))}))})),m=l.default.lazy((function(){return Promise.resolve().then((function(){return i(n(7436))}))})),h=l.default.lazy((function(){return Promise.resolve().then((function(){return i(n(8346))}))})),v=l.default.lazy((function(){return Promise.resolve().then((function(){return i(n(8046))}))})),b=l.default.lazy((function(){return Promise.resolve().then((function(){return i(n(1352))}))})),g=l.default.lazy((function(){return Promise.resolve().then((function(){return i(n(2545))}))})),C={"#test":l.default.createElement(d,null),"#article/webgl2context":l.default.createElement(p,null),"#article/attributes":l.default.createElement(m,null),"#article/basic-perspective":l.default.createElement(b,null),"#article/instances":l.default.createElement(h,null),"#article/voronoi":l.default.createElement(v,null),"#tool/painter":l.default.createElement(g,null)};t.default=function(){var e=(0,f.useHash)(),t=a(l.default.useState(!0),2),n=t[0],r=(t[1],C[e]),o=!r||n?"show":"hide";return console.log("🚀 [app] page, navClassName = ",r,o),l.default.createElement("div",{className:"App"},l.default.createElement("div",{className:"body"},l.default.createElement(l.Suspense,{fallback:l.default.createElement(c.default,null)},null!=r?r:l.default.createElement(A,null))),l.default.createElement("nav",{className:"".concat(o," theme-shadow-header theme-color-primary-dark"),onClick:function(){return window.location.hash="#"}},l.default.createElement(u.default,{name:"menu"}),l.default.createElement("div",null,"WebGL2 Experiments"),l.default.createElement("div",null)))}},373:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(3397);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5796:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o,i=r(n(373)),a=r(n(7294)),s=r(n(3935)),c=r(n(1311));n(9317),n(9263),c.default.apply({colors:{black:"#000",white:"#fff",error:"#f30",input:"#fff",section:"#eee",frame:"#ddd",screen:"#aaa",primary:c.default.shade("#9cd"),accent:c.default.shade("#f80")}}),console.log("VERSION",a.default.version),s.default.render(a.default.createElement(a.default.StrictMode,null,a.default.createElement(i.default,null)),document.getElementById("root")),(o=document.getElementById("tgd-logo"))&&(o.classList.add("vanish"),window.setTimeout((function(){var e=o.parentNode;e&&e.removeChild(o)}),900))},6805:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),u=s(n(9681)),l=s(n(8450)),f=s(n(7105)),d=s(n(8604)),A=s(n(5260)),p=s(n(5856)),m=s(n(2920)),h=s(n(4017)),v=s(n(9615)),b=s(n(9723));function g(e){var t=["custom","BasicPerspective"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(7016),t.default=function(e){var t=c.useRef({slope:30,scale:200,x:0,y:0}),n=a(c.useState(t.current.slope),2),r=n[0],o=n[1],i=a(c.useState(t.current.scale),2),s=i[0],C=i[1],y=a(c.useState(t.current.x),2),w=y[0],_=y[1],B=a(c.useState(t.current.y),2),E=B[0],I=B[1];c.useEffect((function(){t.current.slope=r,t.current.scale=s,t.current.x=w,t.current.y=E}),[r,s,w,E]);var S=c.useCallback(function(e){return function(t){var n=document.createElement("canvas");n.width=1600,n.height=1600;var r=n.getContext("2d");if(!r)throw Error("Unable to get Canvas 2D context!");var o=0,i=0;t.canvas.addEventListener("click",(function(c){var u=t.canvas.getBoundingClientRect(),l=u.left,f=u.top,d=u.width,A=u.height,p=2*(c.clientX-l)/d-1,m=1-2*(c.clientY-f)/A;console.log("🚀 [basic-perspective] Y = ",m);var h=.01*e.current.x,v=.01*e.current.y,b=t.drawingBufferWidth/t.drawingBufferHeight,g=.01*e.current.scale,C=.01*e.current.slope;console.log("🚀 [basic-perspective] r = ",b),console.log("🚀 [basic-perspective] s = ",g),console.log("🚀 [basic-perspective] p = ",C);var y=v+m/(g*b*(1-C*m)),w=h+p/g+p*b*C*(y-v);o=w,i=y,console.log("🚀 [basic-perspective] y = ",y);var _=n.width*(1+w)*.5,B=n.height*(1-y)*.5;console.log("🚀 [basic-perspective] canvasY = ",B),r.drawImage(s,0,0),r.lineWidth=16,r.strokeStyle="#f907",r.beginPath(),r.moveTo(0,B),r.lineTo(n.width,B),r.moveTo(_,0),r.lineTo(_,n.height),r.stroke(),t.bindTexture(t.TEXTURE_2D,a),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)})),r.fillStyle="orange",r.fillText("Hello World!",1e3,600);var a=t.createTexture();if(!a)throw Error("Unable to create a texture!");t.bindTexture(t.TEXTURE_2D,a),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR);var s=new Image;s.src=d.default,s.onload=function(){r.drawImage(s,0,0),t.bindTexture(t.TEXTURE_2D,a),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)};var c=t.createTexture();if(!c)throw Error("Unable to create a texture!");var u=new Image;u.src=m.default,u.onload=function(){t.bindTexture(t.TEXTURE_2D,c),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,u)},t.bindTexture(t.TEXTURE_2D,c),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,u),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR);var l=new p.default(t,4);l.pokeVertStaticData(-1,-1,0,0,1),l.pokeVertStaticData(1,-1,0,1,1),l.pokeVertStaticData(-1,1,0,0,0),l.pokeVertStaticData(1,1,0,1,0),l.pushVertStaticArray();var f=new p.default(t,4);return f.pokeVertStaticData(-.1,0,-0,0,1),f.pokeVertStaticData(.1,0,-0,1,1),f.pokeVertStaticData(-.1,0,.2,0,0),f.pokeVertStaticData(.1,0,.2,1,0),f.pushVertStaticArray(),t.clearColor(0,.6777,1,1),new Promise((function(n){n((function(n){l.paint(n,(function(n,r){t.clear(t.COLOR_BUFFER_BIT),n.$uniTex(a),n.$uniScale(.01*e.current.scale),n.$uniRatio(t.drawingBufferWidth/t.drawingBufferHeight),n.$uniCenter(.01*e.current.x,.01*e.current.y),n.$uniSlope(.01*e.current.slope)})),f.paint(n,(function(n,r){t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),n.$uniTex(c),n.$uniScale(.01*e.current.scale),n.$uniRatio(t.drawingBufferWidth/t.drawingBufferHeight),n.$uniCenter(.01*e.current.x-o,.01*e.current.y-i),n.$uniSlope(.01*e.current.slope)}))}))}))}}(t),[t]);return c.createElement("article",{className:g(e)},c.createElement(v.default,{label:"Pente : ".concat(r," %"),wide:!0,min:0,max:100,steps:1,value:r,onChange:o}),c.createElement(v.default,{label:"Échelle : ".concat(s," %"),wide:!0,min:50,max:400,steps:1,value:s,onChange:C}),c.createElement(v.default,{label:"X : ".concat(w," %"),wide:!0,min:-100,max:100,steps:1,value:w,onChange:_}),c.createElement(v.default,{label:"Y : ".concat(E," %"),wide:!0,min:-100,max:100,steps:1,value:E,onChange:I}),c.createElement(h.default,{className:"full-width",play:!0,onInit:S}),c.createElement(A.default,null,l.default),c.createElement(u.default,{className:"left",label:"Vertex Shader",lang:"glsl",value:b.default}),c.createElement(u.default,{className:"right",label:"Fragment Shader",lang:"glsl",value:f.default}))}},1352:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(6805);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5856:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(t,n){var r=this;this.gl=t,this.vertCount=n,this.vertStaticCursor=0,this.paint=function(e,t){var n=r,o=n.gl,i=n.prg;o.useProgram(i),t&&t(r,e),o.bindVertexArray(r.vertArray),o.drawArrays(o.TRIANGLE_STRIP,0,r.vertCount),o.bindVertexArray(null)};var o=t.createProgram();if(!o)throw Error("Unable to create a WebGL Program!");e.createShader(t,o,t.VERTEX_SHADER,e.VERT),e.createShader(t,o,t.FRAGMENT_SHADER,e.FRAG),t.linkProgram(o),this.prg=o,this._$uniRatio=t.getUniformLocation(o,"uniRatio"),this._$uniCenter=t.getUniformLocation(o,"uniCenter"),this._$uniSlope=t.getUniformLocation(o,"uniSlope"),this._$uniTex=t.getUniformLocation(o,"uniTex"),this._$uniScale=t.getUniformLocation(o,"uniScale");var i=t.createVertexArray();if(!i)throw Error("Unable to create Vertex Array Object!");this.vertArray=i,t.bindVertexArray(i);var a=Float32Array.BYTES_PER_ELEMENT,s=5*a,c=t.createBuffer();if(!c)throw Error("Unable to create WebGL Buffer (vertStatic)!");this.vertStaticBuff=c,t.bindBuffer(t.ARRAY_BUFFER,c),this.vertStaticData=new Float32Array(5*n),t.bufferData(t.ARRAY_BUFFER,this.vertStaticData,t.STATIC_DRAW);var u=t.getAttribLocation(o,"attPoint");t.enableVertexAttribArray(u),t.vertexAttribPointer(u,3,t.FLOAT,!1,s,0*a),t.vertexAttribDivisor(u,0);var l=t.getAttribLocation(o,"attUV");t.enableVertexAttribArray(l),t.vertexAttribPointer(l,2,t.FLOAT,!1,s,3*a),t.vertexAttribDivisor(l,0),t.bindVertexArray(null)}return e.prototype.pushVertStaticArray=function(){var e=this.gl,t=this.vertStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.vertStaticData,e.STATIC_DRAW)},e.prototype.pushVertStaticSubArray=function(e,t){var n=this.gl,r=this.vertStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.vertStaticData.subarray(5*e,5*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*5,o)},e.prototype.pokeVertStaticData=function(e,t,n,r,o){var i=this.vertStaticCursor;if(i<0||i>=this.vertCount)throw Error("[pokeVertStaticData] Cursor out of range: vertStaticCursor = ".concat(i));var a=this.vertStaticData,s=5*i;a[s++]=e,a[s++]=t,a[s++]=n,a[s++]=r,a[s++]=o,this.vertStaticCursor++},e.prototype.destroy=function(){var e=this,t=e.gl,n=e.prg,r=e.vertStaticBuff;t.deleteBuffer(r),t.deleteProgram(n),t.deleteVertexArray(this.vertArray)},e.prototype.$uniRatio=function(e){this.gl.uniform1f(this._$uniRatio,e)},e.prototype.$uniCenter=function(e,t){this.gl.uniform2f(this._$uniCenter,e,t)},e.prototype.$uniSlope=function(e){this.gl.uniform1f(this._$uniSlope,e)},e.prototype.$uniTex=function(e){var t=this.gl;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e),t.uniform1i(this._$uniTex,0)},e.prototype.$uniScale=function(e){this.gl.uniform1f(this._$uniScale,e)},e.createShader=function(e,t,n,r){var o=e.createShader(n);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(t,o)},e.VERT="#version 300 es\n\n// (0,0) pour le centre de la carte.\nuniform vec2 uniCenter;\n// Facteur de zoom.\nuniform float uniScale;\n// Pente : 0 pour pas de perspective, 1 pour forte pente.\nuniform float uniSlope;\n// canvasl.width / canvas.height\nuniform float uniRatio;\n\nin vec3 attPoint;\nin vec2 attUV;\n\nout vec2 varUV;\n\nvoid main() {\n    vec3 point = (attPoint - vec3(uniCenter, 0.0)) * uniScale;\n    varUV = attUV;\n    point.y *= uniRatio;\n    float w = uniSlope * point.y + 1.0;\n    float z = 0.0;\n    point.y += point.z * uniRatio;\n    gl_Position = vec4(point.xy, z, w);\n}",e.FRAG="#version 300 es\n\nprecision mediump float;\n\nuniform sampler2D uniTex;\n\nin vec2 varUV;\n\nout vec4 FragColor;\n\nvoid main() {\n    FragColor = texture(uniTex, varUV);\n}",e}();t.default=n},8346:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(5889);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5889:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),u=s(n(5260)),l=s(n(1785)),f=s(n(4017)),d=s(n(9615)),A=s(n(945));function p(e){var t=["custom","BasicPerspective"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}t.default=function(e){var t=a(c.useState(1),2),n=t[0],r=t[1],o=c.useRef(n);c.useEffect((function(){o.current=n}),[n]);var i=c.useCallback(function(e){return function(t){var n=new l.default(t,12,42),r=.1,o=.55;n.pokeInstEvery7StaticData(r,o,1),n.pokeInstEvery7StaticData(r,1,o),n.pokeInstEvery7StaticData(o,r,1),n.pokeInstEvery7StaticData(1,r,o),n.pokeInstEvery7StaticData(o,1,r),n.pokeInstEvery7StaticData(1,o,r),n.pushInstEvery7StaticArray();for(var i=0;i<42;i++)n.pokeInstStaticData(360*i/42);return n.pushInstStaticArray(),n.pokeVertStaticData(0,.3,0),n.pokeVertStaticData(90,.4,1),n.pokeVertStaticData(-90,.4,1),n.pokeVertStaticData(0,.5,2),n.pokeVertStaticData(120,.25,.1),n.pokeVertStaticData(180,0,1),n.pokeVertStaticData(0,.5,2),n.pokeVertStaticData(-120,.25,.1),n.pokeVertStaticData(180,0,1),n.pokeVertStaticData(0,.4,1),n.pokeVertStaticData(60,.4,2),n.pokeVertStaticData(-60,.4,2),n.pushVertStaticArray(),t.clearColor(0,0,0,1),new Promise((function(r){r((function(r){n.instCount=e.current,n.paint(r,(function(e,n){t.clear(t.COLOR_BUFFER_BIT),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),e.$uniOpacity(1),e.$uniAngleStep(.002*n),e.$uniTrianglesScale(1+2*Math.abs(Math.sin(74545e-8*r)));var o=t.drawingBufferWidth,i=t.drawingBufferHeight;o>i?e.$uniScreenScale(i/o,1):e.$uniScreenScale(1,o/i)}))}))}))}}(o),[o]);return c.createElement("article",{className:p(e)},c.createElement(d.default,{label:"Nombre d'instances : ".concat(n),wide:!0,min:1,max:42,steps:1,value:n,onChange:r}),c.createElement(f.default,{play:!0,onInit:i}),c.createElement(u.default,null,A.default))}},1785:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(t,n,r){var o=this;this.gl=t,this.vertCount=n,this.instCount=r,this.vertStaticCursor=0,this.instEvery7StaticCursor=0,this.instStaticCursor=0,this.paint=function(e,t){var n=o,r=n.gl,i=n.prg;r.useProgram(i),t&&t(o,e),r.bindVertexArray(o.vertArray),r.drawArraysInstanced(r.TRIANGLES,0,o.vertCount,o.instCount),r.bindVertexArray(null)};var i=t.createProgram();if(!i)throw Error("Unable to create a WebGL Program!");e.createShader(t,i,t.VERTEX_SHADER,e.VERT),e.createShader(t,i,t.FRAGMENT_SHADER,e.FRAG),t.linkProgram(i),this.prg=i,this._$uniTrianglesScale=t.getUniformLocation(i,"uniTrianglesScale"),this._$uniAngleStep=t.getUniformLocation(i,"uniAngleStep"),this._$uniScreenScale=t.getUniformLocation(i,"uniScreenScale"),this._$uniOpacity=t.getUniformLocation(i,"uniOpacity");var a=t.createVertexArray();if(!a)throw Error("Unable to create Vertex Array Object!");this.vertArray=a,t.bindVertexArray(a);var s=Float32Array.BYTES_PER_ELEMENT,c=3*s,u=t.createBuffer();if(!u)throw Error("Unable to create WebGL Buffer (vertStatic)!");this.vertStaticBuff=u,t.bindBuffer(t.ARRAY_BUFFER,u),this.vertStaticData=new Float32Array(3*n),t.bufferData(t.ARRAY_BUFFER,this.vertStaticData,t.STATIC_DRAW);var l=t.getAttribLocation(i,"attVertexPolarCoords");t.enableVertexAttribArray(l),t.vertexAttribPointer(l,3,t.FLOAT,!1,c,0*s),t.vertexAttribDivisor(l,0);var f=3*s,d=t.createBuffer();if(!d)throw Error("Unable to create WebGL Buffer (instEvery7Static)!");this.instEvery7StaticBuff=d,t.bindBuffer(t.ARRAY_BUFFER,d),this.instEvery7StaticData=new Float32Array(3*Math.floor(r/7)),t.bufferData(t.ARRAY_BUFFER,this.instEvery7StaticData,t.STATIC_DRAW);var A=t.getAttribLocation(i,"attInstanceColor");t.enableVertexAttribArray(A),t.vertexAttribPointer(A,3,t.FLOAT,!1,f,0*s),t.vertexAttribDivisor(A,7);var p=1*s,m=t.createBuffer();if(!m)throw Error("Unable to create WebGL Buffer (instStatic)!");this.instStaticBuff=m,t.bindBuffer(t.ARRAY_BUFFER,m),this.instStaticData=new Float32Array(1*r),t.bufferData(t.ARRAY_BUFFER,this.instStaticData,t.STATIC_DRAW);var h=t.getAttribLocation(i,"attInstanceAngle");t.enableVertexAttribArray(h),t.vertexAttribPointer(h,1,t.FLOAT,!1,p,0*s),t.vertexAttribDivisor(h,1),t.bindVertexArray(null)}return e.prototype.pushVertStaticArray=function(){var e=this.gl,t=this.vertStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.vertStaticData,e.STATIC_DRAW)},e.prototype.pushVertStaticSubArray=function(e,t){var n=this.gl,r=this.vertStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.vertStaticData.subarray(3*e,3*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*3,o)},e.prototype.pushInstEvery7StaticArray=function(){var e=this.gl,t=this.instEvery7StaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.instEvery7StaticData,e.STATIC_DRAW)},e.prototype.pushInstEvery7StaticSubArray=function(e,t){var n=this.gl,r=this.instEvery7StaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.instEvery7StaticData.subarray(3*e,3*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*3,o)},e.prototype.pushInstStaticArray=function(){var e=this.gl,t=this.instStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.instStaticData,e.STATIC_DRAW)},e.prototype.pushInstStaticSubArray=function(e,t){var n=this.gl,r=this.instStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.instStaticData.subarray(1*e,1*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*1,o)},e.prototype.pokeVertStaticData=function(e,t,n){var r=this.vertStaticCursor;if(r<0||r>=this.vertCount)throw Error("[pokeVertStaticData] Cursor out of range: vertStaticCursor = ".concat(r));var o=this.vertStaticData,i=3*r;o[i++]=e,o[i++]=t,o[i++]=n,this.vertStaticCursor++},e.prototype.pokeInstEvery7StaticData=function(e,t,n){var r=this.instEvery7StaticCursor;if(r<0||r>=Math.floor(this.instCount/7))throw Error("[pokeInstEvery7StaticData] Cursor out of range: instEvery7StaticCursor = ".concat(r));var o=this.instEvery7StaticData,i=3*r;o[i++]=e,o[i++]=t,o[i++]=n,this.instEvery7StaticCursor++},e.prototype.pokeInstStaticData=function(e){var t=this.instStaticCursor;if(t<0||t>=this.instCount)throw Error("[pokeInstStaticData] Cursor out of range: instStaticCursor = ".concat(t));var n=1*t;this.instStaticData[n++]=e,this.instStaticCursor++},e.prototype.destroy=function(){var e=this,t=e.gl,n=e.prg,r=e.vertStaticBuff,o=e.instEvery7StaticBuff,i=e.instStaticBuff;t.deleteBuffer(r),t.deleteBuffer(o),t.deleteBuffer(i),t.deleteProgram(n),t.deleteVertexArray(this.vertArray)},e.prototype.$uniTrianglesScale=function(e){this.gl.uniform1f(this._$uniTrianglesScale,e)},e.prototype.$uniAngleStep=function(e){this.gl.uniform1f(this._$uniAngleStep,e)},e.prototype.$uniScreenScale=function(e,t){this.gl.uniform2f(this._$uniScreenScale,e,t)},e.prototype.$uniOpacity=function(e){this.gl.uniform1f(this._$uniOpacity,e)},e.createShader=function(e,t,n,r){var o=e.createShader(n);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(t,o)},e.VERT="#version 300 es\nuniform vec2 uniScreenScale;\nuniform float uniAngleStep;\nuniform float uniTrianglesScale;\nin vec3 attVertexPolarCoords;\nin vec3 attInstanceColor;\nin float attInstanceAngle;\nout vec3 varColor;\nconst float RAD_PER_DEG=0.017453292519943295;\nvoid main(){varColor=attInstanceColor*vec3(attVertexPolarCoords.z);\nfloat instAng=uniAngleStep*float(1+gl_InstanceID)*RAD_PER_DEG;\nfloat instDis=0.75-float(gl_InstanceID)*0.0138888888889;\nfloat vertAng=instAng+(attVertexPolarCoords.x+attInstanceAngle)*RAD_PER_DEG;\nfloat vertDis=attVertexPolarCoords.y*instDis*uniTrianglesScale;\nfloat x=vertDis*cos(vertAng);\nfloat y=vertDis*sin(vertAng);\nfloat cx=instDis*cos(instAng);\nfloat cy=instDis*sin(instAng);\ngl_Position=vec4(uniScreenScale*vec2(cx+x,cy+y),0.0,1.0);}",e.FRAG="#version 300 es\nprecision mediump float;\nuniform float uniOpacity;\nin vec3 varColor;\nout vec4 FragColor;\nvoid main(){FragColor=vec4(varColor,uniOpacity);}",e}();t.default=n},4750:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=i(n(7294)),l=c(n(363)),f=c(n(5260)),d=c(n(5855)),A=c(n(4017)),p=c(n(4515));function m(e){var t=["custom","pages-articles-AttributesView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function h(e){return a(this,void 0,void 0,(function(){var t;return s(this,(function(n){return(t=new d.default(e)).createVertDataArray(6),t.pokeVertData(0,-.8,-.6),t.pokeVertData(1,.2,-.6),t.pokeVertData(2,-.3,.6),t.pokeVertData(3,.8,.6),t.pokeVertData(4,-.2,.6),t.pokeVertData(5,.3,-.6),t.pushVertData(),e.clearColor(0,.4,.86667,1),[2,function(n){e.clear(e.COLOR_BUFFER_BIT),t.paint(n)}]}))}))}n(6943),t.default=function(e){return u.createElement("article",{className:m(e)},u.createElement(A.default,{className:"margin-left",onInit:h}),u.createElement(f.default,{ts:{code:l.default}},p.default))}},7436:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4750);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5855:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(t){var n=this;this.gl=t,this.vertData=new Float32Array,this.vertCount=0,this.paint=function(e,t){var r=n,o=r.gl,i=r.prg;o.useProgram(i),t&&t(n,e),o.bindVertexArray(n.vertArray),o.drawArrays(o.TRIANGLES,0,n.vertCount)};var r=t.createProgram();if(!r)throw Error("Unable to create a WebGL Program!");e.createShader(t,r,t.VERTEX_SHADER,e.VERT),e.createShader(t,r,t.FRAGMENT_SHADER,e.FRAG),t.linkProgram(r),this.prg=r;var o=t.createBuffer();if(!o)throw Error("Unable to create WebGL Buffer!");this.vertBuff=o;var i=t.createVertexArray();if(!i)throw Error("Unable to create Vertex Array Object!");this.vertArray=i,t.bindVertexArray(i);var a=Float32Array.BYTES_PER_ELEMENT,s=e.ATTRIBS_COUNT*a;t.bindBuffer(t.ARRAY_BUFFER,this.vertBuff);var c=t.getAttribLocation(r,"attPos");t.enableVertexAttribArray(c),t.vertexAttribPointer(c,2,t.FLOAT,!1,s,0*a)}return e.prototype.createVertDataArray=function(e){this.vertCount=e,this.vertData=new Float32Array(2*e)},e.prototype.pushVertData=function(){var e=this.gl;e.bindBuffer(e.ARRAY_BUFFER,this.vertBuff),e.bufferData(e.ARRAY_BUFFER,this.vertData,e.STATIC_DRAW)},e.prototype.pokeVertData=function(t,n,r){var o=t*e.ATTRIBS_COUNT,i=this.vertData;i[o++]=n,i[o++]=r},e.prototype.destroy=function(){var e=this,t=e.gl,n=e.prg,r=e.vertBuff;t.deleteBuffer(r),t.deleteProgram(n),t.deleteVertexArray(this.vertArray)},e.createShader=function(e,t,n,r){var o=e.createShader(n);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(t,o)},e.ATTRIBS_COUNT=2,e.VERT="#version 300 es\nin vec2 attPos;\nvoid main(){gl_Position=vec4(attPos,0.0,1.0);}",e.FRAG="#version 300 es\nprecision mediump float;\nout vec4 FragColor;\nvoid main(){FragColor=vec4(1.0,0.5,0.0,1.0);}",e}();t.default=n},3604:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4921);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},4921:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=i(n(7294)),l=c(n(9681)),f=c(n(2580)),d=c(n(5528)),A=c(n(5260)),p=c(n(4017)),m=c(n(5519));function h(e){var t=["custom","pages-articles-Webgl2contextView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function v(e){return a(this,void 0,void 0,(function(){return s(this,(function(t){return[2,function(t){var n=Math.abs(Math.cos(5115e-7*t)),r=Math.abs(Math.cos(8172e-7*t)),o=Math.abs(Math.cos(6131e-7*t));e.clearColor(n,r,o,1),e.clear(e.COLOR_BUFFER_BIT)}]}))}))}n(8614),t.default=function(e){return u.createElement("article",{className:h(e)},u.createElement(p.default,{className:"small margin-left",onInit:v}),u.createElement(A.default,{ts:{code:f.default}},m.default),u.createElement(l.default,{expanded:!1,lang:"html",label:"Le code complet dans une page HTML",value:d.default}))}},8046:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(2240);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},8244:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(t,n){var r=this;this.gl=t,this.vertCount=n,this.vertStaticCursor=0,this.paint=function(e,t){var n=r,o=n.gl,i=n.prg;o.useProgram(i),t&&t(r,e),o.bindVertexArray(r.vertArray),o.drawArrays(o.TRIANGLE_STRIP,0,r.vertCount),o.bindVertexArray(null)};var o=t.createProgram();if(!o)throw Error("Unable to create a WebGL Program!");e.createShader(t,o,t.VERTEX_SHADER,e.VERT),e.createShader(t,o,t.FRAGMENT_SHADER,e.FRAG),t.linkProgram(o),this.prg=o,this._$uniTexColors=t.getUniformLocation(o,"uniTexColors"),this._$uniRatio=t.getUniformLocation(o,"uniRatio"),this._$uniCenter=t.getUniformLocation(o,"uniCenter"),this._$uniTexCells=t.getUniformLocation(o,"uniTexCells"),this._$uniScale=t.getUniformLocation(o,"uniScale");var i=t.createVertexArray();if(!i)throw Error("Unable to create Vertex Array Object!");this.vertArray=i,t.bindVertexArray(i);var a=Float32Array.BYTES_PER_ELEMENT,s=2*a,c=t.createBuffer();if(!c)throw Error("Unable to create WebGL Buffer (vertStatic)!");this.vertStaticBuff=c,t.bindBuffer(t.ARRAY_BUFFER,c),this.vertStaticData=new Float32Array(2*n),t.bufferData(t.ARRAY_BUFFER,this.vertStaticData,t.STATIC_DRAW);var u=t.getAttribLocation(o,"attPoint");t.enableVertexAttribArray(u),t.vertexAttribPointer(u,2,t.FLOAT,!1,s,0*a),t.vertexAttribDivisor(u,0),t.bindVertexArray(null)}return e.prototype.pushVertStaticArray=function(){var e=this.gl,t=this.vertStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.vertStaticData,e.STATIC_DRAW)},e.prototype.pushVertStaticSubArray=function(e,t){var n=this.gl,r=this.vertStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.vertStaticData.subarray(2*e,2*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*2,o)},e.prototype.pokeVertStaticData=function(e,t){var n=this.vertStaticCursor;if(n<0||n>=this.vertCount)throw Error("[pokeVertStaticData] Cursor out of range: vertStaticCursor = ".concat(n));var r=this.vertStaticData,o=2*n;r[o++]=e,r[o++]=t,this.vertStaticCursor++},e.prototype.destroy=function(){var e=this,t=e.gl,n=e.prg,r=e.vertStaticBuff;t.deleteBuffer(r),t.deleteProgram(n),t.deleteVertexArray(this.vertArray)},e.prototype.$uniTexColors=function(e){var t=this.gl;t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e),t.uniform1i(this._$uniTexColors,0)},e.prototype.$uniRatio=function(e){this.gl.uniform1f(this._$uniRatio,e)},e.prototype.$uniCenter=function(e,t){this.gl.uniform2f(this._$uniCenter,e,t)},e.prototype.$uniTexCells=function(e){var t=this.gl;t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,e),t.uniform1i(this._$uniTexCells,1)},e.prototype.$uniScale=function(e){this.gl.uniform1f(this._$uniScale,e)},e.createShader=function(e,t,n,r){var o=e.createShader(n);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(t,o)},e.VERT="#version 300 es\n\nuniform vec2 uniCenter;\nuniform float uniScale;\nuniform float uniRatio;\n\nin vec2 attPoint;\n\nout vec2 varUV;\n\nvoid main() {\n  vec2 point = (attPoint - uniCenter) * uniScale;\n  varUV = attPoint;\n  point.y *= uniRatio;\n  gl_Position = vec4(point, 0.0, 1.0);\n}",e.FRAG="#version 300 es\n\nprecision mediump float;\n\nuniform sampler2D uniTexCells;\nuniform sampler2D uniTexColors;\n\nin vec2 varUV;\n\nout vec4 FragColor;\n\nconst float W = 512.0;\nconst float H = 512.0;\nconst float X = 1.0 / W;\nconst float Y = 1.0 / H;\nconst float A = 1.0;\n\nfloat dist(vec3 vec) {\n  return vec.x * vec.x + vec.y * vec.y;\n}\n\nvec3 best(vec3 p1, vec3 p2) {\n  float d1 = dist(p1);\n  float d2 = dist(p2);\n  return d1 < d2 ? p1 : p2;\n}\n\nvoid main() {\n  vec3 center = vec3(fract(varUV.x * W) + 0.5, fract(varUV.y * H) + 0.5, 0);\n  vec3 cell1 = texture(uniTexCells, varUV).xyz - center;\n  vec3 cell2 = texture(uniTexCells, varUV + vec2(X, 0)).xyz + vec3(A, 0, 0) - center;\n  vec3 cell3 = texture(uniTexCells, varUV + vec2(X, Y)).xyz + vec3(A, A, 0) - center;\n  vec3 cell4 = texture(uniTexCells, varUV + vec2(0, Y)).xyz + vec3(0, A, 0) - center;\n  vec3 cell = best(\n    best(cell1, cell2),\n    best(cell3, cell4)\n  );\n  float v = cell.z;\n  float d = 0.5 + (1.0 - dist(cell)) * 0.6;\n  vec3 color = texture(uniTexColors, vec2(v, 0.5)).rgb * d;\n  FragColor = vec4(color, 1);\n}",e}();t.default=n},2240:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),u=s(n(7583)),l=s(n(3816)),f=s(n(5260)),d=s(n(8244)),A=s(n(4017)),p=s(n(27));function m(e){var t=["custom","BasicPerspective"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function h(e,t,n,r,o,i,a){if(!(o<3||i<3)){for(var s=n+r*t,c=t-o,u=2/(i-1),l=2/(o-1),f=a*(Math.random()-.5),d=0;d<i;d++){for(var A=0;A<o;A++){var p=A*l-1,m=d*u-1,v=f*(1-Math.min(1,p*p+m*m));e[s++]+=v}s+=c}var b=Math.floor(n+.5*o),g=Math.floor(r+.5*i),C=b-n,y=o-C,w=g-r,_=i-w;h(e,t,n,r,C,w,a*=.5),h(e,t,b,r,y,w,a),h(e,t,n,g,C,_,a),h(e,t,b,g,y,_,a)}}t.default=function(e){var t=c.useRef(new l.default),n=c.useCallback(function(e){return function(t){var n=2,r=t.createTexture();if(!r)throw Error("Unable to create a texture!");var o=function(){t.bindTexture(t.TEXTURE_2D,r),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1);var e=function(){var e=new Float32Array(262144);h(e,512,0,0,512,512,512);for(var t=0;t<4;t++)h(e,512,Math.floor(384*Math.random()),Math.floor(384*Math.random()),128,128,256);for(var n=function(e){var t=new Uint8Array(e.length),n=e.reduce((function(e,t){return Math.max(e,t)}),0),r=e.reduce((function(e,t){return Math.min(e,t)}),n);console.log("🚀 [voronoi] min,max = ",r,n),r+=.5*(n-r);for(var o=0;o<t.length;o++){var i=e[o];t[o]=i<r?0:Math.floor(255*(i-r)/(n-r))}return t}(e),r=0,o=new Uint8Array(1048576),i=0,a=0;a<512;a++)for(var s=0;s<512;s++){var c=2*Math.PI*Math.random(),u=.41*Math.random();o[i++]=Math.floor(255*(.5+u*Math.cos(c))),o[i++]=Math.floor(255*(.5+u*Math.sin(c))),o[i++]=n[r++],o[i++]=0}return o}();t.texImage2D(t.TEXTURE_2D,0,t.RGBA,512,512,0,t.RGBA,t.UNSIGNED_BYTE,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST)};o(),e.current.add((function(e){"terrain"===e&&o()}));var i=t.createTexture();if(!i)throw Error("Unable to create a texture!");t.bindTexture(t.TEXTURE_2D,i);var s=function(){var e,t,n=["#009","#02b","#05d","#06f","#fe9","#db5","#6d6","#5a5","#292","#070","#842","#852","#953","#963","#777","#888","#999","#aaa","#def","#fff"],r=new Uint8Array(4*n.length),o=0,i="0123456789abcdef";try{for(var s=a(n),c=s.next();!c.done;c=s.next()){var u=c.value,l=Math.floor(17*i.indexOf(u.charAt(1))),f=Math.floor(17*i.indexOf(u.charAt(2))),d=Math.floor(17*i.indexOf(u.charAt(3)));r[o++]=l,r[o++]=f,r[o++]=d,r[o++]=255}}catch(t){e={error:t}}finally{try{c&&!c.done&&(t=s.return)&&t.call(s)}finally{if(e)throw e.error}}return console.log("🚀 [voronoi] colors = ",r),r}();t.texImage2D(t.TEXTURE_2D,0,t.RGBA,s.length>>2,1,0,t.RGBA,t.UNSIGNED_BYTE,s),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.canvas.addEventListener("pointerdown",(function(e){e.ctrlKey&&o()})),t.canvas.addEventListener("wheel",(function(e){e.deltaY<0?n*=1.05:n/=1.05,n<1?n=1:n>100&&(n=100)}));var c=new d.default(t,4);return c.pokeVertStaticData(0,0),c.pokeVertStaticData(1,0),c.pokeVertStaticData(0,1),c.pokeVertStaticData(1,1),c.pushVertStaticArray(),t.clearColor(0,0,0,1),new Promise((function(e){e((function(e){c.paint(e,(function(e,o){t.clear(t.COLOR_BUFFER_BIT),e.$uniCenter(.5,.5),e.$uniScale(n);var a=t.drawingBufferWidth,s=t.drawingBufferHeight;e.$uniRatio(a/s),e.$uniTexCells(r),e.$uniTexColors(i)}))}))}))}}(t),[]);return c.createElement("article",{className:m(e)},c.createElement("div",null,"Utilisez la molette pour zoomer, et Ctrl-Click pour changer le terrain."),c.createElement(A.default,{play:!0,onInit:n}),c.createElement(u.default,{label:"Regénérer le terrain",onClick:function(){return t.current.fire("terrain")}}),c.createElement(f.default,null,p.default))}},6317:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(6328);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},6328:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294)),c=a(n(5260)),u=a(n(7e3));function l(e){var t=["custom","pages-tools-Welcome"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(1865),t.default=function(e){return s.createElement("article",{className:l(e)},s.createElement(c.default,null,u.default))}},1306:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=(this&&this.__awaiter,this&&this.__generator,this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}});Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294)),c=a(n(9681)),u=n(2905);function l(e){var t=["custom","pages-tools-painter-CodeGeneratorView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(935),t.default=function(e){var t=(0,u.makePainterClassCode)(e.options);return s.createElement("div",{className:l(e)},s.createElement(c.default,{label:"Code du Painter (".concat(t.length," octets)"),value:t,lang:"typescript"}))}},5266:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.makeAttributesGroups=t.computeAttributesTotalLength=t.makeBindAttributesCode=t.makeAttributesLocationsCode=void 0;var o=n(5395),i=n(8021);function a(e){var t,n,o=0;try{for(var i=r(e),a=i.next();!a.done;a=i.next()){var s=a.value;o+=s.length*s.size}}catch(e){t={error:e}}finally{try{a&&!a.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}return o}function s(e){var t,n,o=new Map;try{for(var a=r(e.attributes),s=a.next();!s.done;s=a.next()){var u=s.value,l=(0,i.getDivisorForAttibute)(u.name,e),f=(0,i.getDynamicModeForAttibute)(u.name,e),d="".concat(l).concat(f);o.has(d)||o.set(d,{attributes:[],baseName:c(l,f),dynamic:f,divisor:l});var A=o.get(d);A&&A.attributes.push(u)}}catch(e){t={error:e}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}return Array.from(o.values())}function c(e,t){var n=t?"Dynamic":"Static";return 1===e?"inst".concat(n):e>1?"instEvery".concat(e).concat(n):"vert".concat(n)}function u(e){var t=e.divisor;switch(t){case 0:return"vertCount";case 1:return"instCount";default:return"Math.floor(instCount / ".concat(t,")")}}t.makeAttributesLocationsCode=function(e){return e.attributes.map((function(e){return"private readonly _".concat(e.name,": number")})).join("\n")},t.makeBindAttributesCode=function(e){var t,n,c,l,f=["const vertArray = gl.createVertexArray()",'if (!vertArray) throw Error("Unable to create Vertex Array Object!")',"this.vertArray = vertArray","gl.bindVertexArray(vertArray)","const BPE = Float32Array.BYTES_PER_ELEMENT"],d=s(e);try{for(var A=r(d),p=A.next();!p.done;p=A.next()){var m=p.value,h=m.attributes,v=a(h),b=m.baseName,g=(0,o.capitalize)(b);f.push("const stride".concat(g," = ").concat(v," * BPE"),"const ".concat(b,"Buff = gl.createBuffer()"),"if (!".concat(b,'Buff) throw Error("Unable to create WebGL Buffer (').concat(b,')!")'),"this.".concat(b,"Buff = ").concat(b,"Buff"),"gl.bindBuffer(gl.ARRAY_BUFFER, ".concat(b,"Buff)"),"this.".concat(b,"Data = new Float32Array(").concat(v," * ").concat(u(m),")"),"gl.bufferData(gl.ARRAY_BUFFER, this.".concat(b,"Data, gl.").concat(m.dynamic?"DYNAMIC":"STATIC","_DRAW)"));var C=0;try{for(var y=(c=void 0,r(h)),w=y.next();!w.done;w=y.next()){var _=w.value;f.push("const _".concat(_.name,' = gl.getAttribLocation(prg, "').concat(_.name,'")'),"gl.enableVertexAttribArray(_".concat(_.name,")"),"gl.vertexAttribPointer(_".concat(_.name,", ").concat(_.size,", gl.FLOAT, false, stride").concat(g,", ").concat(C," * BPE)"),"gl.vertexAttribDivisor(_".concat(_.name,", ").concat((0,i.getDivisorForAttibute)(_.name,e),")")),C+=_.size*_.length}}catch(e){c={error:e}}finally{try{w&&!w.done&&(l=y.return)&&l.call(y)}finally{if(c)throw c.error}}}}catch(e){t={error:e}}finally{try{p&&!p.done&&(n=A.return)&&n.call(A)}finally{if(t)throw t.error}}return e.drawElements&&f.push("const elemBuff = gl.createBuffer()",'if (!elemBuff) throw Error("Unable to create WebGL Buffer (elem)!")',"this.elemBuff = elemBuff","gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elemBuff)"),f.push("gl.bindVertexArray(null)"),f.join("\n")},t.computeAttributesTotalLength=a,t.makeAttributesGroups=s},4812:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.makeBuffersCode=void 0;var o=n(5266);t.makeBuffersCode=function(e){var t,n,i=[],a=(0,o.makeAttributesGroups)(e);try{for(var s=r(a),c=s.next();!c.done;c=s.next()){var u=c.value;i.push(u.baseName)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(n=s.return)&&n.call(s)}finally{if(t)throw t.error}}return e.drawElements&&i.push("elem"),i.map((function(e){return"private readonly ".concat(e,"Buff: WebGLBuffer")})).join("\n")}},2905:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.compressGLSL=t.makePainterClassCode=void 0;var o=n(5395),i=n(8021),a=n(3184),s=n(5266),c=n(4812),u=n(5343),l=n(5400),f=n(8099),d=n(9809),A=n(8514),p=n(3685);function m(e){var t=e;return t=h(t,/\/\/[^\n\r]*\n/g,""),t=h(t,/\/\*.+?\*\/|\/\/.*(?=[\n\r])/g,""),t=h(t=t.split(/[ \t]*\n[ \t\n\r]*/).join("\n"),/\s*\+\s*/g,"+"),t=h(t,/\s*\*\s*/g,"*"),t=h(t,/\s*\/\s*/g,"/"),t=h(t,/\s*-\s*/g,"-"),t=h(t,/\s*=\s*/g,"="),t=h(t,/\s*,\s*/g,","),t=h(t,/\s*\(\s*/g,"("),t=h(t,/\s*\)\s*/g,")"),t=h(t,/\s*\{\s*/g,"{"),h(t,/\s*\}\s*/g,"}")}function h(e,t,n){return e.split(t).join(n)}t.makePainterClassCode=function(e){var t=new Intl.DateTimeFormat("fr");return"/**\n * Code généré automatiquement le ".concat(t.format(new Date),"\n */\nexport default class ").concat(e.className," {\n").concat((0,a.indent)((0,c.makeBuffersCode)(e)),"\n").concat((0,a.indent)("private readonly vertArray: WebGLVertexArrayObject"),"\n").concat((0,a.indent)((0,A.makeUniformsLocationsCode)(e)),"\n").concat((0,a.indent)(function(e){var t,n,a=[],c=(0,s.makeAttributesGroups)(e);try{for(var u=r(c),l=u.next();!l.done;l=u.next()){var f=l.value;a.push("private readonly ".concat(f.baseName,"Data: Float32Array"),"/**"," * Détermine quel".concat(f.divisor>0?" vertex":"le instance"," la fonction")," * `poke".concat((0,o.capitalize)(f.baseName),"Data()` met à jour.")," * Il s'incrémente à chaque appel de `poke".concat((0,o.capitalize)(f.baseName),"Data()`")," */","public ".concat(f.baseName,"Cursor = 0"))}}catch(e){t={error:e}}finally{try{l&&!l.done&&(n=u.return)&&n.call(u)}finally{if(t)throw t.error}}return e.drawElements&&a.push("private readonly elemData: ".concat((0,i.getArrayTypeForElement)(e))),a.join("\n")}(e)),"\n    private readonly prg: WebGLProgram\n\n").concat((0,a.indent)((0,u.makeConstructorCode)(e)),"\n\n").concat((0,a.indent)((0,p.makeCreateDataArrayFunctionCode)(e)),"\n\n").concat((0,a.indent)((0,p.makePushData)(e)),"\n\n").concat((0,a.indent)((0,p.makePokeDataFunctionCode)(e)),"\n\n").concat((0,a.indent)((0,p.makeSwapDataFunctionCode)(e)),"\n\n").concat((0,a.indent)((0,f.makeDestroyFunctionCode)(e)),"\n\n").concat((0,a.indent)((0,d.makePaintFunctionCode)(e)),"\n\n").concat((0,a.indent)((0,A.makeUniformsCode)(e)),"\n\n").concat((0,a.indent)((0,l.makeCreateShaderFunctionCode)(e)),"\n\n    static readonly VERT = `").concat(e.minifyShaderCode?m(e.vertCode):e.vertCode,"`\n    static readonly FRAG = `").concat(e.minifyShaderCode?m(e.fragCode):e.fragCode,"`\n}\n")},t.compressGLSL=m},3184:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.indent=void 0,t.indent=function(e,t){void 0===t&&(t=4);var n=Array(t).fill(" ").join("");return e.split("\n").map((function(e){return"".concat(n).concat(e)})).join("\n")}},5343:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeConstructorCode=void 0;var r=n(8021),o=n(3184),i=n(5266);t.makeConstructorCode=function(e){var t=e.attributes.filter((function(t){return(0,r.getDivisorForAttibute)(t.name,e)>0})).length>0;return"constructor(\n    public readonly gl: WebGL2RenderingContext,\n    public vertCount: number".concat(t?",\n    public instCount: number":"",'\n) {\n    const prg = gl.createProgram()\n    if (!prg) throw Error("Unable to create a WebGL Program!")\n    ').concat(e.className,".createShader(gl, prg, gl.VERTEX_SHADER, ").concat(e.className,".VERT)\n    ").concat(e.className,".createShader(gl, prg, gl.FRAGMENT_SHADER, ").concat(e.className,".FRAG)\n    gl.linkProgram(prg)\n    this.prg = prg\n    ").concat(function(e){return e.uniforms.map((function(e){return"this._$".concat(e.name,' = gl.getUniformLocation(prg, "').concat(e.name,'") as WebGLUniformLocation')})).join("\n    ")}(e),"\n").concat((0,o.indent)((0,i.makeBindAttributesCode)(e)),"\n}")}},5400:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeCreateShaderFunctionCode=void 0,t.makeCreateShaderFunctionCode=function(e){return'private static createShader(gl: WebGL2RenderingContext, prg: WebGLProgram, type: number, code: string) {\n    const shader = gl.createShader(type)\n    if (!shader) throw Error("Unable to create WebGL Shader!")\n\n    gl.shaderSource(shader, code)\n    gl.compileShader(shader)\n    gl.attachShader(prg, shader)\n}'}},3685:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.makePushData=t.makeSwapDataFunctionCode=t.makePokeDataFunctionCode=t.makeCreateDataArrayFunctionCode=void 0;var o=n(5395),i=n(5266),a=n(8021);function s(e,t){for(var n=[],r=0;r<e;r++)n.push(t);return n}t.makeCreateDataArrayFunctionCode=function(e){var t=[];return e.drawElements&&t.push("public setElemData(elemData: ".concat((0,a.getArrayTypeForElement)(e),"): void {\n    this.vertCount = elemData.length\n    const { gl, vertCount } = this\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.elemBuff)\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, elemData, gl.STATIC_DRAW)\n}")),t.join("\n")},t.makePokeDataFunctionCode=function(e){var t,n,a,s,c=[],u=(0,i.makeAttributesGroups)(e);try{for(var l=r(u),f=l.next();!f.done;f=l.next()){var d=f.value,A=d.attributes,p=d.baseName,m=(0,i.computeAttributesTotalLength)(A),h=[];try{for(var v=(a=void 0,r(A)),b=v.next();!b.done;b=v.next()){var g=b.value,C=g.name,y=g.size;if(1===y)h.push(C);else if(2===y)h.push("".concat(C,"_X"),"".concat(C,"_Y"));else if(3===y)h.push("".concat(C,"_X"),"".concat(C,"_Y"),"".concat(C,"_Z"));else{if(4!==y)throw Error("Unexpected size ".concat(y,' for attribute "').concat(C,'"!'));h.push("".concat(C,"_X"),"".concat(C,"_Y"),"".concat(C,"_Z"),"".concat(C,"_W"))}}}catch(e){a={error:e}}finally{try{b&&!b.done&&(s=v.return)&&s.call(v)}finally{if(a)throw a.error}}c.push("public poke".concat((0,o.capitalize)(p),"Data(\n    ").concat(h.map((function(e){return"".concat(e,": number")})).join(",\n    "),"\n) {\n    const vertIndex = this.").concat(p,"Cursor\n    if (vertIndex < 0 || vertIndex >= ").concat(0===d.divisor?"this.vertCount":1===d.divisor?"this.instCount":"Math.floor(this.instCount / ".concat(d.divisor,")"),") throw Error(`[poke").concat((0,o.capitalize)(p),"Data] Cursor out of range: ").concat(p,"Cursor = ${vertIndex}`)\n    const data = this.").concat(p,"Data\n    let index = vertIndex * ").concat(m,"\n    ").concat(h.map((function(e){return"data[index++] = ".concat(e)})).join(",\n    "),"\n    this.").concat(p,"Cursor++\n}"))}}catch(e){t={error:e}}finally{try{f&&!f.done&&(n=l.return)&&n.call(l)}finally{if(t)throw t.error}}return c.join("\n")},t.makeSwapDataFunctionCode=function(e){var t,n,a=[],c=(0,i.makeAttributesGroups)(e);try{for(var u=r(c),l=u.next();!l.done;l=u.next()){var f=l.value;if(f.dynamic){var d=f.attributes,A=(0,i.computeAttributesTotalLength)(d);a.push("public static swap".concat((0,o.capitalize)(f.baseName),"Data(\n    data: Float32Array,\n    indexA: number,\n    indexB: number        \n) {\n    let ptrA = indexA * ").concat(A,"\n    let ptrB = indexB * ").concat(A,"\n    let tmp: number = 0\n    ").concat(s(A,"tmp = data[ptrA]\n    data[ptrA++] = data[ptrB]\n    data[ptrB++] = tmp").join("\n    "),"\n}"))}}}catch(e){t={error:e}}finally{try{l&&!l.done&&(n=u.return)&&n.call(u)}finally{if(t)throw t.error}}return a.join("\n")},t.makePushData=function(e){return(0,i.makeAttributesGroups)(e).map((function(e){var t=(0,i.computeAttributesTotalLength)(e.attributes);return"public push".concat((0,o.capitalize)(e.baseName),"Array() {\n    const { gl, ").concat(e.baseName,"Buff } = this\n    gl.bindBuffer(gl.ARRAY_BUFFER, ").concat(e.baseName,"Buff)\n    gl.bufferData(gl.ARRAY_BUFFER, this.").concat(e.baseName,"Data, ").concat(e.dynamic?"gl.DYNAMIC_DRAW":"gl.STATIC_DRAW",")\n}\n\n/**\n * @param start First vertex index to push\n * @param end First vertex index to NOT push.\n */\npublic push").concat((0,o.capitalize)(e.baseName),"SubArray(start: number, end: number) {\n    const { gl, ").concat(e.baseName,"Buff } = this\n    gl.bindBuffer(gl.ARRAY_BUFFER, ").concat(e.baseName,"Buff)\n    const subData = this.").concat(e.baseName,"Data.subarray(start * ").concat(t,", end * ").concat(t,")\n    gl.bufferSubData(\n        gl.ARRAY_BUFFER, \n        start * Float32Array.BYTES_PER_ELEMENT * ").concat(t,",\n        subData\n    )\n}")})).join("\n\n")}},8099:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makeDestroyFunctionCode=void 0;var r=n(5266);t.makeDestroyFunctionCode=function(e){var t=(0,r.makeAttributesGroups)(e).map((function(e){return"".concat(e.baseName,"Buff")}));return e.drawElements&&t.push("elemBuff"),"public destroy() {\n    const { gl, prg, ".concat(t.map((function(e){return"".concat(e)})).join(", ")," } = this\n    ").concat(t.map((function(e){return"gl.deleteBuffer(".concat(e,")")})).join("\n    "),"\n    gl.deleteProgram(prg)\n    gl.deleteVertexArray(this.vertArray)\n}")}},9809:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.makePaintFunctionCode=void 0;var r=n(5266);function o(e){return(0,r.makeAttributesGroups)(e).filter((function(e){return e.divisor>0})).length>0}t.makePaintFunctionCode=function(e){var t="/**\n * Fonction à appeler dans un `requestAnimationFrame`.\n * @param time Temps en millisecondes\n * @param onPaint Fonction à utiliser pour:\n * - mettre à jour des uniforms\n * - activer des fonctionnalité de WebGL (depth test, compisiting, ...)\n * - ...\n */\npublic readonly paint = (\n    time: number,\n    onPaint?: (painter: ".concat(e.className,", time: number) => void\n) => {\n    const { gl, prg } = this\n    gl.useProgram(prg)\n    if (onPaint) onPaint(this, time)\n    gl.bindVertexArray(this.vertArray)\n");return e.drawElements?(o(e),t+="    gl.drawElements(gl.".concat(e.primitive,", this.elemCount, gl.").concat(e.elementsSize,", 0)")):o(e)?t+="    gl.drawArraysInstanced(gl.".concat(e.primitive,", 0, this.vertCount, this.instCount)"):t+="    gl.drawArrays(gl.".concat(e.primitive,", 0, this.vertCount)"),t+"\n    gl.bindVertexArray(null)\n}"}},8514:(e,t)=>{"use strict";function n(e,t){var n="xyzw".substring(0,t).split("");return"$".concat(e.name,"(").concat(n.map((function(e){return"".concat(e,": number")})).join(", "),") {\n    this.gl.uniform").concat(n.length,"f(this._$").concat(e.name,", ").concat(n.join(", "),")\n}")}Object.defineProperty(t,"__esModule",{value:!0}),t.makeUniformsLocationsCode=t.makeUniformsCode=void 0,t.makeUniformsCode=function(e){return e.uniforms.map((function(e){return function(e){return 1===e.size?function(e){switch(e.type){case"FLOAT":return function(e){return"$".concat(e.name,"(value: number) {\n    this.gl.uniform1f(this._$").concat(e.name,", value)\n}")}(e);case"FLOAT_VEC2":return n(e,2);case"FLOAT_VEC3":return n(e,3);case"FLOAT_VEC4":return n(e,4);case"SAMPLER_2D":return function(e){var t=e.name,n=e.slot;return"$".concat(t,"(texture: WebGLTexture) {\n    const { gl } = this\n    gl.activeTexture(gl.TEXTURE").concat(n,")\n    gl.bindTexture(gl.TEXTURE_2D, texture)\n    gl.uniform1i(this._$").concat(e.name,", ").concat(n,")\n}")}(e);default:return'/* @TODO: Uniform "'.concat(e.name,'" of type ').concat(e.type," */")}}(e):'/* @TODO: Uniform "'.concat(e.name,'" of type ').concat(e.type,"[").concat(e.size,"] */")}(e)})).join("\n\n")},t.makeUniformsLocationsCode=function(e){return e.uniforms.map((function(e){return"private readonly _$".concat(e.name,": WebGLUniformLocation")})).join("\n")}},6826:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(1306);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},7073:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isCodeOptions=void 0;var r=n(3724);t.isCodeOptions=function(e){try{if((0,r.assertObject)(e),(0,r.assertString)(e.vertCode,"data.vertCode"),(0,r.assertString)(e.fragCode,"data.fragCode"),(0,r.assertString)(e.className,"data.className"),(0,r.assertString)(e.primitive,"data.primitive"),(0,r.assertBoolean)(e.minifyShaderCode,"data.minifyShaderCode"),(0,r.assertBoolean)(e.drawElements,"data.drawElements"),(0,r.assertArray)(e.uniforms,"data.uniforms"),(0,r.assertArray)(e.attributes,"data.attributes"),(0,r.assertObject)(e.attributesDivisors,"data.attributesDivisors"),(0,r.assertObject)(e.attributesDynamicModes,"data.attributesDynamicModes"),(0,r.assertString)(e.elementsSize,"data.elementsSize"),!["UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT"].includes(e.elementsSize))throw Error("Invalid data.elementsSize!");return!0}catch(e){return console.error(e),!1}}},9034:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return i(t,e),t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(n(7294)),u=s(n(8168)),l=s(n(9681)),f=s(n(3693)),d=s(n(1779));n(4619);var A=n(8021),p={POINTS:"POINTS",LINE_STRIP:"LINE_STRIP",LINE_LOOP:"LINE_LOOP",LINES:"LINES",TRIANGLE_STRIP:"TRIANGLE_STRIP",TRIANGLE_FAN:"TRIANGLE_FAN",TRIANGLES:"TRIANGLES"};function m(e){var t=["custom","pages-tools-painter-CodeOptionsView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function h(e){switch(e.type){case"SAMPLER_2D":return"const texture: WebGLTexture = gl.createTexture()\n...\npainter.$".concat(e.name,"(texture)");case"FLOAT":return"painter.$".concat(e.name,"(").concat(100*Math.random(),")");case"FLOAT_VEC2":return"painter.$".concat(e.name,"(").concat(100*Math.random(),", ").concat(100*Math.random(),")");case"FLOAT_VEC3":return"painter.$".concat(e.name,"(").concat(100*Math.random(),", ").concat(100*Math.random(),", ").concat(100*Math.random(),")");case"FLOAT_VEC4":return"painter.$".concat(e.name,"(").concat(100*Math.random(),", ").concat(100*Math.random(),", ").concat(100*Math.random(),", ").concat(100*Math.random(),")");default:return"// Pas encore supporté : ".concat(e.type)}}t.default=function(e){var t=e.value,n=function(n){e.onChange(r(r({},t),n))};return c.createElement("div",{className:m(e)},c.createElement(f.default,{options:p,value:t.primitive,onChange:function(e){return n({primitive:e})}}),c.createElement(u.default,{label:"drawElements",value:t.drawElements,onChange:function(e){return n({drawElements:e})}}),t.drawElements&&c.createElement(f.default,{options:{UNSIGNED_BYTE:"Byte (256)",UNSIGNED_SHORT:"Short (65'535)",UNSIGNED_INT:"Int (4'294'967'297)"},value:t.elementsSize,onChange:function(e){return n({elementsSize:e})}}),c.createElement(u.default,{label:"Minifier",value:t.minifyShaderCode,onChange:function(e){return n({minifyShaderCode:e})}}),c.createElement("h1",null,"Attributes"),c.createElement("div",{className:"grid-3"},c.createElement("div",{className:"hint",title:"Les attributes dynamiques sont susceptibles d'être mis à jour souvent"},"Dynamique"),c.createElement("div",{className:"hint"},"Nom"),c.createElement("div",{className:"hint"},"Diviseur"),t.attributes.map((function(e){return c.createElement(c.Fragment,null,c.createElement("div",{key:"".concat(e.name,"-1")},c.createElement(u.default,{value:(0,A.getDynamicModeForAttibute)(e.name,t),onChange:function(o){(0,A.setDynamicModeForAttibute)(e.name,t,o),n(r({},t))}})),c.createElement("div",{key:"".concat(e.name,"-2")},c.createElement("b",null,e.name)),c.createElement("div",{key:"".concat(e.name,"-3"),title:e.type},c.createElement(d.default,{className:"small-input",value:(0,A.getDivisorForAttibute)(e.name,t),onChange:function(o){(0,A.setDivisorForAttibute)(e.name,t,o),n(r({},t))}})))}))),c.createElement("h1",null,"Uniforms"),c.createElement("div",null,t.uniforms.map((function(e){return c.createElement(l.default,{key:"".concat(e.name),label:"".concat(e.type," ").concat(e.name),expanded:!1,lang:"typescript",value:h(e)})}))))}},8922:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(9034);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},8021:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getArrayTypeForElement=t.setDynamicModeForAttibute=t.getDynamicModeForAttibute=t.setDivisorForAttibute=t.getDivisorForAttibute=void 0,t.getDivisorForAttibute=function(e,t){var n;return Math.max(0,Math.floor(null!==(n=t.attributesDivisors[e])&&void 0!==n?n:0))},t.setDivisorForAttibute=function(e,t,n){t.attributesDivisors[e]=n},t.getDynamicModeForAttibute=function(e,t){var n;return null!==(n=t.attributesDynamicModes[e])&&void 0!==n&&n},t.setDynamicModeForAttibute=function(e,t,n){t.attributesDynamicModes[e]=n},t.getArrayTypeForElement=function(e){var t=e.elementsSize;return t.endsWith("BYTE")?"Uint8Array":t.endsWith("SHORT")?"Uint16Array":"Uint32Array"}},2545:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(7051);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},7051:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)},o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&o(t,e,n);return i(t,e),t},s=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=a(n(7294)),l=c(n(6826)),f=c(n(8922)),d=c(n(1094)),A=c(n(514)),p=n(7073),m=n(99);n(2533);var h={attributes:[],attributesDivisors:{},attributesDynamicModes:{},className:"Painter",drawElements:!1,elementsSize:"UNSIGNED_SHORT",fragCode:"",minifyShaderCode:!0,primitive:"TRIANGLES",uniforms:[],vertCode:""};t.default=function(){var e=s(u.useState("main"),2),t=e[0],n=(e[1],s((0,m.usePersistentState)("code-options",t,h,p.isCodeOptions),2)),o=n[0],i=n[1],a=s(u.useState(null),2),c=a[0],v=a[1];return u.useEffect((function(){c&&i(r(r({},o),{vertCode:c.vertCode,fragCode:c.fragCode,attributes:c.attributes,uniforms:c.uniforms}))}),[c]),u.createElement("div",{className:"pages-tools-painter-PainterTools"},u.createElement(A.default,{className:"tab-strip",headers:["Shaders","Options","Résultat"]},u.createElement("div",null,u.createElement(d.default,{project:t,onAnalyse:v})),u.createElement("div",null,u.createElement(f.default,{value:o,onChange:i})),u.createElement("div",null,u.createElement(l.default,{project:t,options:o}))))}},1094:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(3338);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},3338:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),u=s(n(6560)),l=n(8833),f=n(3724),d=n(99);function A(e){var t=["custom","pages-tools-painter-ProgramCodeEditorView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function p(e){return e.startsWith("#version 300 es\n")?e:"#version 300 es\n\n".concat(e)}n(9266),t.default=function(e){var t=a((0,d.usePersistentState)("vert-code",e.project,"",f.isString),2),n=t[0],r=t[1],o=a(c.useState(""),2),i=o[0],s=o[1],m=a((0,d.usePersistentState)("frag-code",e.project,"",f.isString),2),h=m[0],v=m[1],b=a(c.useState(""),2),g=b[0],C=b[1];return c.useEffect((function(){var t=(0,l.analyseProgram)({vert:p(n),frag:p(h)});s(t.vertError),C(t.fragError),t.vertError||t.fragError||e.onAnalyse(t)}),[n,h]),c.createElement("div",{className:A(e)},c.createElement(u.default,{label:"Vertex Shader",error:i,value:p(n),onChange:r}),c.createElement(u.default,{label:"Fragment Shader",error:g,value:p(h),onChange:v}))}},6047:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4983);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},4834:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(t,n,r){var o=this;this.gl=t,this.vertCount=n,this.instCount=r,this.vertStaticCursor=0,this.instEvery7StaticCursor=0,this.instStaticCursor=0,this.paint=function(e,t){var n=o,r=n.gl,i=n.prg;r.useProgram(i),t&&t(o,e),r.bindVertexArray(o.vertArray),r.drawArraysInstanced(r.TRIANGLES,0,o.vertCount,o.instCount),r.bindVertexArray(null)};var i=t.createProgram();if(!i)throw Error("Unable to create a WebGL Program!");e.createShader(t,i,t.VERTEX_SHADER,e.VERT),e.createShader(t,i,t.FRAGMENT_SHADER,e.FRAG),t.linkProgram(i),this.prg=i,this._$uniTrianglesScale=t.getUniformLocation(i,"uniTrianglesScale"),this._$uniAngleStep=t.getUniformLocation(i,"uniAngleStep"),this._$uniScreenScale=t.getUniformLocation(i,"uniScreenScale"),this._$uniOpacity=t.getUniformLocation(i,"uniOpacity");var a=t.createVertexArray();if(!a)throw Error("Unable to create Vertex Array Object!");this.vertArray=a,t.bindVertexArray(a);var s=Float32Array.BYTES_PER_ELEMENT,c=3*s,u=t.createBuffer();if(!u)throw Error("Unable to create WebGL Buffer (vertStatic)!");this.vertStaticBuff=u,t.bindBuffer(t.ARRAY_BUFFER,u),this.vertStaticData=new Float32Array(3*n),t.bufferData(t.ARRAY_BUFFER,this.vertStaticData,t.STATIC_DRAW);var l=t.getAttribLocation(i,"attVertexPolarCoords");t.enableVertexAttribArray(l),t.vertexAttribPointer(l,3,t.FLOAT,!1,c,0*s),t.vertexAttribDivisor(l,0);var f=3*s,d=t.createBuffer();if(!d)throw Error("Unable to create WebGL Buffer (instEvery7Static)!");this.instEvery7StaticBuff=d,t.bindBuffer(t.ARRAY_BUFFER,d),this.instEvery7StaticData=new Float32Array(3*Math.floor(r/7)),t.bufferData(t.ARRAY_BUFFER,this.instEvery7StaticData,t.STATIC_DRAW);var A=t.getAttribLocation(i,"attInstanceColor");t.enableVertexAttribArray(A),t.vertexAttribPointer(A,3,t.FLOAT,!1,f,0*s),t.vertexAttribDivisor(A,7);var p=1*s,m=t.createBuffer();if(!m)throw Error("Unable to create WebGL Buffer (instStatic)!");this.instStaticBuff=m,t.bindBuffer(t.ARRAY_BUFFER,m),this.instStaticData=new Float32Array(1*r),t.bufferData(t.ARRAY_BUFFER,this.instStaticData,t.STATIC_DRAW);var h=t.getAttribLocation(i,"attInstanceAngle");t.enableVertexAttribArray(h),t.vertexAttribPointer(h,1,t.FLOAT,!1,p,0*s),t.vertexAttribDivisor(h,1),t.bindVertexArray(null)}return e.prototype.pushVertStaticArray=function(){var e=this.gl,t=this.vertStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.vertStaticData,e.STATIC_DRAW)},e.prototype.pushVertStaticSubArray=function(e,t){var n=this.gl,r=this.vertStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.vertStaticData.subarray(3*e,3*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*3,o)},e.prototype.pushInstEvery7StaticArray=function(){var e=this.gl,t=this.instEvery7StaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.instEvery7StaticData,e.STATIC_DRAW)},e.prototype.pushInstEvery7StaticSubArray=function(e,t){var n=this.gl,r=this.instEvery7StaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.instEvery7StaticData.subarray(3*e,3*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*3,o)},e.prototype.pushInstStaticArray=function(){var e=this.gl,t=this.instStaticBuff;e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.instStaticData,e.STATIC_DRAW)},e.prototype.pushInstStaticSubArray=function(e,t){var n=this.gl,r=this.instStaticBuff;n.bindBuffer(n.ARRAY_BUFFER,r);var o=this.instStaticData.subarray(1*e,1*t);n.bufferSubData(n.ARRAY_BUFFER,e*Float32Array.BYTES_PER_ELEMENT*1,o)},e.prototype.pokeVertStaticData=function(e,t,n){var r=this.vertStaticCursor;if(r<0||r>=this.vertCount)throw Error("[pokeVertStaticData] Cursor out of range: vertStaticCursor = ".concat(r));var o=this.vertStaticData,i=3*r;o[i++]=e,o[i++]=t,o[i++]=n,this.vertStaticCursor++},e.prototype.pokeInstEvery7StaticData=function(e,t,n){var r=this.instEvery7StaticCursor;if(r<0||r>=Math.floor(this.instCount/7))throw Error("[pokeInstEvery7StaticData] Cursor out of range: instEvery7StaticCursor = ".concat(r));var o=this.instEvery7StaticData,i=3*r;o[i++]=e,o[i++]=t,o[i++]=n,this.instEvery7StaticCursor++},e.prototype.pokeInstStaticData=function(e){var t=this.instStaticCursor;if(t<0||t>=this.instCount)throw Error("[pokeInstStaticData] Cursor out of range: instStaticCursor = ".concat(t));var n=1*t;this.instStaticData[n++]=e,this.instStaticCursor++},e.prototype.destroy=function(){var e=this,t=e.gl,n=e.prg,r=e.vertStaticBuff,o=e.instEvery7StaticBuff,i=e.instStaticBuff;t.deleteBuffer(r),t.deleteBuffer(o),t.deleteBuffer(i),t.deleteProgram(n),t.deleteVertexArray(this.vertArray)},e.prototype.$uniTrianglesScale=function(e){this.gl.uniform1f(this._$uniTrianglesScale,e)},e.prototype.$uniAngleStep=function(e){this.gl.uniform1f(this._$uniAngleStep,e)},e.prototype.$uniScreenScale=function(e,t){this.gl.uniform2f(this._$uniScreenScale,e,t)},e.prototype.$uniOpacity=function(e){this.gl.uniform1f(this._$uniOpacity,e)},e.createShader=function(e,t,n,r){var o=e.createShader(n);if(!o)throw Error("Unable to create WebGL Shader!");e.shaderSource(o,r),e.compileShader(o),e.attachShader(t,o)},e.VERT="#version 300 es\nuniform vec2 uniScreenScale;\nuniform float uniAngleStep;\nuniform float uniTrianglesScale;\nin vec3 attVertexPolarCoords;\nin vec3 attInstanceColor;\nin float attInstanceAngle;\nout vec3 varColor;\nconst float RAD_PER_DEG=0.017453292519943295;\nvoid main(){varColor=attInstanceColor*vec3(attVertexPolarCoords.z);\nfloat instAng=uniAngleStep*float(1+gl_InstanceID)*RAD_PER_DEG;\nfloat instDis=0.75-float(gl_InstanceID)*0.0138888888889;\nfloat vertAng=instAng+(attVertexPolarCoords.x+attInstanceAngle)*RAD_PER_DEG;\nfloat vertDis=attVertexPolarCoords.y*instDis*uniTrianglesScale;\nfloat x=vertDis*cos(vertAng);\nfloat y=vertDis*sin(vertAng);\nfloat cx=instDis*cos(instAng);\nfloat cy=instDis*sin(instAng);\ngl_Position=vec4(uniScreenScale*vec2(cx+x,cy+y),0.0,1.0);}",e.FRAG="#version 300 es\nprecision mediump float;\nuniform float uniOpacity;\nin vec3 varColor;\nout vec4 FragColor;\nvoid main(){FragColor=vec4(varColor,uniOpacity);}",e}();t.default=n},4983:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294)),c=a(n(4834)),u=a(n(4017));function l(e){var t=["custom","Test"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}function f(e){var t=new c.default(e,12,42),n=.1,r=.55;t.pokeInstEvery7StaticData(n,r,1),t.pokeInstEvery7StaticData(n,1,r),t.pokeInstEvery7StaticData(r,n,1),t.pokeInstEvery7StaticData(1,n,r),t.pokeInstEvery7StaticData(r,1,n),t.pokeInstEvery7StaticData(1,r,n),t.pushInstEvery7StaticArray();for(var o=0;o<42;o++)t.pokeInstStaticData(360*o/42);return t.pushInstStaticArray(),t.pokeVertStaticData(0,.3,0),t.pokeVertStaticData(90,.4,1),t.pokeVertStaticData(-90,.4,1),t.pokeVertStaticData(0,.5,2),t.pokeVertStaticData(120,.25,.1),t.pokeVertStaticData(180,0,1),t.pokeVertStaticData(0,.5,2),t.pokeVertStaticData(-120,.25,.1),t.pokeVertStaticData(180,0,1),t.pokeVertStaticData(0,.4,1),t.pokeVertStaticData(60,.4,2),t.pokeVertStaticData(-60,.4,2),t.pushVertStaticArray(),e.clearColor(0,0,0,1),t.instCount=1,new Promise((function(n){n((function(n){t.paint(n,(function(t,r){e.clear(e.COLOR_BUFFER_BIT),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA),t.$uniOpacity(1),t.$uniAngleStep(.002*r),t.$uniTrianglesScale(1+2*Math.abs(Math.sin(74545e-8*n)));var o=e.drawingBufferWidth,i=e.drawingBufferHeight;o>i?t.$uniScreenScale(i/o,1):t.$uniScreenScale(1,o/i)}))}))}))}n(4370),t.default=function(e){return s.createElement("div",{className:l(e)},s.createElement(u.default,{onInit:f,play:!0}))}},9114:function(e,t){"use strict";var n=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},r=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var o=0;return function(){for(var i=[],a=0;a<arguments.length;a++)i[a]=arguments[a];o&&window.clearTimeout(o),o=window.setTimeout((function(){o=0,e.apply(void 0,r([],n(i),!1))}),t)}}},3749:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(9114)),i=n(5139),a=r(n(6569)),s=r(n(4459));t.default={Debouncer:o.default,sleep:i.sleep,Throttler:a.default,UpdateTasks:s.default}},5139:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sleep=void 0,t.sleep=function(e){return new Promise((function(t){return window.setTimeout(t,e)}))}},6569:function(e,t){"use strict";var n=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},r=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var o=0,i=0,a=function(){},s=[],c=function(){o=0,a.apply(void 0,r([],n(s),!1))};return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];a=e,s=n;var u=Date.now(),l=u-i;i=u,l>t?c():0===o&&(o=window.setTimeout(c,t-l))}}},4459:function(e,t){"use strict";var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(){this.actionRunning=!1}return e.prototype.exec=function(e){this.curTask?this.nxtTask=e:this.curTask=e,this.actionRunning||this.action()},e.prototype.action=function(){return n(this,void 0,void 0,(function(){var e;return r(this,(function(t){switch(t.label){case 0:this.actionRunning=!0,t.label=1;case 1:t.trys.push([1,,8,9]),t.label=2;case 2:if(!this.curTask)return[3,7];t.label=3;case 3:return t.trys.push([3,5,,6]),[4,this.curTask()];case 4:return t.sent(),[3,6];case 5:return e=t.sent(),console.error("[UpdateTasks]",e),[3,6];case 6:return this.curTask=this.nxtTask,[3,2];case 7:return[3,9];case 8:return this.actionRunning=!1,[7];case 9:return[2]}}))}))},e}();t.default=o},8549:function(e,t){"use strict";var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.copyToClipboard=void 0,t.copyToClipboard=function(e){return n(this,void 0,void 0,(function(){var t;return r(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,navigator.clipboard.writeText(e)];case 1:return n.sent(),[3,3];case 2:return t=n.sent(),console.error("Unable to copy to the clipboard:",t),[3,3];case 3:return[2]}}))}))}},7541:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getExceptionMessage=void 0;var o=r(n(1142));t.getExceptionMessage=function(e){return e instanceof Error?e.message:"string"==typeof e?e:o.default.stringify(e,null,"  ")}},3816:function(e,t){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e){void 0===e&&(e="");var t=this;this.name=e,this.listeners=[],this.fire=function(e){var r,o;try{for(var i=n(t.listeners),a=i.next();!a.done;a=i.next()){var s=a.value;try{s(e)}catch(n){console.error("[".concat(t.name,"] Error in a listener!")),console.error(">  ex.: ",n),console.error(">  arg.: ",e)}}}catch(e){r={error:e}}finally{try{a&&!a.done&&(o=i.return)&&o.call(i)}finally{if(r)throw r.error}}}}return Object.defineProperty(e.prototype,"length",{get:function(){return this.listeners.length},enumerable:!1,configurable:!0}),e.prototype.add=function(e){this.remove(e),this.listeners.push(e)},e.prototype.remove=function(e){this.listeners=this.listeners.filter((function(t){return t!==e}))},e.prototype.removeAll=function(){this.listeners.splice(0,this.listeners.length)},e}();t.default=r},6535:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getGrammarForLanguage=void 0,t.getGrammarForLanguage=function(e){return n};var n={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/g,lookbehind:!0,greedy:!0},{pattern:/"(^|[^\\:])\/\/.*"/g,lookbehind:!0,greedy:!0}],number:{pattern:/(^|[^\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?|\d+(?:_\d+)*n|(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?)(?![\w$])/,lookbehind:!0},type:r(["bvec2","bvec3","bvec4","dmat2","dmat2x2","dmat2x3","dmat2x4","dmat3","dmat3x2","dmat3x3","dmat3x4","dmat4","dmat4x2","dmat4x3","dmat4x4","dvec2","dvec3","dvec4","float","fvec2","fvec3","fvec4","isampler1D","isampler1DArray","isampler2D","isampler2DArray","isampler2DMS","isampler2DMSArray","isampler2DRect","isampler3D","isamplerBuffer","isamplerCube","isamplerCubeArray","ivec2","ivec3","ivec4","mat2","mat2x2","mat2x3","mat2x4","mat3","mat3x2","mat3x3","mat3x4","mat4","mat4x2","mat4x3","mat4x4","sample","sampler1D","sampler1DArray","sampler1DArrayShadow","sampler1DShadow","sampler2D","sampler2DArray","sampler2DArrayShadow","sampler2DMS","sampler2DMSArray","sampler2DRect","sampler2DRectShadow","sampler2DShadow","sampler3D","samplerBuffer","samplerCube","samplerCubeArray","samplerCubeArrayShadow","samplerCubeShadow","usampler1D","usampler1DArray","usampler2D","usampler2DArray","usampler2DMS","usampler2DMSArray","usampler2DRect","usampler3D","usamplerBuffer","usamplerCube","usamplerCubeArray","uvec2","uvec3","uvec4","vec2","vec3","vec4","void"]),keyword:r(["centroid","const","discard","else","flat","highp","if","in","inout","invariant","layout","lowp","mediump","noperspective","out","patch","precision","smooth","subroutine","uniform","active","asm","cast","class","common","enum","extern","external","filter","fixed","goto","half","hvec2","hvec3","hvec4","iimage1D","iimage1DArray","iimage2D","iimage2DArray","iimage3D","iimageBuffer","iimageCube","image1D","image1DArray","image1DArrayShadow","image1DShadow","image2D","image2DArray","image2DArrayShadow","image2DShadow","image3D","imageBuffer","imageCube","inline","input","interface","long","namespace","noinline","output","packed","partition","public","row_major","sampler3DRect","short","sizeof","static","superp","template","this","typedef","uimage1D","uimage1DArray","uimage2D","uimage2DArray","uimage3D","uimageBuffer","uimageCube","union","unsigned","using","volatile"]),global:r(["gl_DepthRange","gl_DepthRange.diff","gl_DepthRange.far","gl_DepthRange.near","gl_FragCoord","gl_FragDepth","gl_FrontFacing","gl_InstanceID","gl_PointCoord","gl_PointSize","gl_Position","gl_VertexID"]),function:r(["abs","acos","acosh","all","any","asin","asinh","atan","atanh","ceil","clamp","cos","cosh","cross","degrees","determinant","dFdx","dFdy","distance","dot","equal","exp","exp2","faceforward","floatBitsToInt","floatBitsToUint","floor","fract","fwidth","greaterThan","greaterThanEqual","intBitsToFloat","inverse","inversesqrt","isinf","isnan","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","modf","normalize","not","notEqual","outerProduct","packHalf2x16","packSnorm2x16","packUnorm2x16","pow","radians","reflect","refract","round","roundEven","sign","sin","sinh","smoothstep","sqrt","step","tan","tanh","texelFetch","texelFetchOffset","texture","textureGrad","textureGradOffset","textureLod","textureLodOffset","textureOffset","textureProj","textureProjGrad","textureProjGradOffset","textureProjLod","textureProjLodOffset","textureProjOffset","textureSize","transpose","trunc","uintBitsToFloat","unpackHalf2x16","unpackSnorm2x16","unpackUnorm2x16"])};function r(e){return new RegExp("(?:[^a-zA-Z0-9_])(".concat(e.join("|"),")(?=[^a-zA-Z0-9_])"))}},99:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=n(6618);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return i(a).default}}),o(n(6618),t)},6618:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},c=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.usePersistentState=void 0;var l=i(n(7294)),f=u(n(1142)),d=new(function(){function e(){}return e.prototype.get=function(e,t,n){return a(this,void 0,void 0,(function(){var r,o;return s(this,(function(i){if(console.log("[DB]",e,t,">GET>"),null===(r=window.localStorage.getItem(A(e,t))))return[2,n];try{return o=f.default.parse(r),console.log(o),[2,o]}catch(e){return console.log(r),console.error(e),[2,n]}return[2]}))}))},e.prototype.set=function(e,t,n){return a(this,void 0,void 0,(function(){return s(this,(function(r){return console.log("[DB]",e,t,"<SET<"),console.log(n),window.localStorage.setItem(A(e,t),f.default.stringify(n)),[2]}))}))},e}());function A(e,t){return"wgl2:".concat(e,"\t").concat(t)}t.usePersistentState=function(e,t,n,r){var o=c(l.useState(n),2),i=o[0],a=o[1];return l.useEffect((function(){d.get(e,t,n).then((function(e){a(r(e)?e:n)}))}),[n]),[i,function(n){a(n),d.set(e,t,n)}]},t.default=d},5395:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.capitalize=void 0,t.capitalize=function(e){return"".concat(e.charAt(0).toUpperCase()).concat(e.substring(1))}},3724:function(e,t){"use strict";var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};function r(e){return void 0===e}function o(e){return!Array.isArray(e)&&null!==e&&"object"==typeof e}function i(e){return"string"==typeof e}function a(e){return"string"==typeof e||void 0===e}function s(e){return"number"==typeof e}function c(e,t){if(void 0===t&&(t="data"),!s(e))throw Error("".concat(t," was expected to be a number but we got ").concat(typeof e,"!"))}function u(e){return"boolean"==typeof e}function l(e){var t,r;if(!Array.isArray(e))return!1;try{for(var o=n(e),a=o.next();!a.done;a=o.next())if(!i(a.value))return!1}catch(e){t={error:e}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return!0}function f(e){var t,r;if(!Array.isArray(e))return!1;try{for(var o=n(e),i=o.next();!i.done;i=o.next())if(!s(i.value))return!1}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}return!0}function d(e){return Array.isArray(e)}function A(e,t){if(void 0===t&&(t="data"),!d(e))throw Error("".concat(t," was expected to be an array but we got ").concat(typeof e,"!"))}Object.defineProperty(t,"__esModule",{value:!0}),t.isEMail=t.assertArray=t.ensureArray=t.isArray=t.ensureNumberArray=t.assertNumberArray=t.assertStringArray=t.isNumberArray=t.isStringArray=t.isArrayBuffer=t.assertBoolean=t.isBoolean=t.ensureNumber=t.assertNumberOrUndefined=t.assertNumber=t.isNumber=t.assertStringOrIUndefined=t.isStringOrIUndefined=t.ensureString=t.assertStringOrNumber=t.assertString=t.isString=t.assertObject=t.isObject=t.isUndefined=void 0,t.isUndefined=r,t.isObject=o,t.assertObject=function(e,t){if(void 0===t&&(t="data"),!o(e))throw Error("".concat(t," was expected to be an object but we got ").concat(typeof e,"!"))},t.isString=i,t.assertString=function(e,t){if(void 0===t&&(t="data"),!i(e))throw Error("".concat(t," was expected to be a string but we got ").concat(typeof e,"!"))},t.assertStringOrNumber=function(e,t){if(void 0===t&&(t=""),!i(e)&&!s(e))throw Error("".concat(t," was expected to be a string or a number but we got ").concat(typeof e,"!"))},t.ensureString=function(e,t){return i(e)?e:t},t.isStringOrIUndefined=a,t.assertStringOrIUndefined=function(e,t){if(void 0===t&&(t="data"),!a(e))throw Error("".concat(t," was expected to ba a string or undefined but we got ").concat(typeof e,"!"))},t.isNumber=s,t.assertNumber=c,t.assertNumberOrUndefined=function(e,t){if(void 0===t&&(t="data"),!s(e)&&!r(e))throw Error("".concat(t," was expected to be a number but we got ").concat(typeof e,"!"))},t.ensureNumber=function(e,t){return s(e)?e:t},t.isBoolean=u,t.assertBoolean=function(e,t){if(void 0===t&&(t="data"),!u(e))throw Error("".concat(t," was expected to be a boolean but we got ").concat(typeof e,"!"))},t.isArrayBuffer=function(e){return!!e&&e instanceof ArrayBuffer},t.isStringArray=l,t.isNumberArray=f,t.assertStringArray=function(e,t){if(void 0===t&&(t="data"),!l(e))throw Error("".concat(t," was expected to be an array of strings but we got ").concat(typeof e,"!"))},t.assertNumberArray=function(e,t){void 0===t&&(t="data"),A(e,t);for(var n=0;n<e.length;n++)c(e[n],"".concat(t,"[").concat(n,"]"))},t.ensureNumberArray=function(e,t){return void 0===t&&(t=[]),f(e)?e:t},t.isArray=d,t.ensureArray=function(e,t){return void 0===t&&(t=[]),d(e)?e:t},t.assertArray=A;var p=/^[^@ \t\n\r]+@(?:[A-Z0-9-]+\.)+[A-Z]{2,6}$/gi;t.isEMail=function(e){return!!i(e)&&("admin"===e||"test"===e||(p.lastIndex=-1,p.test(e)))}},8725:function(e,t){"use strict";var n=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0});var o=1e-6,i=255,a=1/6,s=1/15,c=1/99,u=1/i,l=function(){function e(t){void 0===t&&(t="#000000"),this.R=0,this.G=0,this.B=0,this.H=0,this.S=0,this.L=0,this.A=1,e.isValid(t)&&this.parse(t)}return e.fromColorOrString=function(t){return t?t instanceof e?t:new e(t):e.newBlack()},e.fromArrayRGB=function(t){if(!Array.isArray(t))return console.error("Invalid param rgb: ",t),e.fromRGB(0,0,0);for(;t.length<3;)t.push(0);var r=n(t,3),o=r[0],i=r[1],a=r[2];return e.fromRGB(o,i,a)},e.fromArrayRGBA=function(t){if(!Array.isArray(t))return console.error("Invalid param rgba: ",t),e.fromRGB(0,0,0);for(;t.length<4;)t.push(1);var r=n(t,4),o=r[0],i=r[1],a=r[2],s=r[3];return e.fromRGBA(o,i,a,s)},e.fromHSL=function(t,n,r){var o=new e;return o.H=t,o.S=n,o.L=r,o.hsl2rgb(),o},e.fromHSLA=function(t,n,r,o){var i=new e;return i.H=t,i.S=n,i.L=r,i.hsl2rgb(),i.A=o,i},e.isValid=function(e){if("string"!=typeof e)return!1;if("#"!==e.charAt(0))return!1;switch(e.length){case"#RGB".length:case"#RGBA".length:case"#RRGGBB".length:case"#RRGGBBAA".length:return!0;default:return!1}},e.contrast=function(t,n){var r=e.fromColorOrString(t),o=e.fromColorOrString(n),i=e.mix(r,o,o.A),a=r.luminance(),s=i.luminance(),c=.05;return a>s?(a+c)/(s+c):(s+c)/(a+c)},e.bestContrast=function(t){for(var n,o,i=[],a=1;a<arguments.length;a++)i[a-1]=arguments[a];var s=e.fromColorOrString(t),c=0,u=-1,l=0;try{for(var f=r(i),d=f.next();!d.done;d=f.next()){var A=d.value,p=e.contrast(s,A);p>c&&(c=p,u=l),l++}}catch(e){n={error:e}}finally{try{d&&!d.done&&(o=f.return)&&o.call(f)}finally{if(n)throw n.error}}return i[u]},e.luminance=function(t){return void 0===t?0:e.fromColorOrString(t).luminance()},e.luminanceStep=function(t){if(!e.isValid(t))return-1;var n=e.luminance(t),r=.05;return(n+r)/r>1.05/(n+r)?1:0},e.isDarkColor=function(t){return 0===e.luminanceStep(t)},e.isLightColor=function(t){return 1===e.luminanceStep(t)},e.makeDarker=function(t,n){if(void 0===n&&(n=.5),n<=0)return new e("#000");var r=e.fromColorOrString(t);return n>=1?r:e.fromHSLA(r.H,r.S,r.L,r.A*n)},e.makeHueRotated=function(t,n){void 0===n&&(n=.5);var r=e.fromColorOrString(t);return r.rgb2hsl(),r.H+=n-Math.floor(n),r.H>1&&r.H--,r.hsl2rgb(),r},e.makeTransparent=function(t,n){var r=e.fromColorOrString(t);return r.A=p(n),r},e.mix=function(t,n,r){void 0===r&&(r=.5);var o=e.fromColorOrString(t),i=e.fromColorOrString(n),a=1-r;return e.fromRGBA(r*i.R+a*o.R,r*i.G+a*o.G,r*i.B+a*o.B,r*i.A+a*o.A)},e.newBlack=function(){return e.fromRGB(0,0,0)},e.newWhite=function(){return e.fromRGB(1,1,1)},e.fromRGB=function(t,n,r){var o=new e;return o.R=t,o.G=n,o.B=r,o.A=1,o},e.fromRGBA=function(t,n,r,o){var i=new e;return i.R=t,i.G=n,i.B=r,i.A=o,i},e.normalize=function(t){return new e(t).stringify()},e.interpolate=function(t,n){if(n<1)return[];for(var r=t.map((function(t){return"string"==typeof t?new e(t):t})),o=[],i=1;i<=n;i++){var a=i/(n+1);o.push(e.ramp(r,a))}return o},e.ramp=function(t,n){if(void 0===n&&(n=.5),0===t.length)return e.newBlack();if(1===t.length)return t[0];var r=t.length-1,o=Math.floor(n*r),i=t[o];if(o===r)return i;var a=t[o+1],s=n*r-o;return e.mix(i,a,s)},e.prototype.copy=function(){var t=new e;return t.R=this.R,t.G=this.G,t.B=this.B,t.A=this.A,t.H=this.H,t.S=this.S,t.L=this.L,t},e.prototype.hsl2rgb=function(){var e=6*this.H,t=this.S,n=this.L,r=(1-Math.abs(n+n-1))*t,o=r*(1-Math.abs(e%2-1)),i=0,a=0,s=0;e<3?e<1?(i=r,a=o,s=0):e<2?(i=o,a=r,s=0):(i=0,a=r,s=o):e<4?(i=0,a=o,s=r):e<5?(i=o,a=0,s=r):(i=r,a=0,s=o);var c=n-.5*r;this.R=i+c,this.G=a+c,this.B=s+c},e.prototype.luminance=function(){var e=this,t=e.R,n=e.G,r=e.B,o=.03928,i=.07739938080495357,a=.055,s=.9478672985781991;return.2126*(t<o?t*i:Math.pow((t+a)*s,2.4))+.7152*(n<o?t*i:Math.pow((n+a)*s,2.4))+.0722*(r<o?t*i:Math.pow((r+a)*s,2.4))},e.prototype.luminanceStep=function(){return this.luminance()<.62?0:1},e.prototype.parse=function(e){void 0===e&&(e="#000000");var t=e.trim().toUpperCase();return!!(this.parseHexa.call(this,t)||this.parseRGB.call(this,t)||this.parseRGBA.call(this,t)||this.parseHSL.call(this,t))},e.prototype.rgb2hsl=function(){var e=this.R,t=this.G,n=this.B,r=Math.min(e,t,n),i=Math.max(e,t,n),s=i-r;this.L=.5*(i+r),s<o?(this.H=0,this.S=0):(this.S=s/(1-Math.abs(this.L+this.L-1)),this.H=i===e?t>=n?a*((t-n)/s):a*((n-t)/s):i===t?a*(2+(n-e)/s):a*(4+(e-t)/s))},e.prototype.stringify=function(){var e=m(this.R*i)+m(this.G*i)+m(this.B*i);this.A<1&&(e+=m(this.A*i));for(var t=!0,n=0;n<e.length;n+=2)if(e.charAt(n)!==e.charAt(n+1)){t=!1;break}return t&&(e=6===e.length?e.charAt(0)+e.charAt(2)+e.charAt(4):e.charAt(0)+e.charAt(2)+e.charAt(4)+e.charAt(6)),"#".concat(e)},e.prototype.toArrayRGB=function(){return[this.R,this.G,this.B]},e.prototype.toArrayRGBA=function(){return[this.R,this.G,this.B,this.A]},e.prototype.parseHexa=function(e){if("#"!==e.charAt(0))return!1;var t=0,n=0,r=0,o=1;switch(e.length){case"#fff".length:t=parseInt(e.charAt(1),16)*s,n=parseInt(e.charAt(2),16)*s,r=parseInt(e.charAt(3),16)*s;break;case"#fff7".length:t=parseInt(e.charAt(1),16)*s,n=parseInt(e.charAt(2),16)*s,r=parseInt(e.charAt(3),16)*s,o=parseInt(e.charAt(4),16)*s;break;case"#ffffff".length:t=parseInt(e.substr(1,2),16)*u,n=parseInt(e.substr(3,2),16)*u,r=parseInt(e.substr(5,2),16)*u;break;case"#ffffff77".length:t=parseInt(e.substr(1,2),16)*u,n=parseInt(e.substr(3,2),16)*u,r=parseInt(e.substr(5,2),16)*u,o=parseInt(e.substr(7,2),16)*u}return isNaN(t)||isNaN(n)||isNaN(r)||isNaN(o)?this.R=this.G=this.B=this.A=0:(this.R=t,this.G=n,this.B=r,this.A=o),!0},e.prototype.parseHSL=function(e){var t=A.exec(e);return!!t&&(this.H=p(.002785515320334262*parseInt(t[1],10)),this.S=p(parseInt(t[2],10)*c),this.L=p(parseInt(t[3],10)*c),this.A=1,this.hsl2rgb(),!0)},e.prototype.parseRGB=function(e){var t=f.exec(e);return!!t&&(this.R=p(parseInt(t[1],10)*u),this.G=p(parseInt(t[2],10)*u),this.B=p(parseInt(t[3],10)*u),this.A=1,!0)},e.prototype.parseRGBA=function(e){var t=d.exec(e);return!!t&&(this.R=p(parseInt(t[1],10)*u),this.G=p(parseInt(t[2],10)*u),this.B=p(parseInt(t[3],10)*u),this.A=p(parseFloat(t[4])),!0)},e}();t.default=l;var f=/^RGB[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/,d=/^RGBA[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/,A=/^HSL[\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;function p(e){return Math.min(1,Math.max(0,e))}function m(e){var t=Math.min(Math.max(Math.floor(e+o),0),i).toString(16);return t.length<"FF".length&&(t="0".concat(t)),t}},7857:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(8725);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},8499:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=o(n(9790)),a=o(n(7294)),s=a.default.createElement("svg",{viewBox:"0 0 24 24",preserveAspectRatio:"meet xMidYMid"},a.default.createElement("path",{fill:"currentColor",d:"M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z"})),c=new(function(){function e(){this.icons=new Map}return e.prototype.register=function(e,t){this.icons.set(e,t)},e.prototype.registerFromPath=function(e,t){this.icons.set(e,a.default.createElement("svg",{viewBox:"0 0 24 24",preserveAspectRatio:"meet xMidYMid"},a.default.createElement("path",{fill:"currentColor",d:t})))},e.prototype.registerMany=function(e){var t,n;try{for(var o=r(Object.keys(e)),i=o.next();!i.done;i=o.next()){var a=i.value,s=e[a];this.registerFromPath(a,s)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}},e.prototype.make=function(e){var t;return null!==(t=this.icons.get(e))&&void 0!==t?t:s},e}());t.default=c,c.registerMany(i.default)},1078:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(8499);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},7377:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.useDebouncedEffect=void 0;var a=i(n(7294));t.useDebouncedEffect=function(e,t,n){var r=a.useRef(-1);a.useEffect((function(){window.clearTimeout(r.current),r.current=window.setTimeout(e,t)}),n)}},9383:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(t,"__esModule",{value:!0}),t.useHash=void 0;var s=i(n(7294));t.useHash=function(){var e=a(s.useState(window.location.hash),2),t=e[0],n=e[1];return s.useEffect((function(){var e=function(e){console.log("🚀 [hash] evt.newURL = ",e.newURL),n(window.location.hash)};return window.addEventListener("hashchange",e),function(){return window.removeEventListener("hashchange",e)}}),[]),t}},5525:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useTogglePopup=t.useResizeObserver=t.useLocalStorageState=t.useDebouncedEffect=void 0;var r=n(7377);Object.defineProperty(t,"useDebouncedEffect",{enumerable:!0,get:function(){return r.useDebouncedEffect}});var o=n(7066);Object.defineProperty(t,"useLocalStorageState",{enumerable:!0,get:function(){return o.useLocalStorageState}});var i=n(4514);Object.defineProperty(t,"useResizeObserver",{enumerable:!0,get:function(){return i.useResizeObserver}});var a=n(1788);Object.defineProperty(t,"useTogglePopup",{enumerable:!0,get:function(){return a.useTogglePopup}})},7066:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.useLocalStorageState=void 0;var c=s(n(1142)),u=i(n(7294));t.useLocalStorageState=function(e,t,n){var r=a(u.useState(function(e,t,n){var r=window.localStorage.getItem(e);if(!r)return n?n(t):t;try{var o=c.default.parse(r);if(typeof o!=typeof t)throw Error("Incompatible types!");return n?n(o):o}catch(r){return console.error('Unexpected value in local storage "'.concat(e,'":'),r),n?n(t):t}}(t,e,n)),2),o=r[0],i=r[1];return[o,function(e){i(e),window.localStorage.setItem(t,c.default.stringify(e))}]}},4514:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.useResizeObserver=void 0;var c=i(n(7294)),u=s(n(3749));function l(e){return e?[e.clientWidth,e.clientHeight]:[0,0]}t.useResizeObserver=function(e,t){var n=a(c.useState(l(e)),2),r=n[0],o=n[1],i=c.useMemo((function(){var e=function(e,t){return o([e,t])};return"number"==typeof t&&t>0?u.default.Debouncer(e,t):e}),[t]);return c.useEffect((function(){if(o(l(e)),e){var t=new ResizeObserver((function(){var t=e.getBoundingClientRect(),n=t.width,r=t.height;i(n,r)}));return t.observe(e),function(){return t.unobserve(e)}}}),[e,i]),r}},1788:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(t,"__esModule",{value:!0}),t.useTogglePopup=void 0;var s=i(n(7294)),c=Math.random();function u(e,t){if(!e)return!1;var n=e.type,r=e.id,o=e.value;return"toggle-popup"===n&&r===t&&"boolean"==typeof o}function l(e,t){return{type:"toggle-popup",id:e,value:t}}function f(){window.history.back()}t.useTogglePopup=function(){var e=s.useRef(-1),t=s.useRef(null),n=a(s.useState(!1),2),r=n[0],o=n[1];return s.useEffect((function(){e.current=c++;var n=function(n){var r=n.state,i=t.current;if(t.current=r,u(r,e.current)){var a=r.value;o(a),a||(u(i,e.current)?!0===i.value&&f():window.history.forward())}};return window.addEventListener("popstate",n,!1),function(){return window.removeEventListener("popstate",n,!1)}}),[]),[r,function(n){if(n!==r)if(n){var i=e.current;window.history.pushState(l(i,!1),document.title,null);var a=l(i,!0);window.history.pushState(a,document.title,null),t.current=a,o(!0)}else f()}]}},4977:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){this.target=null!=e?e:window.document.body}return e.prototype.set=function(e,t){this.target.style.setProperty(this.sanitizeName(e),t)},e.prototype.get=function(e){return this.target.style.getPropertyValue(this.sanitizeName(e))},e.prototype.sanitizeName=function(e){return e.startsWith("--")?e:"--".concat(e)},e}();t.default=n},1311:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(352);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},352:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=o(n(7857)),a=o(n(4977));n(3003);var s="theme",c="-color",u="-opacity-",l={apply:function(e,t){f=e;var n=new a.default(t);(function(e,t){var n=i.default.fromColorOrString(e.colors.white),r=i.default.fromColorOrString(e.colors.black);if(d(t,"primary",e.colors.primary.base,n,r),d(t,"primary-light",e.colors.primary.light,n,r),d(t,"primary-dark",e.colors.primary.dark,n,r),d(t,"accent",e.colors.accent.base,n,r),d(t,"accent-light",e.colors.accent.light,n,r),d(t,"accent-dark",e.colors.accent.dark,n,r),d(t,"error",e.colors.error,n,r),d(t,"screen",e.colors.screen,n,r),d(t,"frame",e.colors.frame,n,r),d(t,"section",e.colors.section,n,r),d(t,"input",e.colors.input,n,r),d(t,"white",e.colors.white,n,r),d(t,"black",e.colors.black,n,r),e.colors.link)t.set(p("link"),e.colors.link);else{var o=l.shade(e.colors.accent.base,.6),a=l.shade(e.colors.accent.base,.6);t.set(p("link"),i.default.bestContrast(e.colors.frame,e.colors.primary.dark,e.colors.primary.base,e.colors.primary.light,a.light,a.dark,e.colors.accent.dark,e.colors.accent.base,e.colors.accent.light,o.light,o.dark))}})(e,n),function(e,t){var n,o,i={card:1,button:2,header:4,"button-pressed":8,dialog:24};try{for(var a=r(Object.keys(i)),c=a.next();!c.done;c=a.next()){var u=c.value,l=.0625*i[u];t.set("".concat(s).concat("-shadow","-").concat(u),"0 ".concat(l,"rem ").concat(2*l,"rem ").concat("#000a"))}}catch(e){n={error:e}}finally{try{c&&!c.done&&(o=a.return)&&o.call(a)}finally{if(n)throw n.error}}}(0,n)},shade:function(e,t){void 0===t&&(t=.5);var n="string"==typeof e?new i.default(e):e;n.rgb2hsl();var r=n.H,o=n.S,a=n.L,s=n.A;return{base:n.stringify(),dark:i.default.fromHSLA(r,o,a*(1-t),s).stringify(),light:i.default.fromHSLA(r,o,a+(1-a)*t,s).stringify()}},get current(){return f},get defaultDarkTheme(){return{colors:{black:"#000",white:"#fff",error:"#f20",screen:"#ddd",frame:"#e9ebef",section:"#eff2f5",input:"#fff",primary:{dark:"#050A56",base:"#0083CB",light:"#00D4FE"},accent:{dark:"#802d00",base:"#cb4800",light:"#ff8c4d"},link:"#802d00"}}},get defaultLightTheme(){return{colors:{black:"#111e",white:"#eeee",error:"#f20",screen:"#bbb",frame:"#ccc",section:"#ddd",input:"#eee",primary:{dark:"#1f2859",base:"#3e50b4",light:"#5871ff"},accent:{dark:"#59501f",base:"#b4a23e",light:"#ffe658"}}}}};t.default=l;var f=l.defaultDarkTheme;function d(e,t,n,r,o){var a=i.default.fromColorOrString(n);e.set(p(t),a.stringify());for(var s=5;s<100;s+=5)a.A=.01*s,e.set(p(t,s),a.stringify());var c=i.default.bestContrast(a,r,o);for(e.set(m(t),c.stringify()),s=5;s<100;s+=5){var u=c.copy();u.A=.01*s*c.A,e.set(m(t,s),u.stringify())}}var A={"accent-dark":"-accent-dark","accent-light":"-accent-light","primary-dark":"-primary-dark","primary-light":"-primary-light",accent:"-accent",black:"-black",error:"-error",frame:"-frame",input:"-input",primary:"-primary",screen:"-screen",section:"-section",white:"-white",link:"-link"};function p(e,t){void 0===t&&(t=0);var n=A[e];return"".concat(s).concat(c).concat(n).concat(t>0?"".concat(u).concat(t):"")}function m(e,t){void 0===t&&(t=0);var n=A[e];return"".concat(s).concat(c).concat("-on").concat(n).concat(t>0?"".concat(u).concat(t):"")}},1211:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294)),c=a(n(1078)),u=a(n(5630)),l=a(n(3665));function f(e){var t=e.className,n=e.enabled,r=e.reversed,o=e.outline,i=e.wide,a=e.flat,s=e.icon,c=["custom","ui-view-ButtonView"];return"string"==typeof t&&c.push(t),!1===n&&c.push("disabled"),!0===i&&c.push("wide"),!0===a&&c.push("flat"),!0===o&&c.push("outline"),s&&c.push("with-icon"),!0===r&&c.push("flip"),c.join(" ")}n(9898),t.default=function(e){var t,n=e.label,r=e.icon,o=e.error,i=e.tag,a=e.onClick,d=function(){"function"==typeof a&&a(i)};return!1===e.visible?null:n?s.createElement("div",{className:f(e)},o&&s.createElement(l.default,{className:"error",error:!0,value:o}),s.createElement("button",{className:"theme-color-".concat(null!==(t=e.color)&&void 0!==t?t:"primary"),onClick:d},r&&c.default.make(r),s.createElement("div",{className:"label"},n))):s.createElement(u.default,{enabled:e.enabled,tag:i,icon:null!=r?r:"ok",className:f(e),onClick:d,color:e.color})}},7583:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(1211);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},7763:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(7294));function s(e){var t=e.className,n=e.value,r=e.enabled,o=e.wide,i=e.reverse,a=["custom","ui-view-CheckboxView"];return"string"==typeof t&&a.push(t),!0===n&&a.push("ok"),!1===r&&a.push("disabled"),!0===o&&a.push("wide"),!0===i&&a.push("reverse"),a.join(" ")}n(5192),t.default=function(e){var t=e.value,n=e.label,r=e.enabled,o=e.onChange;return a.createElement("button",{className:s(e),disabled:!1===r||void 0,onClick:function(){return o(!t)}},a.createElement("div",{className:"pin"},a.createElement("div",{className:"bar"}," "),a.createElement("div",{className:"btn"}," ")),a.createElement("div",{className:"label"},n))}},8168:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(7763);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},1626:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294)),c=a(n(1078));function u(e){var t=e.className,n=e.small,r=e.enabled,o=e.color,i=["custom","ui-view-FloatingButtonView"];return"string"==typeof t&&i.push(t),!0===n&&i.push("small"),!1===r&&i.push("disabled"),i.push("theme-color-".concat(null!=o?o:"primary")),i.join(" ")}n(8892),t.default=function(e){return s.createElement("button",{className:u(e),onClick:function(){var t=e.onClick,n=e.tag;t&&t(n)}},c.default.make(e.icon))}},5630:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(1626);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},402:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294)),c=a(n(1078));function u(e){var t=["custom","ui-view-IconView"];return"string"==typeof e.className&&t.push(e.className),!0===e.animate&&t.push("animate"),e.onClick&&t.push("clickable"),t.join(" ")}n(160),t.default=function(e){var t,n=null!==(t=e.size)&&void 0!==t?t:"1.5rem";return s.createElement("div",{title:e.title,className:u(e),tabIndex:0,onClick:function(){return e.onClick&&e.onClick()},style:{width:n,height:n}},c.default.make(e.name))}},7937:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(402);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},1779:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(700);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},700:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294)),c=a(n(4338));n(8291),t.default=function(e){var t=e.value,n=e.label,r=e.size,o=e.enabled,i=e.wide,a=e.width,f=e.onChange,d=e.onEnterPressed;return s.createElement(c.default,{className:l(e),value:"".concat(t),label:n,size:r,enabled:o,wide:i,width:a,validator:function(t){if(u.lastIndex=-1,!u.test(t))return!1;var n=parseFloat(t);return!("number"==typeof e.min&&n<e.min||"number"==typeof e.max&&n>e.max)},onChange:function(e){return f&&f(parseFloat(e))},onEnterPressed:function(e){return d&&d(parseFloat(e))}})};var u=/^[+-]?[0-9]+$/gi;function l(e){var t=["custom","ui-view-input-FloatView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}},4338:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(3080);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},3080:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),n(4342);var c=i(n(7294)),u=n(3724),l=s(n(7857)),f=s(n(3665)),d="ui-view-input-TextView",A=1;function p(e,t){var n=["custom",d];return"string"==typeof e.className&&n.push(e.className),!0===e.wide&&n.push("wide"),!1===t&&n.push("invalid"),n.join(" ")}function m(e,t){if(!t)return!0;if("function"==typeof t)try{return t(e)}catch(e){return!1}return t.lastIndex=-1,t.test(e)}t.default=function(e){var t=e.name,n=e.value,r=e.label,o=e.error,i=e.size,s=e.type,h=e.focus,v=e.width,b=e.enabled,g=e.placeholder,C=e.validator,y=e.suggestions,w=e.backgroundColor,_=e.onChange,B=e.onValidation,E=e.onEnterPressed,I=c.useRef(null),S=a(c.useState(""),2),x=S[0],V=S[1],M=a(c.useState(n),2),D=M[0],k=M[1],O=a(c.useState(m(n)),2),R=O[0],P=O[1];c.useEffect((function(){return V("".concat(d,"-").concat(A++))}),[]),c.useEffect((function(){return function(){I.current&&(h?window.setTimeout((function(){var e;return null===(e=I.current)||void 0===e?void 0:e.focus()})):window.setTimeout((function(){var e;return null===(e=I.current)||void 0===e?void 0:e.blur()})))}}),[h,I.current]),c.useEffect((function(){k(n)}),[n]);var T="".concat(x,":datalist"),L={};if((0,u.isString)(v)&&(L.width=v),(0,u.isString)(w)){var j=new l.default(w),U=l.default.bestContrast(j,"#000","#fff");L.backgroundColor=j.stringify(),L.color=U,L.fontWeight="bolder"}return c.createElement("div",{className:p(e,R)},c.createElement(f.default,{value:null!=o?o:r,target:x,error:!!o}),y&&c.createElement("datalist",{id:T},y.map((function(e){return c.createElement("option",{key:e,value:e})}))),c.createElement("input",{id:x,ref:I,name:t,size:i,list:T,value:D,type:s,style:L,placeholder:g,disabled:!1===b||void 0,onChange:function(e){var t=e.target.value,n=m(t,C);B&&B(n),P(n),k(t),n&&"function"==typeof _&&_(t)},onKeyDownCapture:function(e){R&&"function"==typeof E&&"Enter"===e.key&&E(D)}}),c.createElement(f.default,{className:"hide",value:r,target:x}))}},3665:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(5323);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5323:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(7294));function s(e){var t=["custom","ui-view-LabelView"];return"string"==typeof e.className&&t.push(e.className),!0===e.error&&t.push("error"),!1===e.visible&&t.push("hide"),t.join(" ")}n(6825),t.default=function(e){var t=e.value,n=e.target;return void 0===t?null:a.createElement("label",{htmlFor:n,className:s(e)},t)}},3693:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(6754);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},6754:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),u=n(3724),l=s(n(3665));function f(e){var t=["custom","ui-view-SimpleComboView"];return"string"==typeof e.className&&t.push(e.className),!0===e.wide&&t.push("wide"),t.join(" ")}n(2384),t.default=function(e){var t=e.label,n=e.options,r=e.onChange,o=a(c.useState(e.value),2),i=o[0],s=o[1];return c.createElement("div",{className:f(e)},c.createElement(l.default,{value:t}),c.createElement("div",{className:"container theme-shadow-button"},c.createElement("select",{className:"theme-color-input",value:i,onChange:function(e){var t=e.target.value;s(t),r(t)}},Object.keys(n).map((function(e){return function(e,t){return(0,u.isString)(t)?c.createElement("option",{key:e,value:e},t):c.createElement("optgroup",{key:"grp/".concat(e),label:e},Object.keys(t).map((function(e){return c.createElement("option",{key:e,value:e},t[e])})))}(e,n[e])}))),c.createElement("div",{className:"dropdown-button theme-color-primary"},"▼")),c.createElement(l.default,{value:t,visible:!1}))}},9615:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(2891);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},2891:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),u=s(n(3665));function l(e){var t=["custom","ui-view-SliderView"];return"string"==typeof e.className&&t.push(e.className),!0===e.wide&&t.push("wide"),t.join(" ")}function f(e){return c.createElement("div",null,"ERROR! min = ",e.min," "," > "," max = ",e.max)}function d(e,t,n){return void 0===t&&(t=0),void 0===n&&(n=1),Math.max(Math.min(e,n),t)}n(357),t.default=function(e){var t,n,r,o=e.onChange,i=null!==(t=e.min)&&void 0!==t?t:0,s=null!==(n=e.max)&&void 0!==n?n:100,A=Math.max(1e-6,null!==(r=e.steps)&&void 0!==r?r:1),p=a(c.useState(d(e.value,i,s)),2),m=p[0],h=p[1];c.useEffect((function(){return h(d(e.value,i,s))}),[e.value]),c.useEffect((function(){o(m)}),[m]);var v=c.useRef(null);return function(e,t,n,r,o,i,a){c.useEffect((function(){var s=e.current;if(s){var c=function(e,t,n,r,o,i){return function(a){var s=0;switch(a.key){case"ArrowLeft":s=-e;break;case"ArrowRight":s=e;break;case"ArrowUp":s=10*e;break;case"ArrowDown":s=10*-e;break;case"Home":s=t-n;break;case"End":s=r-n;break;case".":s=.5*(t+r)-n;break;default:return}var c=d(n+s,t,r);c!==n&&(o(c),i(c))}}(o,n,t,r,i,a);return s.addEventListener("keydown",c,!0),function(){return s.removeEventListener("keydown",c,!0)}}}),[e,t,n,r,o])}(v,m,i,s,A,h,o),i>=s?c.createElement(f,{min:i,max:s}):("".concat(100*(m-i)/(s-i),"%"),c.createElement("div",{className:l(e),tabIndex:0},c.createElement(u.default,{value:e.label}),c.createElement("input",{type:"range",ref:v,min:i,max:s,value:m,onChange:function(e){return h(parseFloat(e.target.value))}})))}},514:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(2801);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},2801:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294));function c(e){var t=["custom","ui-view-TabstripView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(743),t.default=function(e){var t=e.headers,n=(e.children,e.value),r=e.onChange,o=a(s.useState((null!=n?n:0)%t.length),2),i=o[0],u=o[1],l=e.children[i];return s.createElement("div",{className:c(e)},s.createElement("header",null,t.map((function(e,t){return s.createElement("button",{key:t,className:i===t?"selected":"",onClick:function(){return u(e=t),void(r&&r(e));var e}},e)})),s.createElement("div",{className:"space"})),s.createElement("main",null,s.createElement("div",{className:"selected"},l)))}},4740:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294)),c=a(n(460)),u=a(n(5660)),l=n(6535);function f(e){var t=["custom","view-CodeEditorView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(117),t.default=function(e){return s.createElement("div",{className:f(e)},s.createElement(c.default,{value:e.value,onValueChange:e.onChange,highlight:function(t){return u.default.highlight(t,(0,l.getGrammarForLanguage)(e.language),e.language)}}))}},9860:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4740);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},1318:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))},c=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(7294)),f=u(n(1942)),d=u(n(3390)),A=u(n(4610)),p=u(n(7937)),m=u(n(8987)),h=n(8549),v=n(5423);function b(e,t){var n=["custom","view-CodeView","theme-shadow-button"];return"string"==typeof e.className&&n.push(e.className),t&&n.push("expanded"),n.join(" ")}n(6850),n(3479),d.default.registerLanguage("typescript",m.default),d.default.registerLanguage("glsl",f.default),d.default.registerLanguage("html",A.default),t.default=function(e){var t,n,r=a(l.useState(null===(t=e.expanded)||void 0===t||t),2),o=r[0],i=r[1],u=a(l.useState(!1),2),f=u[0],A=u[1],m=function(){return i(!o)},y=l.useRef(null);l.useEffect((function(){y.current&&d.default.highlightElement(y.current)}),[e.value,y,f]);var w=function(e,t,n){return t&&"typescript"===n?(0,v.transpileModule)(e,{compilerOptions:{module:v.ModuleKind.ES2020,experimentalDecorators:!0}}).outputText:e}(function(e,t){var n,r,o=[],i=[],u=function(e){if(e.startsWith(g)){var t=e.substring(g.length).trim();return i.includes(t)||i.push(t),"continue"}if(e.startsWith(C)){var n=e.substring(C.length).trim();return i=i.filter((function(e){return e!=n})),"continue"}o.push({line:e,regions:s([],a(i),!1)})};try{for(var l=c(e.split("\n")),f=l.next();!f.done;f=l.next())u(f.value)}catch(e){n={error:e}}finally{try{f&&!f.done&&(r=l.return)&&r.call(l)}finally{if(n)throw n.error}}return t?o.filter((function(e){return e.regions.includes(t)})).map((function(e){return e.line})).join("\n"):o.map((function(e){return e.line})).join("\n")}(e.value,e.region),f,e.lang);return l.createElement("div",{className:b(e,o)},l.createElement("header",{className:"theme-color-primary-dark"},l.createElement(p.default,{name:"chevron-".concat(o?"down":"right"),onClick:m}),l.createElement("div",{className:"label",onClick:m},null!==(n=e.label)&&void 0!==n?n:""),l.createElement(p.default,{name:f?"ts":"js",onClick:function(){return A(!f)}}),l.createElement("div",{style:{width:"1em"}}),l.createElement(p.default,{name:"copy",onClick:function(){return(0,h.copyToClipboard)(w)}})),l.createElement("pre",null,l.createElement("code",{ref:y,className:"language-".concat(e.lang)},w)))};var g="//#region",C="//#endregion"},9681:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(1318);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},4446:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(7294));function s(e){var t=["custom","view-FallbackView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(5075),t.default=function(e){return a.createElement("div",{className:s(e)},"Chargement en  cours...")}},8260:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(4446);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},3301:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),u=s(n(9681));function l(e){var t=["custom","view-markdown-CodeView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(3605),t.default=function(e){var t=a(function(e){var t,n,r=e.children.trim(),o=(null!==(t=e.ts)&&void 0!==t?t:{})[r];if(o)return[o,"typescript"];var i=(null!==(n=e.glsl)&&void 0!==n?n:{})[r];return i?[i,"glsl"]:[r,null]}(e),2),n=t[0],r=t[1];return r?c.createElement(u.default,{className:l(e),lang:r,region:e.region,label:e.label,value:n}):c.createElement("div",{className:"theme-color-error"},"Error!",c.createElement("br",null),'Code "',n,'" does not exist.')}},5035:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(3301);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},5260:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(6085);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},6085:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=i(n(7294)),c=a(n(5035)),u=a(n(9732));function l(e){var t=["custom","view-MarkdownView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(2661),t.default=function(e){return s.createElement("div",{className:l(e)},s.createElement(u.default,{options:{overrides:{Code:function(t){return s.createElement(c.default,{children:"".concat(t.children),label:t.label,region:t.region,glsl:e.glsl,ts:e.ts})}}}},e.children))}},4017:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=n(889);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return i(a).default}}),o(n(889),t)},889:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),u=s(n(8168));function l(e){var t=["custom","view-SceneView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(7176),t.default=function(e){var t,n=c.useRef(null!==(t=e.play)&&void 0!==t&&t),r=a(c.useState(n.current),2),o=r[0],i=r[1],s=a(c.useState(!1),2),f=s[0],d=s[1];c.useEffect((function(){n.current=o}),[o]);var A=c.useCallback((function(t){if(t){var r=t.getContext("webgl2");r?e.onInit(r).then((function(e){var t=0,o=0,i=0,a=0,s=r.canvas,c=!0,u=function(l){window.requestAnimationFrame(u);var f=Math.ceil(s.clientWidth),d=Math.ceil(s.clientHeight);f===t&&d===o||(t=f,o=d,s.width=f,s.height=d,r.viewport(0,0,f,d),e(i+a)),c&&e(l+a),c!==n.current&&((c=n.current)?a+=i-l:i=l)};window.requestAnimationFrame(u)})).catch(console.error):console.error("Unable to create a WebGL2 Context!")}}),[]);return c.createElement("div",{className:l(e)},c.createElement("canvas",{className:f?"fullscreen":"theme-shadow-button",ref:A,onDoubleClick:function(e){e.ctrlKey||d(!f)}}),c.createElement("footer",null,c.createElement("p",null,"Double-clic pour passer en plein écran (et revenir)"),c.createElement(u.default,{label:"Animer",value:o,onChange:i})))}},6560:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=n(1143);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r(o).default}})},1143:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return o(t,e),t},a=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(7294)),u=s(n(9860)),l=n(5525);function f(e){var t=["custom","view-ShaderCodeEditorView"];return"string"==typeof e.className&&t.push(e.className),t.join(" ")}n(2357),t.default=function(e){var t,n=a(c.useState(e.value),2),r=n[0],o=n[1];return(0,l.useDebouncedEffect)((function(){r!==e.value&&e.onChange(r)}),null!==(t=e.debouncing)&&void 0!==t?t:1e3,[r]),c.useEffect((function(){return o(e.value)}),[e.value]),c.createElement("div",{className:f(e)},c.createElement("header",{className:"theme-color-primary-dark"},e.label),c.createElement(u.default,{className:"code-editor",language:"glsl",value:r,onChange:o}),e.error&&c.createElement("pre",{className:"theme-color-error"},e.error))}},2979:function(e,t,n){"use strict";var r=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(t,"__esModule",{value:!0}),t.analyseProgram=void 0;var i=n(699),a=n(7541),s=n(9457);function c(e,t,n){var r,o=t.createShader(e);if(!o)throw Error("Unable to create a WebGL shader of type ".concat(e,"!"));if(t.shaderSource(o,n),t.compileShader(o),!t.getShaderParameter(o,t.COMPILE_STATUS))throw Error(null!==(r=t.getShaderInfoLog(o))&&void 0!==r?r:"Unknow error while compiling the shader!");return o}t.analyseProgram=function(e){var t={vertCode:e.vert,fragCode:e.frag,vertError:null,fragError:null,uniforms:[],attributes:[]};try{var n=function(){var e=document.createElement("canvas").getContext("webgl2");if(!e)throw Error("Unable to create WebGL2 context!");return e}(),r=function(e){var t=e.createProgram();if(!t)throw Error("Unable to create WebGL Program!");return t}(n);if(function(e,t,n){try{var r=c(e.VERTEX_SHADER,e,n);e.attachShader(t,r)}catch(e){throw Error("<VERT>".concat(l(n,e)))}}(n,r,e.vert),function(e,t,n){try{var r=c(e.FRAGMENT_SHADER,e,n);e.attachShader(t,r)}catch(e){throw Error("<FRAG>".concat(l(n,e)))}}(n,r,e.frag),n.linkProgram(r),!n.getProgramParameter(r,n.LINK_STATUS)){var o=n.getProgramInfoLog(r);throw new Error("Could link WebGL2 program.\n"+o)}t.uniforms=(0,s.listUniforms)(n,r),t.attributes=(0,i.listAttributes)(n,r),console.log("🚀 [analyse-program] analyse.attributes = ",t.attributes)}catch(e){var u=(0,a.getExceptionMessage)(e);u.startsWith("<VERT>")?t.vertError=u.substring("<VERT>".length):u.startsWith("<FRAG>")?t.fragError=u.substring("<FRAG>".length):(t.vertError=u,t.fragError=u)}return t};var u=/^(ERROR|WARNING): [0-9]+:([0-9]+)/gu;function l(e,t){var n,i,a,s,c=e.split("\n"),l=t instanceof Error?t.message:JSON.stringify(t),f=new Set,d=new Set;try{for(var A=r(l.split("\n")),p=A.next();!p.done;p=A.next()){var m=p.value;u.lastIndex=-1;var h=u.exec(m);if(h){var v=o(h,3),b=(v[0],v[1],v[2]),g=parseInt(b);if(!isNaN(g)){d.add(g);for(var C=-2;C<=2;C++){var y=g+C;y<1||y>c.length||f.add(y)}}}}}catch(e){n={error:e}}finally{try{p&&!p.done&&(i=A.return)&&i.call(A)}finally{if(n)throw n.error}}var w=[],_=Array.from(f).sort(),B=0;try{for(var E=r(_),I=E.next();!I.done;I=E.next()){(b=I.value)-B>1&&w.push(""),B=b;for(var S=d.has(b)?">":" ",x="".concat(b);x.length<7;)x=" ".concat(x);m=c[b-1],w.push("".concat(S).concat(x," | ").concat(m))}}catch(e){a={error:e}}finally{try{I&&!I.done&&(s=E.return)&&s.call(E)}finally{if(a)throw a.error}}return"".concat(l,"\n").concat(w.join("\n"))}},699:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.listAttributes=void 0;var r=n(6844);function o(e,t){switch(t.type){case e.FLOAT:return 1;case e.FLOAT_VEC2:return 2;case e.FLOAT_VEC3:return 3;case e.FLOAT_VEC4:return 4;default:return 0}}t.listAttributes=function(e,t){for(var n=[],i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),a=0;a<i;a++){var s=e.getActiveAttrib(t,a);if(s&&!["gl_InstanceID"].includes(s.name)){var c=o(e,s);if(0===c)throw Error("Don't know how to deal with type \"".concat((0,r.lookupConstantName)(e,s.type),'" for attribute "').concat(s.name,'"!'));n.push({name:s.name,size:c,length:s.size,type:(0,r.lookupConstantName)(e,s.type),index:e.getAttribLocation(t,s.name)})}}return n.sort((function(e,t){return e.index-t.index})),console.log("🚀 attributes = ",n),n}},8833:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(2979),t)},9457:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.listUniforms=void 0;var r=n(6844);t.listUniforms=function(e,t){for(var n=[],o=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),i=0,a=0;a<o;a++){var s=e.getActiveUniform(t,a);s&&null!==e.getUniformLocation(t,s.name)&&(n.push({name:s.name,size:s.size,type:(0,r.lookupConstantName)(e,s.type),slot:i}),s.type===e.SAMPLER_2D&&(i+=s.size))}return console.log("🚀 [hooks] uniforms = ",n),n}},6844:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.lookupConstantName=void 0,t.lookupConstantName=function(e,t){for(var n in e)if(e[n]===t)return n;return"".concat(t,"?")}},3411:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=3411,e.exports=t},9790:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r={add:"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z","arrow-down":"M9,4H15V12H19.84L12,19.84L4.16,12H9V4Z","arrow-left":"M20,9V15H12V19.84L4.16,12L12,4.16V9H20Z","arrow-right":"M4,15V9H12V4.16L19.84,12L12,19.84V15H4Z","arrow-up":"M15,20H9V12H4.16L12,4.16L19.84,12H15V20Z",back:"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z",book:"M21,5C19.89,4.65 18.67,4.5 17.5,4.5C15.55,4.5 13.45,4.9 12,6C10.55,4.9 8.45,4.5 6.5,4.5C4.55,4.5 2.45,4.9 1,6V20.65C1,20.9 1.25,21.15 1.5,21.15C1.6,21.15 1.65,21.1 1.75,21.1C3.1,20.45 5.05,20 6.5,20C8.45,20 10.55,20.4 12,21.5C13.35,20.65 15.8,20 17.5,20C19.15,20 20.85,20.3 22.25,21.05C22.35,21.1 22.4,21.1 22.5,21.1C22.75,21.1 23,20.85 23,20.6V6C22.4,5.55 21.75,5.25 21,5M21,18.5C19.9,18.15 18.7,18 17.5,18C15.8,18 13.35,18.65 12,19.5V8C13.35,7.15 15.8,6.5 17.5,6.5C18.7,6.5 19.9,6.65 21,7V18.5Z",bug:"M14,12H10V10H14M14,16H10V14H14M20,8H17.19C16.74,7.22 16.12,6.55 15.37,6.04L17,4.41L15.59,3L13.42,5.17C12.96,5.06 12.5,5 12,5C11.5,5 11.04,5.06 10.59,5.17L8.41,3L7,4.41L8.62,6.04C7.88,6.55 7.26,7.22 6.81,8H4V10H6.09C6.04,10.33 6,10.66 6,11V12H4V14H6V15C6,15.34 6.04,15.67 6.09,16H4V18H6.81C7.85,19.79 9.78,21 12,21C14.22,21 16.15,19.79 17.19,18H20V16H17.91C17.96,15.67 18,15.34 18,15V14H20V12H18V11C18,10.66 17.96,10.33 17.91,10H20V8Z",center:"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M19,19H15V21H19A2,2 0 0,0 21,19V15H19M19,3H15V5H19V9H21V5A2,2 0 0,0 19,3M5,5H9V3H5A2,2 0 0,0 3,5V9H5M5,15H3V19A2,2 0 0,0 5,21H9V19H5V15Z","chevron-down":"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z","chevron-right":"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z",close:"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z",copy:"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z",cut:"M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z",delete:"M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8.46,11.88L9.87,10.47L12,12.59L14.12,10.47L15.53,11.88L13.41,14L15.53,16.12L14.12,17.53L12,15.41L9.88,17.53L8.47,16.12L10.59,14L8.46,11.88M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z",edit:"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z",export:"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z","external-link":"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z",filter:"M14,12V19.88C14.04,20.18 13.94,20.5 13.71,20.71C13.32,21.1 12.69,21.1 12.3,20.71L10.29,18.7C10.06,18.47 9.96,18.16 10,17.87V12H9.97L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L14.03,12H14Z",fly:"M5,7H9A2,2,0,0,1,11,9V15A2,2,0,0,1,9,17H5V15H9V13H6V11H9V9H5V7M13,7H16A3,3,0,0,1,19,10V14A3,3,0,0,1,16,17H13V7M16,15A1,1,0,0,0,17,14V10A1,1,0,0,0,16,9H15V15H16Z",focus:"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M19,19H15V21H19A2,2 0 0,0 21,19V15H19M19,3H15V5H19V9H21V5A2,2 0 0,0 19,3M5,5H9V3H5A2,2 0 0,0 3,5V9H5M5,15H3V19A2,2 0 0,0 5,21H9V19H5V15Z","format-bold":"M13.5,15.5H10V12.5H13.5A1.5,1.5 0 0,1 15,14A1.5,1.5 0 0,1 13.5,15.5M10,6.5H13A1.5,1.5 0 0,1 14.5,8A1.5,1.5 0 0,1 13,9.5H10M15.6,10.79C16.57,10.11 17.25,9 17.25,8C17.25,5.74 15.5,4 13.25,4H7V18H14.04C16.14,18 17.75,16.3 17.75,14.21C17.75,12.69 16.89,11.39 15.6,10.79Z","format-bullets":"M7,5H21V7H7V5M7,13V11H21V13H7M4,4.5A1.5,1.5 0 0,1 5.5,6A1.5,1.5 0 0,1 4,7.5A1.5,1.5 0 0,1 2.5,6A1.5,1.5 0 0,1 4,4.5M4,10.5A1.5,1.5 0 0,1 5.5,12A1.5,1.5 0 0,1 4,13.5A1.5,1.5 0 0,1 2.5,12A1.5,1.5 0 0,1 4,10.5M7,19V17H21V19H7M4,16.5A1.5,1.5 0 0,1 5.5,18A1.5,1.5 0 0,1 4,19.5A1.5,1.5 0 0,1 2.5,18A1.5,1.5 0 0,1 4,16.5Z","format-italic":"M10,4V7H12.21L8.79,15H6V18H14V15H11.79L15.21,7H18V4H10Z",fullscreen:"M12 5.5L10 8H14L12 5.5M18 10V14L20.5 12L18 10M6 10L3.5 12L6 14V10M14 16H10L12 18.5L14 16M21 3H3C1.9 3 1 3.9 1 5V19C1 20.1 1.9 21 3 21H21C22.1 21 23 20.1 23 19V5C23 3.9 22.1 3 21 3M21 19H3V5H21V19Z",gear:"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z","gps-off":"M3.05,13H1V11H3.05C3.5,6.83 6.83,3.5 11,3.05V1H13V3.05C17.17,3.5 20.5,6.83 20.95,11H23V13H20.95C20.5,17.17 17.17,20.5 13,20.95V23H11V20.95C6.83,20.5 3.5,17.17 3.05,13M12,5A7,7 0 0,0 5,12A7,7 0 0,0 12,19A7,7 0 0,0 19,12A7,7 0 0,0 12,5Z","gps-on":"M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M3.05,13H1V11H3.05C3.5,6.83 6.83,3.5 11,3.05V1H13V3.05C17.17,3.5 20.5,6.83 20.95,11H23V13H20.95C20.5,17.17 17.17,20.5 13,20.95V23H11V20.95C6.83,20.5 3.5,17.17 3.05,13M12,5A7,7 0 0,0 5,12A7,7 0 0,0 12,19A7,7 0 0,0 19,12A7,7 0 0,0 12,5Z",help:"M19.79,15.41C20.74,13.24 20.74,10.75 19.79,8.59L17.05,9.83C17.65,11.21 17.65,12.78 17.06,14.17L19.79,15.41M15.42,4.21C13.25,3.26 10.76,3.26 8.59,4.21L9.83,6.94C11.22,6.35 12.79,6.35 14.18,6.95L15.42,4.21M4.21,8.58C3.26,10.76 3.26,13.24 4.21,15.42L6.95,14.17C6.35,12.79 6.35,11.21 6.95,9.82L4.21,8.58M8.59,19.79C10.76,20.74 13.25,20.74 15.42,19.78L14.18,17.05C12.8,17.65 11.22,17.65 9.84,17.06L8.59,19.79M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,8A4,4 0 0,0 8,12A4,4 0 0,0 12,16A4,4 0 0,0 16,12A4,4 0 0,0 12,8Z",hide:"M11.83,9L15,12.16C15,12.11 15,12.05 15,12A3,3 0 0,0 12,9C11.94,9 11.89,9 11.83,9M7.53,9.8L9.08,11.35C9.03,11.56 9,11.77 9,12A3,3 0 0,0 12,15C12.22,15 12.44,14.97 12.65,14.92L14.2,16.47C13.53,16.8 12.79,17 12,17A5,5 0 0,1 7,12C7,11.21 7.2,10.47 7.53,9.8M2,4.27L4.28,6.55L4.73,7C3.08,8.3 1.78,10 1,12C2.73,16.39 7,19.5 12,19.5C13.55,19.5 15.03,19.2 16.38,18.66L16.81,19.08L19.73,22L21,20.73L3.27,3M12,7A5,5 0 0,1 17,12C17,12.64 16.87,13.26 16.64,13.82L19.57,16.75C21.07,15.5 22.27,13.86 23,12C21.27,7.61 17,4.5 12,4.5C10.6,4.5 9.26,4.75 8,5.2L10.17,7.35C10.74,7.13 11.35,7 12,7Z",import:"M9,16V10H5L12,3L19,10H15V16H9M5,20V18H19V20H5Z",invert:"M21,9L17,5V8H10V10H17V13M7,11L3,15L7,19V16H14V14H7V11Z",js:"M3,3H21V21H3V3M7.73,18.04C8.13,18.89 8.92,19.59 10.27,19.59C11.77,19.59 12.8,18.79 12.8,17.04V11.26H11.1V17C11.1,17.86 10.75,18.08 10.2,18.08C9.62,18.08 9.38,17.68 9.11,17.21L7.73,18.04M13.71,17.86C14.21,18.84 15.22,19.59 16.8,19.59C18.4,19.59 19.6,18.76 19.6,17.23C19.6,15.82 18.79,15.19 17.35,14.57L16.93,14.39C16.2,14.08 15.89,13.87 15.89,13.37C15.89,12.96 16.2,12.64 16.7,12.64C17.18,12.64 17.5,12.85 17.79,13.37L19.1,12.5C18.55,11.54 17.77,11.17 16.7,11.17C15.19,11.17 14.22,12.13 14.22,13.4C14.22,14.78 15.03,15.43 16.25,15.95L16.67,16.13C17.45,16.47 17.91,16.68 17.91,17.26C17.91,17.74 17.46,18.09 16.76,18.09C15.93,18.09 15.45,17.66 15.09,17.06L13.71,17.86Z",link:"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z",logout:"M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z",map:"M15,19L9,16.89V5L15,7.11M20.5,3C20.44,3 20.39,3 20.34,3L15,5.1L9,3L3.36,4.9C3.15,4.97 3,5.15 3,5.38V20.5A0.5,0.5 0 0,0 3.5,21C3.55,21 3.61,21 3.66,20.97L9,18.9L15,21L20.64,19.1C20.85,19 21,18.85 21,18.62V3.5A0.5,0.5 0 0,0 20.5,3Z",menu:"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z","minus-o":"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7",more:"M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z",ok:"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z",orientation:"M9,1H3A2,2 0 0,0 1,3V16A2,2 0 0,0 3,18H9A2,2 0 0,0 11,16V3A2,2 0 0,0 9,1M9,15H3V3H9V15M21,13H13V15H21V21H9V20H6V21A2,2 0 0,0 8,23H21A2,2 0 0,0 23,21V15A2,2 0 0,0 21,13M23,10L19,8L20.91,7.09C19.74,4.31 17,2.5 14,2.5V1A9,9 0 0,1 23,10Z",pack:"M21,16.5C21,16.88 20.79,17.21 20.47,17.38L12.57,21.82C12.41,21.94 12.21,22 12,22C11.79,22 11.59,21.94 11.43,21.82L3.53,17.38C3.21,17.21 3,16.88 3,16.5V7.5C3,7.12 3.21,6.79 3.53,6.62L11.43,2.18C11.59,2.06 11.79,2 12,2C12.21,2 12.41,2.06 12.57,2.18L20.47,6.62C20.79,6.79 21,7.12 21,7.5V16.5M12,4.15L10.11,5.22L16,8.61L17.96,7.5L12,4.15M6.04,7.5L12,10.85L13.96,9.75L8.08,6.35L6.04,7.5M5,15.91L11,19.29V12.58L5,9.21V15.91M19,15.91V9.21L13,12.58V19.29L19,15.91Z",pause:"M14,19H18V5H14M6,19H10V5H6V19Z",play:"M8,5.14V19.14L19,12.14L8,5.14Z","plus-o":"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z",poster:"M13,9H18.5L13,3.5V9M6,2H14L20,8V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V4C4,2.89 4.89,2 6,2M6,20H15L18,20V12L14,16L12,14L6,20M8,9A2,2 0 0,0 6,11A2,2 0 0,0 8,13A2,2 0 0,0 10,11A2,2 0 0,0 8,9Z",profil:"M1.1,22.9L10.1,1.1,15.8,15.8,17.6,10.1,22.9,22.9Z",quote:"M9 22C8.4 22 8 21.6 8 21V18H4C2.9 18 2 17.1 2 16V4C2 2.9 2.9 2 4 2H20C21.1 2 22 2.9 22 4V16C22 17.1 21.1 18 20 18H13.9L10.2 21.7C10 21.9 9.8 22 9.5 22H9M10 16V19.1L13.1 16H20V4H4V16H10M16.3 6L14.9 9H17V13H13V8.8L14.3 6H16.3M10.3 6L8.9 9H11V13H7V8.8L8.3 6H10.3Z",qrcode:"M3,11H5V13H3V11M11,5H13V9H11V5M9,11H13V15H11V13H9V11M15,11H17V13H19V11H21V13H19V15H21V19H19V21H17V19H13V21H11V17H15V15H17V13H15V11M19,19V15H17V19H19M15,3H21V9H15V3M17,5V7H19V5H17M3,3H9V9H3V3M5,5V7H7V5H5M3,15H9V21H3V15M5,17V19H7V17H5Z",random:"M19.78,3H11.22C10.55,3 10,3.55 10,4.22V8H16V14H19.78C20.45,14 21,13.45 21,12.78V4.22C21,3.55 20.45,3 19.78,3M12.44,6.67C11.76,6.67 11.21,6.12 11.21,5.44C11.21,4.76 11.76,4.21 12.44,4.21A1.23,1.23 0 0,1 13.67,5.44C13.67,6.12 13.12,6.67 12.44,6.67M18.56,12.78C17.88,12.79 17.33,12.24 17.32,11.56C17.31,10.88 17.86,10.33 18.54,10.32C19.22,10.31 19.77,10.86 19.78,11.56C19.77,12.23 19.23,12.77 18.56,12.78M18.56,6.67C17.88,6.68 17.33,6.13 17.32,5.45C17.31,4.77 17.86,4.22 18.54,4.21C19.22,4.2 19.77,4.75 19.78,5.44C19.78,6.12 19.24,6.66 18.56,6.67M4.22,10H12.78A1.22,1.22 0 0,1 14,11.22V19.78C14,20.45 13.45,21 12.78,21H4.22C3.55,21 3,20.45 3,19.78V11.22C3,10.55 3.55,10 4.22,10M8.5,14.28C7.83,14.28 7.28,14.83 7.28,15.5C7.28,16.17 7.83,16.72 8.5,16.72C9.17,16.72 9.72,16.17 9.72,15.5A1.22,1.22 0 0,0 8.5,14.28M5.44,11.22C4.77,11.22 4.22,11.77 4.22,12.44A1.22,1.22 0 0,0 5.44,13.66C6.11,13.66 6.66,13.11 6.66,12.44V12.44C6.66,11.77 6.11,11.22 5.44,11.22M11.55,17.33C10.88,17.33 10.33,17.88 10.33,18.55C10.33,19.22 10.88,19.77 11.55,19.77A1.22,1.22 0 0,0 12.77,18.55H12.77C12.77,17.88 12.23,17.34 11.56,17.33H11.55Z",redo:"M18.4,10.6C16.55,9 14.15,8 11.5,8C6.85,8 2.92,11.03 1.54,15.22L3.9,16C4.95,12.81 7.95,10.5 11.5,10.5C13.45,10.5 15.23,11.22 16.62,12.38L13,16H22V7L18.4,10.6Z",refresh:"M19,8L15,12H18A6,6 0 0,1 12,18C11,18 10.03,17.75 9.2,17.3L7.74,18.76C8.97,19.54 10.43,20 12,20A8,8 0 0,0 20,12H23M6,12A6,6 0 0,1 12,6C13,6 13.97,6.25 14.8,6.7L16.26,5.24C15.03,4.46 13.57,4 12,4A8,8 0 0,0 4,12H1L5,16L9,12",search:"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z",share:"M18,16.08C17.24,16.08 16.56,16.38 16.04,16.85L8.91,12.7C8.96,12.47 9,12.24 9,12C9,11.76 8.96,11.53 8.91,11.3L15.96,7.19C16.5,7.69 17.21,8 18,8A3,3 0 0,0 21,5A3,3 0 0,0 18,2A3,3 0 0,0 15,5C15,5.24 15.04,5.47 15.09,5.7L8.04,9.81C7.5,9.31 6.79,9 6,9A3,3 0 0,0 3,12A3,3 0 0,0 6,15C6.79,15 7.5,14.69 8.04,14.19L15.16,18.34C15.11,18.55 15.08,18.77 15.08,19C15.08,20.61 16.39,21.91 18,21.91C19.61,21.91 20.92,20.61 20.92,19A2.92,2.92 0 0,0 18,16.08Z",show:"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z",snapshot:"M20,4H16.83L15,2H9L7.17,4H4A2,2 0 0,0 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6A2,2 0 0,0 20,4M20,18H4V6H8.05L9.88,4H14.12L15.95,6H20V18M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15Z","tp/password":"M12,8A1,1,0,0,1,13,9A1,1,0,0,1,12,10A1,1,0,0,1,11,9A1,1,0,0,1,12,8M21,11C21,16.6,17.2,21.7,12,23C6.8,21.7,3,16.6,3,11V5L12,1L21,5V11M12,6A3,3,0,0,0,9,9C9,10.3,9.8,11.4,11,11.8V18H13V16H15V14H13V11.8C14.2,11.4,15,10.3,15,9A3,3,0,0,0,12,6Z",translate:"M12.87,15.07L10.33,12.56L10.36,12.53C12.1,10.59 13.34,8.36 14.07,6H17V4H10V2H8V4H1V6H12.17C11.5,7.92 10.44,9.75 9,11.35C8.07,10.32 7.3,9.19 6.69,8H4.69C5.42,9.63 6.42,11.17 7.67,12.56L2.58,17.58L4,19L9,14L12.11,17.11L12.87,15.07M18.5,10H16.5L12,22H14L15.12,19H19.87L21,22H23L18.5,10M15.88,17L17.5,12.67L19.12,17H15.88Z",ts:"M3,3H21V21H3V3M13.71,17.86C14.21,18.84 15.22,19.59 16.8,19.59C18.4,19.59 19.6,18.76 19.6,17.23C19.6,15.82 18.79,15.19 17.35,14.57L16.93,14.39C16.2,14.08 15.89,13.87 15.89,13.37C15.89,12.96 16.2,12.64 16.7,12.64C17.18,12.64 17.5,12.85 17.79,13.37L19.1,12.5C18.55,11.54 17.77,11.17 16.7,11.17C15.19,11.17 14.22,12.13 14.22,13.4C14.22,14.78 15.03,15.43 16.25,15.95L16.67,16.13C17.45,16.47 17.91,16.68 17.91,17.26C17.91,17.74 17.46,18.09 16.76,18.09C15.93,18.09 15.45,17.66 15.09,17.06L13.71,17.86M13,11.25H8V12.75H9.5V20H11.25V12.75H13V11.25Z",undo:"M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22 10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81 20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z",user:"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z",wait:"M6,2H18V8H18V8L14,12L18,16V16H18V22H6V16H6V16L10,12L6,8V8H6V2M16,16.5L12,12.5L8,16.5V20H16V16.5M12,11.5L16,7.5V4H8V7.5L12,11.5M10,6H14V6.75L12,8.75L10,6.75V6Z",warning:"M13 14H11V9H13M13 18H11V16H13M1 21H23L12 2L1 21Z","zoom-in":"M15.5,14L20.5,19L19,20.5L14,15.5V14.71L13.73,14.43C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.43,13.73L14.71,14H15.5M9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14M12,10H10V12H9V10H7V9H9V7H10V9H12V10Z","zoom-out":"M15.5,14H14.71L14.43,13.73C15.41,12.59 16,11.11 16,9.5A6.5,6.5 0 0,0 9.5,3A6.5,6.5 0 0,0 3,9.5A6.5,6.5 0 0,0 9.5,16C11.11,16 12.59,15.41 13.73,14.43L14,14.71V15.5L19,20.5L20.5,19L15.5,14M9.5,14C7,14 5,12 5,9.5C5,7 7,5 9.5,5C12,5 14,7 14,9.5C14,12 12,14 9.5,14M7,9H12V10H7V9Z"}},3245:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-0.69deb014a5ba4410917f.woff2"},1060:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-1.8aed9cf3ef8fa3238475.woff2"},9297:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-2.171bc766a504fe0ff63d.woff2"},3319:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-3.e2f092835a98aff60bf2.woff2"},5416:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-4.0951d39bf3e77057a881.woff2"},5533:(e,t,n)=>{"use strict";e.exports=n.p+"./fnt/dosis-5.c9822e12d95e00c0e642.woff2"},7105:e=>{"use strict";e.exports="#version 300 es\n\nprecision mediump float;\n\nuniform sampler2D uniTex;\n\nin vec2 varUV;\n\nout vec4 FragColor;\n\nvoid main() {\n    FragColor = texture(uniTex, varUV);\n}"},9723:e=>{"use strict";e.exports="#version 300 es\n\n// (0,0) pour le centre de la carte.\nuniform vec2 uniCenter;\n// Facteur de zoom.\nuniform float uniScale;\n// Pente : 0 pour pas de perspective, 1 pour forte pente.\nuniform float uniSlope;\n// canvasl.width / canvas.height\nuniform float uniRatio;\n\nin vec3 attPoint;\nin vec2 attUV;\n\nout vec2 varUV;\n\nvoid main() {\n    vec3 point = (attPoint - vec3(uniCenter, 0.0)) * uniScale;\n    varUV = attUV;\n    point.y *= uniRatio;\n    float w = uniSlope * point.y + 1.0;\n    float z = 0.0;\n    point.y += point.z * uniRatio;\n    gl_Position = vec4(point.xy, z, w);\n}"},8450:e=>{"use strict";e.exports="# Perspective basique\n\nL'effet de perspective ci-dessus est réalisé grace aux shaders suivants (en fin d'article) et à ces attributs:\n\n| No | attPos  | attUV  |\n|----|---------|--------|\n| 0  | (-1,-1) | (0, 1) |\n| 1  | (+1,-1) | (1, 1) |\n| 2  | (-1,+1) | (0, 0) |\n| 3  | (+1,+1) | (1, 0) |\n\n## Le traitement es coordonnées\n\nSi vous cliquez sur la carte, vous verrez qu'il est possible de récupérer les\ncoordonnées dans l'espace de départ (la carte à plat).\n\nPosons :\n\n* `x` : coordonnée X de `attPos` (entre -1 et +1).\n* `y` : coordonnée Y de `attPos` (entre -1 et +1).\n* `Cx` : coordonnée X de `uniCenter`.\n* `Cy` : coordonnée Y de `uniCenter`.\n* `p` : la pente (`uniSlope`) positive mais < +1.\n* `s` : l'échelle (`uniScale`).\n* `r` : l'aspect ratio du canvas (`uniRatio`).\n* `X` : coordonnée X finale du vertex.\n* `Y` : coordonnée Y finale du vertex.\n\nIci, `X` et `Y` sont compris entre -1 (coin inférieur gauche) et +1 (coin supérieur droit).\n\nD'après notre vertex shader, on a :\n\n* `X = s.(x - Cx) / w`\n* `Y = r.s.(y - Cy) / w`\n\nEt la coordonnée `w` vaut : `w = 1 + p.r.s.(y - Cy)`\n\nCe qui nous donne les équations pour revenir dans l'espace de départ :\n\n* `y = Cy + Y / (s.r.(1 - p.Y))`\n* `x = Cx + X / s + X.r.p.(y - Cy)`\n\nAttention à bien calculer `y` avant `x` car ce dernier dépend du premier.\n"},945:e=>{"use strict";e.exports="# Les instances, comment ça marche ?\n\nLes instances permettent de dessiner plusieurs fois le même object en un seul appel de la fonction `gl.drawArraysInstanced()` ou `gl.drawElementsInstanced()`.\n\nPar exemple, si je veux dessiner le petit avion simplifié avec 4 triangles,\nje peux utiliser :\n\n- un uniform pour la couleur (`vec3 uniColor`),\n- un uniform pour sa position (`vec2 uniCenter`),\n- un attribut pour definir un sommet de triangle en coordonnées polaires (`attVertexPolarCoords`) :\n  - **x** : angle en degrés\n  - **y** : distance par rapport au centre\n  - **z** : luminosité (juste pour faire un petit effet)\n\nEt voici les données pour 4 triangles (12 vertex) :\n\n|         |   0 |   1 |   2 |   3 |    4 |   5 |   6 |    7 |   8 |   9 |  10 |  11 |\n|---------|-----|-----|-----|-----|------|-----|-----|------|-----|-----|-----|-----|\n| X (ang) |   0 |  90 | -90 |   0 |  120 | 180 |   0 | -120 | 180 |   0 |  60 | -60 |\n| Y (dis) | 0.3 | 0.4 | 0.4 | 0.5 | 0.25 |   0 | 0.5 | 0.25 |   0 | 0.4 | 0.4 | 0.4 |\n| Z (lum) |   0 |   1 |   1 |   2 |  0.1 |   1 |   2 |  0.1 |   1 |   1 |   2 |   2 |\n\nEt si on veut en afficher 42, avec différentes couleurs et positions, il faut faire\nune boucle et appeler `gl.drawArrays(gl.TRIANGLES, 0, 12)` 42 fois.\n\n"},363:e=>{"use strict";e.exports='//#region 1\n/**\n * Considérons que la page HTML contient un élément de ce type:\n * <canvas id="mon-canvas"></canvas>\n */\nconst canvas = document.getElementById("mon-canvas")\n\n// On obtient un contect WebGL2 comme ceci :\nconst gl = canvas.getContext("webgl2")\n//#endregion 1\n\n//#region 2\nfunction paint(time: number) {\n    const rouge = Math.abs(Math.cos(time * 0.0005115))\n    const vert = Math.abs(Math.cos(time * 0.0008172))\n    const bleu = Math.abs(Math.cos(time * 0.0006131))\n    const opacite = 1\n    gl.clearColor(rouge, vert, bleu, opacite)\n    gl.clear(gl.COLOR_BUFFER_BIT)\n}\n//#endregion 2\n\n//#region 3\nfunction anim(time: number) {\n    window.requestAnimationFrame(anim)\n    paint(time)\n}\n\n// Il faut la lancer au moins une fois\nwindow.requestAnimationFrame(anim)\n//#endregion 3\n\n'},4515:e=>{"use strict";e.exports="# Attributs et primitives\n\nWebGL2 a un nombre limité de **primitives** d'affichage, mais en les combinant, on peut faire des choses folles.\n\n* `POINTS` : affiche des points carrés.\n* `LINE_STRIP` : affiche une ligne continue.\n* `LINE_LOOP` : affiche une ligne continue qui se referme sur elle-même. Le premier et le dernier points sont les mêmes.\n* `LINES` : affiche des segments de droites par forcément connectés entre eux.\n* `TRIANGLE_STRIP` : affiche une bande de triangles reliès par un côté.\n* `TRIANGLE_FAN` : affiche une série de triangles reliés par un côté et avec un même sommet en commun pour tous.\n* `TRIANGLES` : affiche des triangles non connectés.\n\nToutes ces primitives consomment des **vertex**. Ce sont des sortes de points avec un ensemble d'attributs.\nPour povoir afficher quoi que ce soit, WebGL2 a besoin d'un **vertex shader** qui est un programme qui lit\nles attributs d'un vertex et retourne (au moins) les coordonnées de ce vertex.\n\nSupposons que l'on souhaite afficher deux triangles. On va utiliser la primitive **TRIANGLES** qui consomme\n3 vertex par triangle affiché. Il nous faut donc 6 vertex.\nPuisqu'on veux positionner les sommets des triangles sur l'écran, il nous faudrait des attributs qui donnent\nces positions.\nOn va donc utiliser un attribute de type `vec2` (un vecteur à deux dimensions) qu'on va appeler `attPos`.\n\n"},2580:e=>{"use strict";e.exports='//#region 1\n/**\n * Considérons que la page HTML contient un élément de ce type:\n * <canvas id="mon-canvas"></canvas>\n */\nconst canvas = document.getElementById("mon-canvas")\n\n// On obtient un contect WebGL2 comme ceci :\nconst gl = canvas.getContext("webgl2")\n//#endregion 1\n\n//#region 2\nfunction paint(time: number) {\n    const rouge = Math.abs(Math.cos(time * 0.0005115))\n    const vert = Math.abs(Math.cos(time * 0.0008172))\n    const bleu = Math.abs(Math.cos(time * 0.0006131))\n    const opacite = 1\n    gl.clearColor(rouge, vert, bleu, opacite)\n    gl.clear(gl.COLOR_BUFFER_BIT)\n}\n//#endregion 2\n\n//#region 3\nfunction anim(time: number) {\n    window.requestAnimationFrame(anim)\n    paint(time)\n}\n\n// Il faut la lancer au moins une fois\nwindow.requestAnimationFrame(anim)\n//#endregion 3\n\n'},5528:e=>{"use strict";e.exports='<html>\n    <body>\n        <canvas id="mon-canvas"></canvas>\n        <script>\n            const canvas = document.getElementById("mon-canvas")\n            const gl = canvas.getContext("webgl2")\n            function anim(time) {\n                window.requestAnimationFrame(anim)\n                const rouge = Math.abs(Math.cos(time * 0.0005115))\n                const vert = Math.abs(Math.cos(time * 0.0008172))\n                const bleu = Math.abs(Math.cos(time * 0.0006131))\n                const opacite = 1\n                gl.clearColor(rouge, vert, bleu, opacite)\n                gl.clear(gl.COLOR_BUFFER_BIT)\n            }\n            window.requestAnimationFrame(anim)\n        <\/script>\n    </body>\n</html>\n'},5519:e=>{"use strict";e.exports="# Contexte, animation et couleur de fond\n\nWebGL est unebibliothèque qui nous permet d'accéder à la carte graphique depuis\nle code Javascript d'une page Web.\n\nCette bibliothèque est accessible à travers un object appelé **WebGL2RenderingContext** que l'on récupère comme ceci:\n\n<Code region=\"1\">code</Code>\n\nIl nous faut maintenant une fonction qui va remplir le canvas avec un couleur en fonction du temps.\n\n<Code region=\"2\">code</Code>\n\n> Mais pourquoi deux fonctions pour remplir le fond avec une couleur ?\n>\n> La fonction qui effectue le remplissage est `gl.clear(gl.COLOR_BUFFER_BIT)`.\n> Mais elle ne prend pas de couleur en argument.\n> Elle utilise la couleur **courante** de remplissage. Et c'est la fonction `gl.clearColor(rouge, vert, blue, opacite)` qui définit cette couleur de remplissage.\n>\n> La grande majorité des fonctions de WebGL2 fonctionnent ainsi : elles ont besoin de plus de données que\n> celles passées en argument. Ces données doivent avoir été définies plus tôt par d'autres fonctions.\n>\n> Cette complexification a pour but de gagner du temps.\n> En effet, WebGL2 permet de communiquer avec la carte graphique (le GPU) qui doit être considéré comme une\n> machine distincte de celle sur laquelle s'exécute le code Javascript. Et finalement, envoyer des données\n> au GPU est parfois plus lent que d'afficher des millions de pixels.\n>\n> Si vous vouliez juste remplir l'écran de vert à chaque image (avant d'afficher qutre chose par dessus),\n> il serait donc plus efficace d'appeler `gl.clearColor(0,1,0,1)` une fois et `gl.clear(gl.COLOR_BUFFER_BIT)`\n> à chaque image.\n\n----\n\nPour créer une animation, il faut afficher le plus d'images possible à intervalles rapprochés.\nJavascript fournit une fonction pour ça : `window.requestAnimationFrame`.\nLa fonction passée en paramètre sera exécutée (avec le temps en millisecondes comme seul argument)\nlorsque le navigateur sera prêt à afficher une image.\nCela permet d'afficher jusqu'à 60 images par secondes et aussi d'éviter l'affichage quand la page\nn'est pas visible à l'écran.\n\nVoici une fonction qui permet de gérer cette animation :\n\n<Code region=\"3\">code</Code>\n\n"},27:e=>{"use strict";e.exports="# Voronoi\n\n"},7e3:e=>{"use strict";e.exports="# Expérimentons WebGL2\n\n[Test](#test)\n\n## Articles\n\n* Les bases\n  * [Contexte, animation et couleur de fond](#article/webgl2context)\n  * [Attributs et primitives](#article/attributes)\n  * [Uniforms](#article/uniforms)\n  * [Varyings](#article/varyings)\n* Utiliser des éléments pour économiser du Vertex\n* Instances\n  * [Comment ça marche ?](#article/instances)\n* Effets\n  * [Voronoi](#article/voronoi)\n* 3D\n  * Perspective\n    * [Perspective basique](#article/basic-perspective)\n\n## Outils\n\n* [Painters](#tool/painter)"},8604:(e,t,n)=>{"use strict";e.exports=n.p+"./img/map.38f5d351ceed6620b434.webp"},2920:(e,t,n)=>{"use strict";e.exports=n.p+"./img/pin.5b877ed3ffdb8afc782e.png"},2183:()=>{},3024:()=>{},2715:()=>{},3611:()=>{},8353:()=>{},1210:()=>{},3454:()=>{}},e=>{e.O(0,[977],(()=>(5796,e(e.s=5796)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,